# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer[(1536, 1536), "float32"], B: T.Buffer[(1536, 1536), "float32"], Y: T.Buffer[(1536, 1536), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # var definition
        threadIdx_x = T.env_thread("threadIdx.x")
        blockIdx_x = T.env_thread("blockIdx.x")
        # buffer definition
        A_1 = T.buffer_decl([2359296], dtype="float32", data=A.data)
        B_1 = T.buffer_decl([2359296], dtype="float32", data=B.data)
        Y_1 = T.buffer_decl([2359296], dtype="float32", data=Y.data)
        # body
        T.launch_thread(blockIdx_x, 128)
        Y_local = T.allocate([144], "float32", "local")
        Y_local_1 = T.buffer_decl([144], dtype="float32", data=Y_local, scope="local")
        A_shared_dyn = T.allocate([1536], "float32", "shared.dyn")
        A_shared_dyn_1 = T.buffer_decl([1536], dtype="float32", data=A_shared_dyn, scope="shared.dyn")
        B_shared_dyn = T.allocate([3072], "float32", "shared.dyn")
        B_shared_dyn_1 = T.buffer_decl([3072], dtype="float32", data=B_shared_dyn, scope="shared.dyn")
        A_shared_dyn_local = T.allocate([6], "float32x4", "local")
        A_shared_dyn_local_1 = T.buffer_decl([6], dtype="float32x4", data=A_shared_dyn_local, scope="local")
        B_shared_dyn_local = T.allocate([24], "float32", "local")
        B_shared_dyn_local_1 = T.buffer_decl([24], dtype="float32", data=B_shared_dyn_local, scope="local")
        T.launch_thread(threadIdx_x, 128)
        Y_local_1[0] = T.float32(0)
        Y_local_1[12] = T.float32(0)
        Y_local_1[24] = T.float32(0)
        Y_local_1[36] = T.float32(0)
        Y_local_1[48] = T.float32(0)
        Y_local_1[60] = T.float32(0)
        Y_local_1[72] = T.float32(0)
        Y_local_1[84] = T.float32(0)
        Y_local_1[96] = T.float32(0)
        Y_local_1[108] = T.float32(0)
        Y_local_1[120] = T.float32(0)
        Y_local_1[132] = T.float32(0)
        Y_local_1[1] = T.float32(0)
        Y_local_1[13] = T.float32(0)
        Y_local_1[25] = T.float32(0)
        Y_local_1[37] = T.float32(0)
        Y_local_1[49] = T.float32(0)
        Y_local_1[61] = T.float32(0)
        Y_local_1[73] = T.float32(0)
        Y_local_1[85] = T.float32(0)
        Y_local_1[97] = T.float32(0)
        Y_local_1[109] = T.float32(0)
        Y_local_1[121] = T.float32(0)
        Y_local_1[133] = T.float32(0)
        Y_local_1[2] = T.float32(0)
        Y_local_1[14] = T.float32(0)
        Y_local_1[26] = T.float32(0)
        Y_local_1[38] = T.float32(0)
        Y_local_1[50] = T.float32(0)
        Y_local_1[62] = T.float32(0)
        Y_local_1[74] = T.float32(0)
        Y_local_1[86] = T.float32(0)
        Y_local_1[98] = T.float32(0)
        Y_local_1[110] = T.float32(0)
        Y_local_1[122] = T.float32(0)
        Y_local_1[134] = T.float32(0)
        Y_local_1[3] = T.float32(0)
        Y_local_1[15] = T.float32(0)
        Y_local_1[27] = T.float32(0)
        Y_local_1[39] = T.float32(0)
        Y_local_1[51] = T.float32(0)
        Y_local_1[63] = T.float32(0)
        Y_local_1[75] = T.float32(0)
        Y_local_1[87] = T.float32(0)
        Y_local_1[99] = T.float32(0)
        Y_local_1[111] = T.float32(0)
        Y_local_1[123] = T.float32(0)
        Y_local_1[135] = T.float32(0)
        Y_local_1[4] = T.float32(0)
        Y_local_1[16] = T.float32(0)
        Y_local_1[28] = T.float32(0)
        Y_local_1[40] = T.float32(0)
        Y_local_1[52] = T.float32(0)
        Y_local_1[64] = T.float32(0)
        Y_local_1[76] = T.float32(0)
        Y_local_1[88] = T.float32(0)
        Y_local_1[100] = T.float32(0)
        Y_local_1[112] = T.float32(0)
        Y_local_1[124] = T.float32(0)
        Y_local_1[136] = T.float32(0)
        Y_local_1[5] = T.float32(0)
        Y_local_1[17] = T.float32(0)
        Y_local_1[29] = T.float32(0)
        Y_local_1[41] = T.float32(0)
        Y_local_1[53] = T.float32(0)
        Y_local_1[65] = T.float32(0)
        Y_local_1[77] = T.float32(0)
        Y_local_1[89] = T.float32(0)
        Y_local_1[101] = T.float32(0)
        Y_local_1[113] = T.float32(0)
        Y_local_1[125] = T.float32(0)
        Y_local_1[137] = T.float32(0)
        Y_local_1[6] = T.float32(0)
        Y_local_1[18] = T.float32(0)
        Y_local_1[30] = T.float32(0)
        Y_local_1[42] = T.float32(0)
        Y_local_1[54] = T.float32(0)
        Y_local_1[66] = T.float32(0)
        Y_local_1[78] = T.float32(0)
        Y_local_1[90] = T.float32(0)
        Y_local_1[102] = T.float32(0)
        Y_local_1[114] = T.float32(0)
        Y_local_1[126] = T.float32(0)
        Y_local_1[138] = T.float32(0)
        Y_local_1[7] = T.float32(0)
        Y_local_1[19] = T.float32(0)
        Y_local_1[31] = T.float32(0)
        Y_local_1[43] = T.float32(0)
        Y_local_1[55] = T.float32(0)
        Y_local_1[67] = T.float32(0)
        Y_local_1[79] = T.float32(0)
        Y_local_1[91] = T.float32(0)
        Y_local_1[103] = T.float32(0)
        Y_local_1[115] = T.float32(0)
        Y_local_1[127] = T.float32(0)
        Y_local_1[139] = T.float32(0)
        Y_local_1[8] = T.float32(0)
        Y_local_1[20] = T.float32(0)
        Y_local_1[32] = T.float32(0)
        Y_local_1[44] = T.float32(0)
        Y_local_1[56] = T.float32(0)
        Y_local_1[68] = T.float32(0)
        Y_local_1[80] = T.float32(0)
        Y_local_1[92] = T.float32(0)
        Y_local_1[104] = T.float32(0)
        Y_local_1[116] = T.float32(0)
        Y_local_1[128] = T.float32(0)
        Y_local_1[140] = T.float32(0)
        Y_local_1[9] = T.float32(0)
        Y_local_1[21] = T.float32(0)
        Y_local_1[33] = T.float32(0)
        Y_local_1[45] = T.float32(0)
        Y_local_1[57] = T.float32(0)
        Y_local_1[69] = T.float32(0)
        Y_local_1[81] = T.float32(0)
        Y_local_1[93] = T.float32(0)
        Y_local_1[105] = T.float32(0)
        Y_local_1[117] = T.float32(0)
        Y_local_1[129] = T.float32(0)
        Y_local_1[141] = T.float32(0)
        Y_local_1[10] = T.float32(0)
        Y_local_1[22] = T.float32(0)
        Y_local_1[34] = T.float32(0)
        Y_local_1[46] = T.float32(0)
        Y_local_1[58] = T.float32(0)
        Y_local_1[70] = T.float32(0)
        Y_local_1[82] = T.float32(0)
        Y_local_1[94] = T.float32(0)
        Y_local_1[106] = T.float32(0)
        Y_local_1[118] = T.float32(0)
        Y_local_1[130] = T.float32(0)
        Y_local_1[142] = T.float32(0)
        Y_local_1[11] = T.float32(0)
        Y_local_1[23] = T.float32(0)
        Y_local_1[35] = T.float32(0)
        Y_local_1[47] = T.float32(0)
        Y_local_1[59] = T.float32(0)
        Y_local_1[71] = T.float32(0)
        Y_local_1[83] = T.float32(0)
        Y_local_1[95] = T.float32(0)
        Y_local_1[107] = T.float32(0)
        Y_local_1[119] = T.float32(0)
        Y_local_1[131] = T.float32(0)
        Y_local_1[143] = T.float32(0)
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[T.broadcast(0, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(32, 3) * T.broadcast(32, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(4, 3) % T.broadcast(2, 3) * T.broadcast(16, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(8, 3) % T.broadcast(4, 3) * T.broadcast(4, 3) + T.ramp(threadIdx_x * 3, 1, 3) % T.broadcast(4, 3)] = A_1[threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3:threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 3]
            T.attr(0, "async_scope", 1)
            for ax0_ax1_fused_2 in T.serial(6):
                B_shared_dyn_1[(threadIdx_x * 3 + ax0_ax1_fused_2 // 2) // 32 * 64 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 4 // 2 * 32 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 32 // 4 * 4 + (threadIdx_x * 2 + ax0_ax1_fused_2) % 4] = B_1[threadIdx_x // 32 * 1536 + blockIdx_x % 8 * 192 + threadIdx_x % 32 * 6 + ax0_ax1_fused_2]
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[T.broadcast(384, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(32, 3) * T.broadcast(32, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(4, 3) % T.broadcast(2, 3) * T.broadcast(16, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(8, 3) % T.broadcast(4, 3) * T.broadcast(4, 3) + T.ramp(threadIdx_x * 3, 1, 3) % T.broadcast(4, 3)] = A_1[threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 6144:threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 6144 + 3]
            T.attr(0, "async_scope", 1)
            for ax0_ax1_fused_2 in T.serial(6):
                B_shared_dyn_1[(threadIdx_x * 3 + ax0_ax1_fused_2 // 2) // 32 * 64 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 4 // 2 * 32 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 32 // 4 * 4 + (threadIdx_x * 2 + ax0_ax1_fused_2) % 4 + 768] = B_1[threadIdx_x // 32 * 1536 + blockIdx_x % 8 * 192 + threadIdx_x % 32 * 6 + ax0_ax1_fused_2 + 6144]
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[T.broadcast(768, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(32, 3) * T.broadcast(32, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(4, 3) % T.broadcast(2, 3) * T.broadcast(16, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(8, 3) % T.broadcast(4, 3) * T.broadcast(4, 3) + T.ramp(threadIdx_x * 3, 1, 3) % T.broadcast(4, 3)] = A_1[threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 12288:threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 12288 + 3]
            T.attr(0, "async_scope", 1)
            for ax0_ax1_fused_2 in T.serial(6):
                B_shared_dyn_1[(threadIdx_x * 3 + ax0_ax1_fused_2 // 2) // 32 * 64 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 4 // 2 * 32 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 32 // 4 * 4 + (threadIdx_x * 2 + ax0_ax1_fused_2) % 4 + 1536] = B_1[threadIdx_x // 32 * 1536 + blockIdx_x % 8 * 192 + threadIdx_x % 32 * 6 + ax0_ax1_fused_2 + 12288]
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 2)
            for ax1_0 in T.serial(3):
                cse_var_1: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_1) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_1) // 8) % 4 * 4:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_1) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_1) // 8) % 4 * 4 + 4]
            for ax1_0 in T.serial(3):
                cse_var_2: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_2:cse_var_2 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_2) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_2) // 8) % 8 * 4:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_2) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_2) // 8) % 8 * 4 + 4]
        for k_0 in T.serial(381):
            with T.attr(0, "async_commit_queue_scope", 0):
                with T.attr(0, "async_scope", 1):
                    A_shared_dyn_1[T.broadcast((k_0 + 3) % 4 * 384, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(32, 3) * T.broadcast(32, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(4, 3) % T.broadcast(2, 3) * T.broadcast(16, 3) + T.ramp(threadIdx_x * 3, 1, 3) // T.broadcast(8, 3) % T.broadcast(4, 3) * T.broadcast(4, 3) + T.ramp(threadIdx_x * 3, 1, 3) % T.broadcast(4, 3)] = A_1[k_0 * 6144 + threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 18432:k_0 * 6144 + threadIdx_x // 32 * 1536 + blockIdx_x // 8 * 96 + threadIdx_x % 32 * 3 + 18432 + 3]
                T.attr(0, "async_scope", 1)
                for ax0_ax1_fused_2 in T.serial(6):
                    B_shared_dyn_1[(k_0 + 3) % 4 * 768 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) // 32 * 64 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 4 // 2 * 32 + (threadIdx_x * 3 + ax0_ax1_fused_2 // 2) % 32 // 4 * 4 + (threadIdx_x * 2 + ax0_ax1_fused_2) % 4] = B_1[k_0 * 6144 + threadIdx_x // 32 * 1536 + blockIdx_x % 8 * 192 + threadIdx_x % 32 * 6 + ax0_ax1_fused_2 + 18432]
            with T.attr(0, "async_wait_queue_scope", 0):
                T.attr(0, "async_wait_inflight_count", 2)
                for ax1_0 in T.serial(3):
                    cse_var_3: T.int32 = ax1_0 * 4
                    A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[k_0 % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_3) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_3) // 8) % 4 * 4 + 96:k_0 % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_3) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_3) // 8) % 4 * 4 + 96 + 4]
                for ax1_0 in T.serial(3):
                    cse_var_4: T.int32 = ax1_0 * 4
                    B_shared_dyn_local_1[cse_var_4 + 12:cse_var_4 + 12 + 4] = B_shared_dyn_1[k_0 % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_4) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_4) // 8) % 8 * 4 + 192:k_0 % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_4) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_4) // 8) % 8 * 4 + 192 + 4]
                Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
                for ax1_0 in T.serial(3):
                    cse_var_5: T.int32 = ax1_0 * 4
                    A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[k_0 % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_5) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_5) // 8) % 4 * 4 + 192:k_0 % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_5) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_5) // 8) % 4 * 4 + 192 + 4]
                for ax1_0 in T.serial(3):
                    cse_var_6: T.int32 = ax1_0 * 4
                    B_shared_dyn_local_1[cse_var_6:cse_var_6 + 4] = B_shared_dyn_1[k_0 % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_6) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_6) // 8) % 8 * 4 + 384:k_0 % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_6) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_6) // 8) % 8 * 4 + 384 + 4]
                Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
                Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
                Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
                Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
                Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
                Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
                Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
                Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
                Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
                Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
                Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
                Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
                Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
                Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
                Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
                Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
                Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
                Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
                Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
                Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
                Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
                Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
                Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
                Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
                Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
                Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
                Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
                for ax1_0 in T.serial(3):
                    cse_var_7: T.int32 = ax1_0 * 4
                    A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[k_0 % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_7) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_7) // 8) % 4 * 4 + 288:k_0 % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_7) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_7) // 8) % 4 * 4 + 288 + 4]
                for ax1_0 in T.serial(3):
                    cse_var_8: T.int32 = ax1_0 * 4
                    B_shared_dyn_local_1[cse_var_8 + 12:cse_var_8 + 12 + 4] = B_shared_dyn_1[k_0 % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_8) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_8) // 8) % 8 * 4 + 576:k_0 % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_8) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_8) // 8) % 8 * 4 + 576 + 4]
                Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
            for ax1_0 in T.serial(3):
                cse_var_9: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(k_0 + 1) % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_9) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_9) // 8) % 4 * 4:(k_0 + 1) % 4 * 384 + (threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_9) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_9) // 8) % 4 * 4 + 4]
            for ax1_0 in T.serial(3):
                cse_var_10: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_10:cse_var_10 + 4] = B_shared_dyn_1[(k_0 + 1) % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_10) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_10) // 8) % 8 * 4:(k_0 + 1) % 4 * 768 + (threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_10) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_10) // 8) % 8 * 4 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 1)
            for ax1_0 in T.serial(3):
                cse_var_11: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_11) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_11) // 8) % 4 * 4 + 480:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_11) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_11) // 8) % 4 * 4 + 480 + 4]
            for ax1_0 in T.serial(3):
                cse_var_12: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_12 + 12:cse_var_12 + 12 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_12) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_12) // 8) % 8 * 4 + 960:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_12) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_12) // 8) % 8 * 4 + 960 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
            for ax1_0 in T.serial(3):
                cse_var_13: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_13) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_13) // 8) % 4 * 4 + 576:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_13) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_13) // 8) % 4 * 4 + 576 + 4]
            for ax1_0 in T.serial(3):
                cse_var_14: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_14:cse_var_14 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_14) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_14) // 8) % 8 * 4 + 1152:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_14) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_14) // 8) % 8 * 4 + 1152 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
            for ax1_0 in T.serial(3):
                cse_var_15: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_15) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_15) // 8) % 4 * 4 + 672:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_15) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_15) // 8) % 4 * 4 + 672 + 4]
            for ax1_0 in T.serial(3):
                cse_var_16: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_16 + 12:cse_var_16 + 12 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_16) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_16) // 8) % 8 * 4 + 1344:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_16) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_16) // 8) % 8 * 4 + 1344 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
        for ax1_0 in T.serial(3):
            cse_var_17: T.int32 = ax1_0 * 4
            A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_17) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_17) // 8) % 4 * 4 + 768:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_17) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_17) // 8) % 4 * 4 + 768 + 4]
        for ax1_0 in T.serial(3):
            cse_var_18: T.int32 = ax1_0 * 4
            B_shared_dyn_local_1[cse_var_18:cse_var_18 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_18) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_18) // 8) % 8 * 4 + 1536:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_18) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_18) // 8) % 8 * 4 + 1536 + 4]
        Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 0)
            for ax1_0 in T.serial(3):
                cse_var_19: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_19) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_19) // 8) % 4 * 4 + 864:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_19) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_19) // 8) % 4 * 4 + 864 + 4]
            for ax1_0 in T.serial(3):
                cse_var_20: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_20 + 12:cse_var_20 + 12 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_20) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_20) // 8) % 8 * 4 + 1728:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_20) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_20) // 8) % 8 * 4 + 1728 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
            for ax1_0 in T.serial(3):
                cse_var_21: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_21) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_21) // 8) % 4 * 4 + 960:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_21) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_21) // 8) % 4 * 4 + 960 + 4]
            for ax1_0 in T.serial(3):
                cse_var_22: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_22:cse_var_22 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_22) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_22) // 8) % 8 * 4 + 1920:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_22) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_22) // 8) % 8 * 4 + 1920 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
            for ax1_0 in T.serial(3):
                cse_var_23: T.int32 = ax1_0 * 4
                A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_23) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_23) // 8) % 4 * 4 + 1056:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_23) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_23) // 8) % 4 * 4 + 1056 + 4]
            for ax1_0 in T.serial(3):
                cse_var_24: T.int32 = ax1_0 * 4
                B_shared_dyn_local_1[cse_var_24 + 12:cse_var_24 + 12 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_24) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_24) // 8) % 8 * 4 + 2112:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_24) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_24) // 8) % 8 * 4 + 2112 + 4]
            Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
        for ax1_0 in T.serial(3):
            cse_var_25: T.int32 = ax1_0 * 4
            A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_25) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_25) // 8) % 4 * 4 + 1152:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_25) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_25) // 8) % 4 * 4 + 1152 + 4]
        for ax1_0 in T.serial(3):
            cse_var_26: T.int32 = ax1_0 * 4
            B_shared_dyn_local_1[cse_var_26:cse_var_26 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_26) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_26) // 8) % 8 * 4 + 2304:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_26) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_26) // 8) % 8 * 4 + 2304 + 4]
        Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
        for ax1_0 in T.serial(3):
            cse_var_27: T.int32 = ax1_0 * 4
            A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_27) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_27) // 8) % 4 * 4 + 1248:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_27) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_27) // 8) % 4 * 4 + 1248 + 4]
        for ax1_0 in T.serial(3):
            cse_var_28: T.int32 = ax1_0 * 4
            B_shared_dyn_local_1[cse_var_28 + 12:cse_var_28 + 12 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_28) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_28) // 8) % 8 * 4 + 2496:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_28) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_28) // 8) % 8 * 4 + 2496 + 4]
        Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
        for ax1_0 in T.serial(3):
            cse_var_29: T.int32 = ax1_0 * 4
            A_shared_dyn_local_1[ax1_0] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_29) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_29) // 8) % 4 * 4 + 1344:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_29) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_29) // 8) % 4 * 4 + 1344 + 4]
        for ax1_0 in T.serial(3):
            cse_var_30: T.int32 = ax1_0 * 4
            B_shared_dyn_local_1[cse_var_30:cse_var_30 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_30) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_30) // 8) % 8 * 4 + 2688:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_30) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_30) // 8) % 8 * 4 + 2688 + 4]
        Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
        for ax1_0 in T.serial(3):
            cse_var_31: T.int32 = ax1_0 * 4
            A_shared_dyn_local_1[ax1_0 + 3] = A_shared_dyn_1[(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_31) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_31) // 8) % 4 * 4 + 1440:(threadIdx_x % 32 // 8 * 24 + threadIdx_x % 2 * 12 + cse_var_31) // 32 * 32 + (ax1_0 + threadIdx_x % 2) % 2 * 16 + (threadIdx_x % 32 // 8 * 3 + (threadIdx_x % 2 * 12 + cse_var_31) // 8) % 4 * 4 + 1440 + 4]
        for ax1_0 in T.serial(3):
            cse_var_32: T.int32 = ax1_0 * 4
            B_shared_dyn_local_1[cse_var_32 + 12:cse_var_32 + 12 + 4] = B_shared_dyn_1[(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_32) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_32) // 8) % 8 * 4 + 2880:(threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_32) // 64 * 64 + (threadIdx_x % 8 // 2 + ax1_0) % 2 * 32 + (threadIdx_x // 32 * 6 + (threadIdx_x % 8 // 2 * 12 + cse_var_32) // 8) % 8 * 4 + 2880 + 4]
        Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[0:48:12] = Y_local_1[0:48:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[48:96:12] = Y_local_1[48:96:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[96:144:12] = Y_local_1[96:144:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[1:49:12] = Y_local_1[1:49:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[49:97:12] = Y_local_1[49:97:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[97:145:12] = Y_local_1[97:145:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[2:50:12] = Y_local_1[2:50:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[50:98:12] = Y_local_1[50:98:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[98:146:12] = Y_local_1[98:146:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[3:51:12] = Y_local_1[3:51:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[51:99:12] = Y_local_1[51:99:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[99:147:12] = Y_local_1[99:147:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[4:52:12] = Y_local_1[4:52:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[52:100:12] = Y_local_1[52:100:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[100:148:12] = Y_local_1[100:148:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[5:53:12] = Y_local_1[5:53:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[53:101:12] = Y_local_1[53:101:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[101:149:12] = Y_local_1[101:149:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[6:54:12] = Y_local_1[6:54:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[54:102:12] = Y_local_1[54:102:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[102:150:12] = Y_local_1[102:150:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[7:55:12] = Y_local_1[7:55:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[55:103:12] = Y_local_1[55:103:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[103:151:12] = Y_local_1[103:151:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[8:56:12] = Y_local_1[8:56:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[56:104:12] = Y_local_1[56:104:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[104:152:12] = Y_local_1[104:152:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[9:57:12] = Y_local_1[9:57:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[57:105:12] = Y_local_1[57:105:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[105:153:12] = Y_local_1[105:153:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[10:58:12] = Y_local_1[10:58:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[58:106:12] = Y_local_1[58:106:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[106:154:12] = Y_local_1[106:154:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[11:59:12] = Y_local_1[11:59:12] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[59:107:12] = Y_local_1[59:107:12] + A_shared_dyn_local_1[4] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[107:155:12] = Y_local_1[107:155:12] + A_shared_dyn_local_1[5] * T.broadcast(B_shared_dyn_local_1[23], 4)
        for ax1_0 in T.serial(3):
            cse_var_33: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_33:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_33 + 4] = Y_local_1[cse_var_33:cse_var_33 + 4]
        for ax1_0 in T.serial(3):
            cse_var_34: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_34 + 1536:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_34 + 1536 + 4] = Y_local_1[cse_var_34 + 12:cse_var_34 + 12 + 4]
        for ax1_0 in T.serial(3):
            cse_var_35: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_35 + 3072:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_35 + 3072 + 4] = Y_local_1[cse_var_35 + 24:cse_var_35 + 24 + 4]
        for ax1_0 in T.serial(3):
            cse_var_36: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_36 + 4608:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_36 + 4608 + 4] = Y_local_1[cse_var_36 + 36:cse_var_36 + 36 + 4]
        for ax1_0 in T.serial(3):
            cse_var_37: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_37 + 6144:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_37 + 6144 + 4] = Y_local_1[cse_var_37 + 48:cse_var_37 + 48 + 4]
        for ax1_0 in T.serial(3):
            cse_var_38: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_38 + 7680:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_38 + 7680 + 4] = Y_local_1[cse_var_38 + 60:cse_var_38 + 60 + 4]
        for ax1_0 in T.serial(3):
            cse_var_39: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_39 + 9216:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_39 + 9216 + 4] = Y_local_1[cse_var_39 + 72:cse_var_39 + 72 + 4]
        for ax1_0 in T.serial(3):
            cse_var_40: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_40 + 10752:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_40 + 10752 + 4] = Y_local_1[cse_var_40 + 84:cse_var_40 + 84 + 4]
        for ax1_0 in T.serial(3):
            cse_var_41: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_41 + 12288:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_41 + 12288 + 4] = Y_local_1[cse_var_41 + 96:cse_var_41 + 96 + 4]
        for ax1_0 in T.serial(3):
            cse_var_42: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_42 + 13824:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_42 + 13824 + 4] = Y_local_1[cse_var_42 + 108:cse_var_42 + 108 + 4]
        for ax1_0 in T.serial(3):
            cse_var_43: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_43 + 15360:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_43 + 15360 + 4] = Y_local_1[cse_var_43 + 120:cse_var_43 + 120 + 4]
        for ax1_0 in T.serial(3):
            cse_var_44: T.int32 = ax1_0 * 4
            Y_1[blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_44 + 16896:blockIdx_x // 8 * 147456 + threadIdx_x % 32 // 8 * 36864 + threadIdx_x % 2 * 18432 + blockIdx_x % 8 * 192 + threadIdx_x // 32 * 48 + threadIdx_x % 8 // 2 * 12 + cse_var_44 + 16896 + 4] = Y_local_1[cse_var_44 + 132:cse_var_44 + 132 + 4]
    

