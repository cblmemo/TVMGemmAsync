
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(96) main_kernel0(float* __restrict__ A, float* __restrict__ B, float* __restrict__ Y) {
  float Y_local[96];
  __shared__ float A_shared[768];
  __shared__ float B_shared[768];
  Y_local[0] = 0.000000e+00f;
  Y_local[24] = 0.000000e+00f;
  Y_local[48] = 0.000000e+00f;
  Y_local[72] = 0.000000e+00f;
  Y_local[1] = 0.000000e+00f;
  Y_local[25] = 0.000000e+00f;
  Y_local[49] = 0.000000e+00f;
  Y_local[73] = 0.000000e+00f;
  Y_local[2] = 0.000000e+00f;
  Y_local[26] = 0.000000e+00f;
  Y_local[50] = 0.000000e+00f;
  Y_local[74] = 0.000000e+00f;
  Y_local[3] = 0.000000e+00f;
  Y_local[27] = 0.000000e+00f;
  Y_local[51] = 0.000000e+00f;
  Y_local[75] = 0.000000e+00f;
  Y_local[4] = 0.000000e+00f;
  Y_local[28] = 0.000000e+00f;
  Y_local[52] = 0.000000e+00f;
  Y_local[76] = 0.000000e+00f;
  Y_local[5] = 0.000000e+00f;
  Y_local[29] = 0.000000e+00f;
  Y_local[53] = 0.000000e+00f;
  Y_local[77] = 0.000000e+00f;
  Y_local[6] = 0.000000e+00f;
  Y_local[30] = 0.000000e+00f;
  Y_local[54] = 0.000000e+00f;
  Y_local[78] = 0.000000e+00f;
  Y_local[7] = 0.000000e+00f;
  Y_local[31] = 0.000000e+00f;
  Y_local[55] = 0.000000e+00f;
  Y_local[79] = 0.000000e+00f;
  Y_local[8] = 0.000000e+00f;
  Y_local[32] = 0.000000e+00f;
  Y_local[56] = 0.000000e+00f;
  Y_local[80] = 0.000000e+00f;
  Y_local[9] = 0.000000e+00f;
  Y_local[33] = 0.000000e+00f;
  Y_local[57] = 0.000000e+00f;
  Y_local[81] = 0.000000e+00f;
  Y_local[10] = 0.000000e+00f;
  Y_local[34] = 0.000000e+00f;
  Y_local[58] = 0.000000e+00f;
  Y_local[82] = 0.000000e+00f;
  Y_local[11] = 0.000000e+00f;
  Y_local[35] = 0.000000e+00f;
  Y_local[59] = 0.000000e+00f;
  Y_local[83] = 0.000000e+00f;
  Y_local[12] = 0.000000e+00f;
  Y_local[36] = 0.000000e+00f;
  Y_local[60] = 0.000000e+00f;
  Y_local[84] = 0.000000e+00f;
  Y_local[13] = 0.000000e+00f;
  Y_local[37] = 0.000000e+00f;
  Y_local[61] = 0.000000e+00f;
  Y_local[85] = 0.000000e+00f;
  Y_local[14] = 0.000000e+00f;
  Y_local[38] = 0.000000e+00f;
  Y_local[62] = 0.000000e+00f;
  Y_local[86] = 0.000000e+00f;
  Y_local[15] = 0.000000e+00f;
  Y_local[39] = 0.000000e+00f;
  Y_local[63] = 0.000000e+00f;
  Y_local[87] = 0.000000e+00f;
  Y_local[16] = 0.000000e+00f;
  Y_local[40] = 0.000000e+00f;
  Y_local[64] = 0.000000e+00f;
  Y_local[88] = 0.000000e+00f;
  Y_local[17] = 0.000000e+00f;
  Y_local[41] = 0.000000e+00f;
  Y_local[65] = 0.000000e+00f;
  Y_local[89] = 0.000000e+00f;
  Y_local[18] = 0.000000e+00f;
  Y_local[42] = 0.000000e+00f;
  Y_local[66] = 0.000000e+00f;
  Y_local[90] = 0.000000e+00f;
  Y_local[19] = 0.000000e+00f;
  Y_local[43] = 0.000000e+00f;
  Y_local[67] = 0.000000e+00f;
  Y_local[91] = 0.000000e+00f;
  Y_local[20] = 0.000000e+00f;
  Y_local[44] = 0.000000e+00f;
  Y_local[68] = 0.000000e+00f;
  Y_local[92] = 0.000000e+00f;
  Y_local[21] = 0.000000e+00f;
  Y_local[45] = 0.000000e+00f;
  Y_local[69] = 0.000000e+00f;
  Y_local[93] = 0.000000e+00f;
  Y_local[22] = 0.000000e+00f;
  Y_local[46] = 0.000000e+00f;
  Y_local[70] = 0.000000e+00f;
  Y_local[94] = 0.000000e+00f;
  Y_local[23] = 0.000000e+00f;
  Y_local[47] = 0.000000e+00f;
  Y_local[71] = 0.000000e+00f;
  Y_local[95] = 0.000000e+00f;
  for (int k_0 = 0; k_0 < 384; ++k_0) {
    __syncthreads();
    *(float4*)(A_shared + (((int)threadIdx.x) * 4)) = *(float4*)(A + ((((k_0 * 24576) + ((((int)threadIdx.x) / 24) * 3072)) + ((((int)blockIdx.x) >> 5) * 96)) + ((((int)threadIdx.x) % 24) * 4)));
    *(float4*)(A_shared + ((((int)threadIdx.x) * 4) + 384)) = *(float4*)(A + (((((k_0 * 24576) + ((((int)threadIdx.x) / 24) * 3072)) + ((((int)blockIdx.x) >> 5) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 12288));
    *(float4*)(B_shared + (((int)threadIdx.x) * 4)) = *(float4*)(B + ((((k_0 * 24576) + ((((int)threadIdx.x) / 24) * 3072)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 4)));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 384)) = *(float4*)(B + (((((k_0 * 24576) + ((((int)threadIdx.x) / 24) * 3072)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 12288));
    __syncthreads();
    Y_local[0] = (Y_local[0] + (A_shared[((((int)threadIdx.x) / 24) * 12)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[24] = (Y_local[24] + (A_shared[((((int)threadIdx.x) / 24) * 12)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 48)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[1] = (Y_local[1] + (A_shared[((((int)threadIdx.x) / 24) * 12)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[25] = (Y_local[25] + (A_shared[((((int)threadIdx.x) / 24) * 12)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 1)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 49)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 2)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 50)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 3)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 51)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 144)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 144)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 144)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 144)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 145)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 145)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 145)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 145)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 146)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 146)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 146)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 146)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 147)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 147)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 147)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 147)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 192)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 192)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 240)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 240)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 192)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 192)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 240)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 240)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 193)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 193)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 241)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 241)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 193)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 193)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 241)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 241)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 194)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 194)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 242)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 242)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 194)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 194)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 242)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 242)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 195)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 195)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 243)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 243)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 195)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 195)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 243)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 243)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 288)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 288)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 336)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 336)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 288)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 288)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 336)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 336)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 289)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 289)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 337)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 337)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 289)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 289)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 337)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 337)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 290)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 290)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 338)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 338)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 290)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 290)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 338)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 338)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 291)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 291)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 339)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 339)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 291)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 291)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 339)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 339)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 384)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 384)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 432)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 432)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 384)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 384)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 432)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 432)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 385)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 385)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 433)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 433)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 385)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 385)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 433)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 433)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 386)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 386)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 434)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 434)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 386)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 386)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 434)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 434)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 387)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 387)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 435)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 435)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 387)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 387)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 435)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 435)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 480)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 480)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 528)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 528)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 480)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 480)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 528)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 528)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 481)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 481)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 529)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 529)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 481)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 481)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 529)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 529)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 482)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 482)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 530)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 530)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 482)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 482)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 530)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 530)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 483)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 483)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 531)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 531)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 483)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 483)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 531)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 531)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 576)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 576)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 624)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 624)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 576)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 576)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 624)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 624)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 577)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 577)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 625)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 625)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 577)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 577)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 625)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 625)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 578)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 578)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 626)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 626)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 578)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 578)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 626)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 626)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 579)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 579)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 627)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 627)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 579)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 579)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 627)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 627)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 672)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[24] = (Y_local[24] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 672)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[48] = (Y_local[48] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 720)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[72] = (Y_local[72] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 720)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 672)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[25] = (Y_local[25] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 672)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[49] = (Y_local[49] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 720)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[73] = (Y_local[73] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 720)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 673)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[26] = (Y_local[26] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 673)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[50] = (Y_local[50] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 721)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[74] = (Y_local[74] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 721)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 673)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[27] = (Y_local[27] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 673)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[51] = (Y_local[51] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 721)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[75] = (Y_local[75] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 721)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 674)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[28] = (Y_local[28] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 674)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[52] = (Y_local[52] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 722)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[76] = (Y_local[76] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 722)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 674)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[29] = (Y_local[29] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 674)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[53] = (Y_local[53] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 722)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[77] = (Y_local[77] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 722)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 675)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[30] = (Y_local[30] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 675)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[54] = (Y_local[54] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 723)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[78] = (Y_local[78] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 723)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 675)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[31] = (Y_local[31] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 675)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[55] = (Y_local[55] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 723)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[79] = (Y_local[79] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 723)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 4)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 52)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 5)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 53)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 6)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 54)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 7)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 55)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 148)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 148)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 148)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 148)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 149)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 149)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 149)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 149)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 150)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 150)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 150)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 150)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 151)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 151)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 151)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 151)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 196)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 196)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 244)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 244)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 196)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 196)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 244)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 244)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 197)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 197)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 245)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 245)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 197)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 197)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 245)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 245)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 198)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 198)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 246)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 246)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 198)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 198)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 246)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 246)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 199)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 199)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 247)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 247)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 199)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 199)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 247)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 247)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 292)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 292)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 340)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 340)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 292)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 292)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 340)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 340)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 293)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 293)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 341)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 341)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 293)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 293)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 341)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 341)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 294)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 294)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 342)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 342)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 294)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 294)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 342)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 342)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 295)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 295)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 343)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 343)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 295)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 295)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 343)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 343)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 388)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 388)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 436)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 436)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 388)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 388)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 436)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 436)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 389)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 389)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 437)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 437)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 389)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 389)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 437)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 437)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 390)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 390)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 438)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 438)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 390)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 390)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 438)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 438)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 391)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 391)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 439)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 439)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 391)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 391)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 439)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 439)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 484)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 484)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 532)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 532)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 484)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 484)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 532)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 532)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 485)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 485)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 533)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 533)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 485)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 485)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 533)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 533)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 486)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 486)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 534)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 534)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 486)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 486)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 534)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 534)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 487)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 487)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 535)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 535)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 487)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 487)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 535)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 535)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 580)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 580)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 628)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 628)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 580)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 580)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 628)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 628)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 581)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 581)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 629)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 629)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 581)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 581)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 629)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 629)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 582)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 582)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 630)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 630)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 582)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 582)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 630)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 630)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 583)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 583)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 631)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 631)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 583)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 583)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 631)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 631)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 676)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[32] = (Y_local[32] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 676)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[56] = (Y_local[56] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 724)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[80] = (Y_local[80] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 724)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 676)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[33] = (Y_local[33] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 676)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[57] = (Y_local[57] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 724)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[81] = (Y_local[81] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 724)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 677)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[34] = (Y_local[34] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 677)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[58] = (Y_local[58] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 725)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[82] = (Y_local[82] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 725)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 677)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[35] = (Y_local[35] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 677)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[59] = (Y_local[59] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 725)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[83] = (Y_local[83] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 725)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 678)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[36] = (Y_local[36] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 678)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[60] = (Y_local[60] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 726)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[84] = (Y_local[84] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 726)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 678)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[37] = (Y_local[37] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 678)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[61] = (Y_local[61] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 726)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[85] = (Y_local[85] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 726)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 679)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[38] = (Y_local[38] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 679)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[62] = (Y_local[62] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 727)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[86] = (Y_local[86] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 727)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 679)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[39] = (Y_local[39] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 679)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[63] = (Y_local[63] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 727)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[87] = (Y_local[87] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 727)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 8)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 56)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 9)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 57)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 10)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 58)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 11)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 59)] * B_shared[((((int)threadIdx.x) % 24) * 2)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 48)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 1)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 49)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 152)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 152)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 152)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 152)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 153)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 153)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 153)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 153)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 154)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 154)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 154)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 154)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 155)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 96)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 155)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 144)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 155)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 97)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 155)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 145)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 200)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 200)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 248)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 248)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 200)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 200)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 248)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 248)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 201)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 201)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 249)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 249)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 201)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 201)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 249)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 249)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 202)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 202)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 250)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 250)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 202)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 202)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 250)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 250)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 203)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 203)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 251)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 192)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 251)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 240)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 203)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 203)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 251)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 193)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 251)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 241)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 296)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 296)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 344)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 344)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 296)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 296)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 344)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 344)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 297)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 297)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 345)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 345)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 297)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 297)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 345)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 345)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 298)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 298)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 346)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 346)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 298)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 298)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 346)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 346)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 299)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 299)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 347)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 288)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 347)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 336)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 299)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 299)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 347)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 289)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 347)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 337)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 392)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 392)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 440)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 440)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 392)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 392)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 440)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 440)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 393)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 393)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 441)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 441)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 393)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 393)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 441)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 441)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 394)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 394)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 442)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 442)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 394)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 394)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 442)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 442)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 395)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 395)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 443)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 384)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 443)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 432)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 395)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 395)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 443)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 385)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 443)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 433)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 488)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 488)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 536)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 536)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 488)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 488)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 536)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 536)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 489)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 489)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 537)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 537)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 489)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 489)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 537)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 537)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 490)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 490)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 538)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 538)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 490)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 490)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 538)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 538)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 491)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 491)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 539)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 480)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 539)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 528)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 491)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 491)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 539)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 481)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 539)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 529)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 584)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 584)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 632)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 632)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 584)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 584)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 632)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 632)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 585)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 585)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 633)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 633)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 585)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 585)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 633)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 633)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 586)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 586)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 634)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 634)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 586)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 586)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 634)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 634)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 587)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 587)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 635)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 576)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 635)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 624)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 587)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 587)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 635)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 577)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 635)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 625)]));
    Y_local[16] = (Y_local[16] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 680)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[40] = (Y_local[40] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 680)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[64] = (Y_local[64] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 728)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[88] = (Y_local[88] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 728)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[17] = (Y_local[17] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 680)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[41] = (Y_local[41] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 680)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[65] = (Y_local[65] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 728)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[89] = (Y_local[89] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 728)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[18] = (Y_local[18] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 681)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[42] = (Y_local[42] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 681)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[66] = (Y_local[66] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 729)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[90] = (Y_local[90] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 729)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[19] = (Y_local[19] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 681)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[43] = (Y_local[43] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 681)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[67] = (Y_local[67] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 729)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[91] = (Y_local[91] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 729)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[20] = (Y_local[20] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 682)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[44] = (Y_local[44] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 682)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[68] = (Y_local[68] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 730)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[92] = (Y_local[92] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 730)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[21] = (Y_local[21] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 682)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[45] = (Y_local[45] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 682)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[69] = (Y_local[69] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 730)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[93] = (Y_local[93] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 730)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[22] = (Y_local[22] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 683)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[46] = (Y_local[46] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 683)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[70] = (Y_local[70] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 731)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 672)]));
    Y_local[94] = (Y_local[94] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 731)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 720)]));
    Y_local[23] = (Y_local[23] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 683)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[47] = (Y_local[47] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 683)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
    Y_local[71] = (Y_local[71] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 731)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 673)]));
    Y_local[95] = (Y_local[95] + (A_shared[(((((int)threadIdx.x) / 24) * 12) + 731)] * B_shared[(((((int)threadIdx.x) % 24) * 2) + 721)]));
  }
  Y[(((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2))] = Y_local[0];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 48)] = Y_local[24];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 147456)] = Y_local[48];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 147504)] = Y_local[72];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 1)] = Y_local[1];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 49)] = Y_local[25];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 147457)] = Y_local[49];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 147505)] = Y_local[73];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 3072)] = Y_local[2];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 3120)] = Y_local[26];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 150528)] = Y_local[50];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 150576)] = Y_local[74];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 3073)] = Y_local[3];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 3121)] = Y_local[27];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 150529)] = Y_local[51];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 150577)] = Y_local[75];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 6144)] = Y_local[4];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 6192)] = Y_local[28];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 153600)] = Y_local[52];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 153648)] = Y_local[76];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 6145)] = Y_local[5];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 6193)] = Y_local[29];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 153601)] = Y_local[53];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 153649)] = Y_local[77];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 9216)] = Y_local[6];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 9264)] = Y_local[30];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 156672)] = Y_local[54];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 156720)] = Y_local[78];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 9217)] = Y_local[7];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 9265)] = Y_local[31];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 156673)] = Y_local[55];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 156721)] = Y_local[79];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 12288)] = Y_local[8];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 12336)] = Y_local[32];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 159744)] = Y_local[56];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 159792)] = Y_local[80];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 12289)] = Y_local[9];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 12337)] = Y_local[33];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 159745)] = Y_local[57];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 159793)] = Y_local[81];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 15360)] = Y_local[10];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 15408)] = Y_local[34];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 162816)] = Y_local[58];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 162864)] = Y_local[82];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 15361)] = Y_local[11];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 15409)] = Y_local[35];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 162817)] = Y_local[59];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 162865)] = Y_local[83];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 18432)] = Y_local[12];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 18480)] = Y_local[36];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 165888)] = Y_local[60];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 165936)] = Y_local[84];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 18433)] = Y_local[13];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 18481)] = Y_local[37];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 165889)] = Y_local[61];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 165937)] = Y_local[85];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 21504)] = Y_local[14];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 21552)] = Y_local[38];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 168960)] = Y_local[62];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 169008)] = Y_local[86];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 21505)] = Y_local[15];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 21553)] = Y_local[39];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 168961)] = Y_local[63];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 169009)] = Y_local[87];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 24576)] = Y_local[16];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 24624)] = Y_local[40];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 172032)] = Y_local[64];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 172080)] = Y_local[88];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 24577)] = Y_local[17];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 24625)] = Y_local[41];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 172033)] = Y_local[65];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 172081)] = Y_local[89];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 27648)] = Y_local[18];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 27696)] = Y_local[42];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 175104)] = Y_local[66];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 175152)] = Y_local[90];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 27649)] = Y_local[19];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 27697)] = Y_local[43];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 175105)] = Y_local[67];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 175153)] = Y_local[91];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 30720)] = Y_local[20];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 30768)] = Y_local[44];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 178176)] = Y_local[68];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 178224)] = Y_local[92];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 30721)] = Y_local[21];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 30769)] = Y_local[45];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 178177)] = Y_local[69];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 178225)] = Y_local[93];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 33792)] = Y_local[22];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 33840)] = Y_local[46];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 181248)] = Y_local[70];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 181296)] = Y_local[94];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 33793)] = Y_local[23];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 33841)] = Y_local[47];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 181249)] = Y_local[71];
  Y[((((((((int)blockIdx.x) >> 5) * 294912) + ((((int)threadIdx.x) / 24) * 36864)) + ((((int)blockIdx.x) & 31) * 96)) + ((((int)threadIdx.x) % 24) * 2)) + 181297)] = Y_local[95];
}


