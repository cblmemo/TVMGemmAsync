
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(32) main_kernel0(float* __restrict__ A, float* __restrict__ B, float* __restrict__ Y) {
  float Y_local[16];
  __shared__ float A_shared[256];
  __shared__ float B_shared[512];
  Y_local[0] = 0.000000e+00f;
  Y_local[2] = 0.000000e+00f;
  Y_local[4] = 0.000000e+00f;
  Y_local[6] = 0.000000e+00f;
  Y_local[8] = 0.000000e+00f;
  Y_local[10] = 0.000000e+00f;
  Y_local[12] = 0.000000e+00f;
  Y_local[14] = 0.000000e+00f;
  Y_local[1] = 0.000000e+00f;
  Y_local[3] = 0.000000e+00f;
  Y_local[5] = 0.000000e+00f;
  Y_local[7] = 0.000000e+00f;
  Y_local[9] = 0.000000e+00f;
  Y_local[11] = 0.000000e+00f;
  Y_local[13] = 0.000000e+00f;
  Y_local[15] = 0.000000e+00f;
  for (int k_0 = 0; k_0 < 16; ++k_0) {
    __syncthreads();
    *(float4*)(A_shared + (((int)threadIdx.x) * 4)) = *(float4*)(A + ((((k_0 * 8192) + ((((int)threadIdx.x) >> 2) * 512)) + ((((int)blockIdx.x) / 12) * 16)) + ((((int)threadIdx.x) & 3) * 4)));
    *(float4*)(A_shared + ((((int)threadIdx.x) * 4) + 128)) = *(float4*)(A + (((((k_0 * 8192) + ((((int)threadIdx.x) >> 2) * 512)) + ((((int)blockIdx.x) / 12) * 16)) + ((((int)threadIdx.x) & 3) * 4)) + 4096));
    *(float4*)(B_shared + (((int)threadIdx.x) * 4)) = *(float4*)(B + ((((k_0 * 6144) + ((((int)threadIdx.x) >> 3) * 384)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 7) * 4)));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 128)) = *(float4*)(B + (((((k_0 * 6144) + ((((int)threadIdx.x) >> 3) * 384)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 7) * 4)) + 1536));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 256)) = *(float4*)(B + (((((k_0 * 6144) + ((((int)threadIdx.x) >> 3) * 384)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 7) * 4)) + 3072));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 384)) = *(float4*)(B + (((((k_0 * 6144) + ((((int)threadIdx.x) >> 3) * 384)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 7) * 4)) + 4608));
    __syncthreads();
    Y_local[0] = (Y_local[0] + (A_shared[((((int)threadIdx.x) >> 4) * 8)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 1)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 2)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 3)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 4)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 5)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 6)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 7)] * B_shared[((((int)threadIdx.x) & 15) * 2)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 16)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 17)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 18)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 19)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 20)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 21)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 22)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 23)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 32)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 32)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 33)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 34)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 35)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 36)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 37)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 38)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 39)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 64)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 48)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 49)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 50)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 51)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 52)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 53)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 54)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 55)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 96)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 64)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 65)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 66)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 67)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 68)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 69)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 70)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 71)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 128)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 80)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 81)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 82)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 83)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 84)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 85)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 86)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 87)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 160)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 96)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 97)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 98)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 99)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 100)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 101)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 102)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 103)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 192)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 112)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 113)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 114)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 115)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 116)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 117)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 118)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 119)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 224)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 128)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 129)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 130)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 131)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 132)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 133)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 134)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 135)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 256)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 144)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 145)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 146)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 147)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 148)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 149)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 150)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 151)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 288)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 160)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 161)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 162)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 163)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 164)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 165)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 166)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 167)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 320)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 176)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 177)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 178)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 179)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 180)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 181)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 182)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 183)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 352)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 192)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 193)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 194)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 195)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 196)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 197)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 198)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 199)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 384)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 208)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 209)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 210)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 211)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 212)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 213)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 214)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 215)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 416)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 224)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 225)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 226)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 227)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 228)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 229)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 230)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 231)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 448)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 240)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 241)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 242)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 243)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 244)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 245)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 246)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 247)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 480)]));
    Y_local[1] = (Y_local[1] + (A_shared[((((int)threadIdx.x) >> 4) * 8)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 1)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 2)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 3)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 4)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 5)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 6)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 7)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 1)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 16)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 17)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 18)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 19)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 20)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 21)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 22)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 23)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 33)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 32)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 33)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 34)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 35)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 36)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 37)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 38)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 39)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 65)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 48)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 49)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 50)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 51)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 52)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 53)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 54)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 55)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 97)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 64)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 65)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 66)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 67)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 68)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 69)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 70)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 71)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 129)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 80)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 81)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 82)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 83)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 84)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 85)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 86)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 87)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 161)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 96)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 97)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 98)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 99)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 100)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 101)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 102)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 103)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 193)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 112)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 113)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 114)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 115)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 116)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 117)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 118)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 119)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 225)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 128)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 129)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 130)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 131)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 132)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 133)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 134)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 135)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 257)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 144)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 145)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 146)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 147)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 148)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 149)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 150)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 151)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 289)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 160)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 161)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 162)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 163)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 164)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 165)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 166)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 167)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 321)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 176)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 177)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 178)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 179)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 180)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 181)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 182)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 183)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 353)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 192)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 193)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 194)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 195)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 196)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 197)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 198)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 199)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 385)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 208)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 209)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 210)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 211)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 212)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 213)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 214)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 215)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 417)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 224)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 225)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 226)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 227)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 228)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 229)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 230)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 231)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 449)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 240)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 241)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 242)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 243)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 244)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 245)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 246)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) >> 4) * 8) + 247)] * B_shared[(((((int)threadIdx.x) & 15) * 2) + 481)]));
  }
  Y[(((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2))] = Y_local[0];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = Y_local[1];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 384)] = Y_local[2];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 385)] = Y_local[3];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 768)] = Y_local[4];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 769)] = Y_local[5];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1152)] = Y_local[6];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1153)] = Y_local[7];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1536)] = Y_local[8];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1537)] = Y_local[9];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1920)] = Y_local[10];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 1921)] = Y_local[11];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 2304)] = Y_local[12];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 2305)] = Y_local[13];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 2688)] = Y_local[14];
  Y[((((((((int)blockIdx.x) / 12) * 6144) + ((((int)threadIdx.x) >> 4) * 3072)) + ((((int)blockIdx.x) % 12) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + 2689)] = Y_local[15];
}


