# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer[(256, 512), "float32"], B: T.Buffer[(256, 384), "float32"], Y: T.Buffer[(512, 384), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # var definition
        threadIdx_x = T.env_thread("threadIdx.x")
        blockIdx_x = T.env_thread("blockIdx.x")
        # buffer definition
        A_1 = T.buffer_decl([131072], dtype="float32", data=A.data)
        B_1 = T.buffer_decl([98304], dtype="float32", data=B.data)
        Y_1 = T.buffer_decl([196608], dtype="float32", data=Y.data)
        # body
        T.launch_thread(blockIdx_x, 384)
        Y_local = T.allocate([16], "float32", "local")
        Y_local_1 = T.buffer_decl([16], dtype="float32", data=Y_local, scope="local")
        A_shared = T.allocate([256], "float32", "shared")
        A_shared_1 = T.buffer_decl([256], dtype="float32", data=A_shared, scope="shared")
        B_shared = T.allocate([512], "float32", "shared")
        B_shared_1 = T.buffer_decl([512], dtype="float32", data=B_shared, scope="shared")
        T.launch_thread(threadIdx_x, 32)
        Y_local_1[0] = T.float32(0)
        Y_local_1[2] = T.float32(0)
        Y_local_1[4] = T.float32(0)
        Y_local_1[6] = T.float32(0)
        Y_local_1[8] = T.float32(0)
        Y_local_1[10] = T.float32(0)
        Y_local_1[12] = T.float32(0)
        Y_local_1[14] = T.float32(0)
        Y_local_1[1] = T.float32(0)
        Y_local_1[3] = T.float32(0)
        Y_local_1[5] = T.float32(0)
        Y_local_1[7] = T.float32(0)
        Y_local_1[9] = T.float32(0)
        Y_local_1[11] = T.float32(0)
        Y_local_1[13] = T.float32(0)
        Y_local_1[15] = T.float32(0)
        for k_0 in T.serial(16):
            A_shared_1[threadIdx_x * 4:threadIdx_x * 4 + 4] = A_1[k_0 * 8192 + threadIdx_x // 4 * 512 + blockIdx_x // 12 * 16 + threadIdx_x % 4 * 4:k_0 * 8192 + threadIdx_x // 4 * 512 + blockIdx_x // 12 * 16 + threadIdx_x % 4 * 4 + 4]
            A_shared_1[threadIdx_x * 4 + 128:threadIdx_x * 4 + 128 + 4] = A_1[k_0 * 8192 + threadIdx_x // 4 * 512 + blockIdx_x // 12 * 16 + threadIdx_x % 4 * 4 + 4096:k_0 * 8192 + threadIdx_x // 4 * 512 + blockIdx_x // 12 * 16 + threadIdx_x % 4 * 4 + 4096 + 4]
            B_shared_1[threadIdx_x * 4:threadIdx_x * 4 + 4] = B_1[k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4:k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 4]
            B_shared_1[threadIdx_x * 4 + 128:threadIdx_x * 4 + 128 + 4] = B_1[k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 1536:k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 1536 + 4]
            B_shared_1[threadIdx_x * 4 + 256:threadIdx_x * 4 + 256 + 4] = B_1[k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 3072:k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 3072 + 4]
            B_shared_1[threadIdx_x * 4 + 384:threadIdx_x * 4 + 384 + 4] = B_1[k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 4608:k_0 * 6144 + threadIdx_x // 8 * 384 + blockIdx_x % 12 * 32 + threadIdx_x % 8 * 4 + 4608 + 4]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 1] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 2] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 3] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 4] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 5] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 6] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 7] * B_shared_1[threadIdx_x % 16 * 2]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 16] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 17] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 18] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 19] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 20] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 21] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 22] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 23] * B_shared_1[threadIdx_x % 16 * 2 + 32]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 32] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 33] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 34] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 35] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 36] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 37] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 38] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 39] * B_shared_1[threadIdx_x % 16 * 2 + 64]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 48] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 49] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 50] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 51] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 52] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 53] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 54] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 55] * B_shared_1[threadIdx_x % 16 * 2 + 96]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 64] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 65] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 66] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 67] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 68] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 69] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 70] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 71] * B_shared_1[threadIdx_x % 16 * 2 + 128]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 80] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 81] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 82] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 83] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 84] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 85] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 86] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 87] * B_shared_1[threadIdx_x % 16 * 2 + 160]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 96] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 97] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 98] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 99] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 100] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 101] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 102] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 103] * B_shared_1[threadIdx_x % 16 * 2 + 192]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 112] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 113] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 114] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 115] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 116] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 117] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 118] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 119] * B_shared_1[threadIdx_x % 16 * 2 + 224]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 128] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 129] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 130] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 131] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 132] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 133] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 134] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 135] * B_shared_1[threadIdx_x % 16 * 2 + 256]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 144] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 145] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 146] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 147] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 148] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 149] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 150] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 151] * B_shared_1[threadIdx_x % 16 * 2 + 288]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 160] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 161] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 162] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 163] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 164] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 165] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 166] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 167] * B_shared_1[threadIdx_x % 16 * 2 + 320]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 176] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 177] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 178] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 179] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 180] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 181] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 182] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 183] * B_shared_1[threadIdx_x % 16 * 2 + 352]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 192] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 193] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 194] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 195] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 196] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 197] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 198] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 199] * B_shared_1[threadIdx_x % 16 * 2 + 384]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 208] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 209] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 210] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 211] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 212] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 213] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 214] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 215] * B_shared_1[threadIdx_x % 16 * 2 + 416]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 224] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 225] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 226] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 227] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 228] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 229] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 230] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 231] * B_shared_1[threadIdx_x % 16 * 2 + 448]
            Y_local_1[0] = Y_local_1[0] + A_shared_1[threadIdx_x // 16 * 8 + 240] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[2] = Y_local_1[2] + A_shared_1[threadIdx_x // 16 * 8 + 241] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[4] = Y_local_1[4] + A_shared_1[threadIdx_x // 16 * 8 + 242] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[6] = Y_local_1[6] + A_shared_1[threadIdx_x // 16 * 8 + 243] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[8] = Y_local_1[8] + A_shared_1[threadIdx_x // 16 * 8 + 244] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[10] = Y_local_1[10] + A_shared_1[threadIdx_x // 16 * 8 + 245] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[12] = Y_local_1[12] + A_shared_1[threadIdx_x // 16 * 8 + 246] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[14] = Y_local_1[14] + A_shared_1[threadIdx_x // 16 * 8 + 247] * B_shared_1[threadIdx_x % 16 * 2 + 480]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 1] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 2] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 3] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 4] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 5] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 6] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 7] * B_shared_1[threadIdx_x % 16 * 2 + 1]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 16] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 17] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 18] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 19] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 20] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 21] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 22] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 23] * B_shared_1[threadIdx_x % 16 * 2 + 33]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 32] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 33] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 34] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 35] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 36] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 37] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 38] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 39] * B_shared_1[threadIdx_x % 16 * 2 + 65]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 48] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 49] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 50] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 51] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 52] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 53] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 54] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 55] * B_shared_1[threadIdx_x % 16 * 2 + 97]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 64] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 65] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 66] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 67] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 68] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 69] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 70] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 71] * B_shared_1[threadIdx_x % 16 * 2 + 129]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 80] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 81] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 82] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 83] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 84] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 85] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 86] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 87] * B_shared_1[threadIdx_x % 16 * 2 + 161]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 96] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 97] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 98] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 99] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 100] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 101] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 102] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 103] * B_shared_1[threadIdx_x % 16 * 2 + 193]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 112] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 113] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 114] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 115] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 116] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 117] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 118] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 119] * B_shared_1[threadIdx_x % 16 * 2 + 225]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 128] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 129] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 130] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 131] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 132] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 133] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 134] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 135] * B_shared_1[threadIdx_x % 16 * 2 + 257]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 144] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 145] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 146] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 147] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 148] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 149] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 150] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 151] * B_shared_1[threadIdx_x % 16 * 2 + 289]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 160] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 161] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 162] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 163] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 164] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 165] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 166] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 167] * B_shared_1[threadIdx_x % 16 * 2 + 321]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 176] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 177] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 178] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 179] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 180] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 181] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 182] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 183] * B_shared_1[threadIdx_x % 16 * 2 + 353]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 192] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 193] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 194] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 195] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 196] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 197] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 198] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 199] * B_shared_1[threadIdx_x % 16 * 2 + 385]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 208] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 209] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 210] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 211] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 212] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 213] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 214] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 215] * B_shared_1[threadIdx_x % 16 * 2 + 417]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 224] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 225] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 226] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 227] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 228] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 229] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 230] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 231] * B_shared_1[threadIdx_x % 16 * 2 + 449]
            Y_local_1[1] = Y_local_1[1] + A_shared_1[threadIdx_x // 16 * 8 + 240] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[3] = Y_local_1[3] + A_shared_1[threadIdx_x // 16 * 8 + 241] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[5] = Y_local_1[5] + A_shared_1[threadIdx_x // 16 * 8 + 242] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[7] = Y_local_1[7] + A_shared_1[threadIdx_x // 16 * 8 + 243] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[9] = Y_local_1[9] + A_shared_1[threadIdx_x // 16 * 8 + 244] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[11] = Y_local_1[11] + A_shared_1[threadIdx_x // 16 * 8 + 245] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[13] = Y_local_1[13] + A_shared_1[threadIdx_x // 16 * 8 + 246] * B_shared_1[threadIdx_x % 16 * 2 + 481]
            Y_local_1[15] = Y_local_1[15] + A_shared_1[threadIdx_x // 16 * 8 + 247] * B_shared_1[threadIdx_x % 16 * 2 + 481]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2] = Y_local_1[0]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1] = Y_local_1[1]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 384] = Y_local_1[2]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 385] = Y_local_1[3]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 768] = Y_local_1[4]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 769] = Y_local_1[5]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1152] = Y_local_1[6]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1153] = Y_local_1[7]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1536] = Y_local_1[8]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1537] = Y_local_1[9]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1920] = Y_local_1[10]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 1921] = Y_local_1[11]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 2304] = Y_local_1[12]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 2305] = Y_local_1[13]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 2688] = Y_local_1[14]
        Y_1[blockIdx_x // 12 * 6144 + threadIdx_x // 16 * 3072 + blockIdx_x % 12 * 32 + threadIdx_x % 16 * 2 + 2689] = Y_local_1[15]
    

