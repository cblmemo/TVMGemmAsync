
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(96) main_kernel0(float* __restrict__ A, float* __restrict__ B, float* __restrict__ Y) {
  float Y_local[16];
  __shared__ float A_shared[512];
  __shared__ float B_shared[3072];
  Y_local[0] = 0.000000e+00f;
  Y_local[1] = 0.000000e+00f;
  Y_local[2] = 0.000000e+00f;
  Y_local[3] = 0.000000e+00f;
  Y_local[4] = 0.000000e+00f;
  Y_local[5] = 0.000000e+00f;
  Y_local[6] = 0.000000e+00f;
  Y_local[7] = 0.000000e+00f;
  Y_local[8] = 0.000000e+00f;
  Y_local[9] = 0.000000e+00f;
  Y_local[10] = 0.000000e+00f;
  Y_local[11] = 0.000000e+00f;
  Y_local[12] = 0.000000e+00f;
  Y_local[13] = 0.000000e+00f;
  Y_local[14] = 0.000000e+00f;
  Y_local[15] = 0.000000e+00f;
  for (int k_0 = 0; k_0 < 8; ++k_0) {
    __syncthreads();
    A_shared[((int)threadIdx.x)] = A[(((((((int)blockIdx.x) >> 2) * 4096) + ((((int)threadIdx.x) >> 5) * 256)) + (k_0 * 32)) + (((int)threadIdx.x) & 31))];
    A_shared[(((int)threadIdx.x) + 96)] = A[((((((((int)blockIdx.x) >> 2) * 4096) + ((((int)threadIdx.x) >> 5) * 256)) + (k_0 * 32)) + (((int)threadIdx.x) & 31)) + 768)];
    A_shared[(((int)threadIdx.x) + 192)] = A[((((((((int)blockIdx.x) >> 2) * 4096) + ((((int)threadIdx.x) >> 5) * 256)) + (k_0 * 32)) + (((int)threadIdx.x) & 31)) + 1536)];
    A_shared[(((int)threadIdx.x) + 288)] = A[((((((((int)blockIdx.x) >> 2) * 4096) + ((((int)threadIdx.x) >> 5) * 256)) + (k_0 * 32)) + (((int)threadIdx.x) & 31)) + 2304)];
    A_shared[(((int)threadIdx.x) + 384)] = A[((((((((int)blockIdx.x) >> 2) * 4096) + ((((int)threadIdx.x) >> 5) * 256)) + (k_0 * 32)) + (((int)threadIdx.x) & 31)) + 3072)];
    if (((int)threadIdx.x) < 32) {
      A_shared[(((int)threadIdx.x) + 480)] = A[(((((((int)blockIdx.x) >> 2) * 4096) + (k_0 * 32)) + ((int)threadIdx.x)) + 3840)];
    }
    *(float4*)(B_shared + (((int)threadIdx.x) * 4)) = *(float4*)(B + ((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 384)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 1536));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 768)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 3072));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 1152)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 4608));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 1536)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 6144));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 1920)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 7680));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 2304)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 9216));
    *(float4*)(B_shared + ((((int)threadIdx.x) * 4) + 2688)) = *(float4*)(B + (((((k_0 * 12288) + ((((int)threadIdx.x) / 24) * 384)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 10752));
    __syncthreads();
    Y_local[0] = (Y_local[0] + (A_shared[((((int)threadIdx.x) / 24) * 128)] * B_shared[((((int)threadIdx.x) % 24) * 4)]));
    Y_local[1] = (Y_local[1] + (A_shared[((((int)threadIdx.x) / 24) * 128)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1)]));
    Y_local[2] = (Y_local[2] + (A_shared[((((int)threadIdx.x) / 24) * 128)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2)]));
    Y_local[3] = (Y_local[3] + (A_shared[((((int)threadIdx.x) / 24) * 128)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 3)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 96)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 97)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 98)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 1)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 99)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 32)] * B_shared[((((int)threadIdx.x) % 24) * 4)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 32)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 32)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 32)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 3)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 33)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 96)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 33)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 97)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 33)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 98)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 33)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 99)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 64)] * B_shared[((((int)threadIdx.x) % 24) * 4)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 64)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 64)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 64)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 3)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 65)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 96)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 65)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 97)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 65)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 98)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 65)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 99)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 96)] * B_shared[((((int)threadIdx.x) % 24) * 4)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 96)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 3)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 96)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 97)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 98)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 97)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 99)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 192)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 193)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 194)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 2)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 195)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 288)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 289)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 290)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 3)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 291)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 34)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 192)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 34)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 193)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 34)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 194)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 34)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 195)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 35)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 288)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 35)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 289)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 35)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 290)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 35)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 291)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 66)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 192)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 66)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 193)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 66)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 194)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 66)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 195)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 67)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 288)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 67)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 289)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 67)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 290)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 67)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 291)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 192)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 193)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 194)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 98)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 195)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 288)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 289)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 290)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 99)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 291)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 384)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 385)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 386)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 4)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 387)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 480)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 481)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 482)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 5)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 483)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 36)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 384)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 36)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 385)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 36)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 386)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 36)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 387)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 37)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 480)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 37)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 481)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 37)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 482)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 37)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 483)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 68)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 384)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 68)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 385)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 68)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 386)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 68)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 387)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 69)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 480)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 69)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 481)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 69)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 482)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 69)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 483)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 384)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 385)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 386)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 100)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 387)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 480)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 481)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 482)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 101)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 483)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 576)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 577)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 578)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 6)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 579)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 672)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 673)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 674)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 7)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 675)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 38)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 576)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 38)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 577)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 38)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 578)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 38)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 579)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 39)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 672)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 39)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 673)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 39)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 674)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 39)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 675)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 70)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 576)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 70)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 577)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 70)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 578)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 70)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 579)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 71)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 672)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 71)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 673)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 71)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 674)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 71)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 675)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 576)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 577)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 578)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 102)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 579)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 672)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 673)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 674)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 103)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 675)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 768)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 769)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 770)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 8)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 771)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 864)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 865)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 866)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 9)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 867)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 40)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 768)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 40)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 769)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 40)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 770)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 40)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 771)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 41)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 864)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 41)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 865)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 41)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 866)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 41)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 867)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 72)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 768)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 72)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 769)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 72)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 770)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 72)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 771)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 73)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 864)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 73)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 865)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 73)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 866)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 73)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 867)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 768)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 769)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 770)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 104)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 771)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 864)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 865)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 866)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 105)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 867)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 960)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 961)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 962)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 10)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 963)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1056)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1057)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1058)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 11)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1059)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 42)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 960)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 42)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 961)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 42)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 962)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 42)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 963)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 43)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1056)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 43)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1057)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 43)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1058)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 43)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1059)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 74)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 960)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 74)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 961)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 74)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 962)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 74)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 963)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 75)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1056)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 75)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1057)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 75)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1058)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 75)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1059)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 960)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 961)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 962)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 106)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 963)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1056)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1057)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1058)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 107)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1059)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 12)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1152)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 12)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1153)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 12)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1154)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 12)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1155)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 13)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1248)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 13)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1249)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 13)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1250)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 13)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1251)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 44)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1152)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 44)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1153)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 44)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1154)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 44)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1155)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 45)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1248)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 45)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1249)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 45)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1250)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 45)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1251)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 76)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1152)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 76)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1153)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 76)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1154)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 76)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1155)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 77)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1248)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 77)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1249)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 77)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1250)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 77)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1251)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 108)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1152)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 108)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1153)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 108)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1154)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 108)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1155)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 109)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1248)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 109)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1249)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 109)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1250)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 109)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1251)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 14)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1344)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 14)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1345)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 14)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1346)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 14)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1347)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 15)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1440)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 15)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1441)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 15)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1442)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 15)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1443)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 46)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1344)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 46)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1345)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 46)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1346)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 46)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1347)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 47)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1440)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 47)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1441)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 47)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1442)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 47)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1443)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 78)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1344)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 78)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1345)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 78)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1346)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 78)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1347)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 79)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1440)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 79)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1441)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 79)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1442)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 79)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1443)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 110)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1344)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 110)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1345)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 110)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1346)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 110)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1347)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 111)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1440)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 111)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1441)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 111)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1442)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 111)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1443)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 16)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1536)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 16)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1537)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 16)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1538)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 16)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1539)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 17)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1632)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 17)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1633)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 17)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1634)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 17)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1635)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1536)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1537)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1538)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 48)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1539)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1632)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1633)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1634)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 49)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1635)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 80)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1536)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 80)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1537)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 80)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1538)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 80)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1539)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 81)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1632)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 81)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1633)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 81)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1634)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 81)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1635)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 112)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1536)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 112)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1537)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 112)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1538)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 112)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1539)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 113)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1632)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 113)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1633)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 113)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1634)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 113)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1635)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 18)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1728)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 18)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1729)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 18)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1730)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 18)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1731)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 19)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1824)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 19)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1825)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 19)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1826)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 19)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1827)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1728)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1729)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1730)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 50)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1731)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1824)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1825)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1826)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 51)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1827)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 82)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1728)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 82)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1729)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 82)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1730)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 82)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1731)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 83)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1824)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 83)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1825)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 83)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1826)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 83)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1827)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 114)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1728)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 114)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1729)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 114)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1730)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 114)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1731)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 115)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1824)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 115)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1825)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 115)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1826)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 115)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1827)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 20)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1920)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 20)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1921)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 20)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1922)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 20)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1923)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 21)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2016)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 21)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2017)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 21)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2018)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 21)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2019)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1920)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1921)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1922)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 52)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1923)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2016)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2017)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2018)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 53)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2019)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 84)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1920)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 84)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1921)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 84)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1922)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 84)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1923)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 85)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2016)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 85)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2017)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 85)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2018)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 85)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2019)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 116)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1920)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 116)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1921)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 116)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1922)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 116)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 1923)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 117)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2016)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 117)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2017)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 117)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2018)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 117)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2019)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 22)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2112)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 22)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2113)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 22)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2114)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 22)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2115)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 23)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2208)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 23)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2209)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 23)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2210)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 23)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2211)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2112)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2113)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2114)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 54)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2115)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2208)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2209)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2210)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 55)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2211)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 86)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2112)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 86)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2113)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 86)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2114)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 86)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2115)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 87)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2208)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 87)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2209)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 87)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2210)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 87)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2211)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 118)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2112)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 118)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2113)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 118)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2114)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 118)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2115)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 119)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2208)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 119)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2209)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 119)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2210)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 119)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2211)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 24)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2304)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 24)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2305)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 24)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2306)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 24)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2307)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 25)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2400)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 25)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2401)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 25)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2402)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 25)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2403)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2304)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2305)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2306)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 56)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2307)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2400)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2401)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2402)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 57)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2403)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 88)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2304)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 88)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2305)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 88)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2306)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 88)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2307)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 89)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2400)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 89)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2401)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 89)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2402)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 89)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2403)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 120)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2304)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 120)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2305)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 120)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2306)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 120)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2307)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 121)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2400)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 121)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2401)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 121)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2402)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 121)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2403)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 26)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2496)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 26)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2497)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 26)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2498)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 26)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2499)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 27)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2592)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 27)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2593)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 27)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2594)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 27)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2595)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2496)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2497)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2498)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 58)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2499)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2592)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2593)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2594)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 59)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2595)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 90)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2496)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 90)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2497)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 90)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2498)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 90)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2499)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 91)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2592)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 91)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2593)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 91)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2594)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 91)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2595)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 122)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2496)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 122)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2497)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 122)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2498)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 122)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2499)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 123)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2592)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 123)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2593)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 123)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2594)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 123)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2595)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 28)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2688)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 28)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2689)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 28)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2690)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 28)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2691)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 29)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2784)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 29)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2785)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 29)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2786)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 29)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2787)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 60)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2688)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 60)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2689)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 60)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2690)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 60)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2691)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 61)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2784)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 61)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2785)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 61)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2786)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 61)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2787)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 92)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2688)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 92)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2689)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 92)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2690)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 92)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2691)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 93)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2784)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 93)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2785)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 93)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2786)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 93)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2787)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 124)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2688)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 124)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2689)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 124)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2690)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 124)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2691)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 125)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2784)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 125)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2785)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 125)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2786)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 125)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2787)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 30)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2880)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 30)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2881)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 30)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2882)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 30)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2883)]));
    Y_local[0] = (Y_local[0] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 31)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2976)]));
    Y_local[1] = (Y_local[1] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 31)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2977)]));
    Y_local[2] = (Y_local[2] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 31)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2978)]));
    Y_local[3] = (Y_local[3] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 31)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2979)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 62)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2880)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 62)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2881)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 62)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2882)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 62)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2883)]));
    Y_local[4] = (Y_local[4] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 63)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2976)]));
    Y_local[5] = (Y_local[5] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 63)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2977)]));
    Y_local[6] = (Y_local[6] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 63)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2978)]));
    Y_local[7] = (Y_local[7] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 63)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2979)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 94)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2880)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 94)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2881)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 94)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2882)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 94)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2883)]));
    Y_local[8] = (Y_local[8] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 95)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2976)]));
    Y_local[9] = (Y_local[9] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 95)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2977)]));
    Y_local[10] = (Y_local[10] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 95)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2978)]));
    Y_local[11] = (Y_local[11] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 95)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2979)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 126)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2880)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 126)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2881)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 126)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2882)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 126)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2883)]));
    Y_local[12] = (Y_local[12] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 127)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2976)]));
    Y_local[13] = (Y_local[13] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 127)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2977)]));
    Y_local[14] = (Y_local[14] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 127)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2978)]));
    Y_local[15] = (Y_local[15] + (A_shared[(((((int)threadIdx.x) / 24) * 128) + 127)] * B_shared[(((((int)threadIdx.x) % 24) * 4) + 2979)]));
  }
  Y[(((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4))] = Y_local[0];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 1)] = Y_local[1];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 2)] = Y_local[2];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 3)] = Y_local[3];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 384)] = Y_local[4];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 385)] = Y_local[5];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 386)] = Y_local[6];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 387)] = Y_local[7];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 768)] = Y_local[8];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 769)] = Y_local[9];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 770)] = Y_local[10];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 771)] = Y_local[11];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 1152)] = Y_local[12];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 1153)] = Y_local[13];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 1154)] = Y_local[14];
  Y[((((((((int)blockIdx.x) >> 2) * 6144) + ((((int)threadIdx.x) / 24) * 1536)) + ((((int)blockIdx.x) & 3) * 96)) + ((((int)threadIdx.x) % 24) * 4)) + 1155)] = Y_local[15];
}


