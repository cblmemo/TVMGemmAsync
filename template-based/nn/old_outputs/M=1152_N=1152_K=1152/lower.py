# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer[(1152, 1152), "float32"], B: T.Buffer[(1152, 1152), "float32"], Y: T.Buffer[(1152, 1152), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # var definition
        threadIdx_x = T.env_thread("threadIdx.x")
        blockIdx_x = T.env_thread("blockIdx.x")
        # buffer definition
        A_1 = T.buffer_decl([1327104], dtype="float32", data=A.data)
        B_1 = T.buffer_decl([1327104], dtype="float32", data=B.data)
        Y_1 = T.buffer_decl([1327104], dtype="float32", data=Y.data)
        # body
        T.launch_thread(blockIdx_x, 128)
        Y_local = T.allocate([96], "float32", "local")
        Y_local_1 = T.buffer_decl([256], dtype="float32", data=Y_local, scope="local")
        A_shared = T.allocate([3456], "float32", "shared")
        A_shared_1 = T.buffer_decl([3456], dtype="float32", data=A_shared, scope="shared")
        B_shared = T.allocate([1728], "float32", "shared")
        B_shared_1 = T.buffer_decl([1728], dtype="float32", data=B_shared, scope="shared")
        T.launch_thread(threadIdx_x, 108)
        Y_local_1[0] = T.float32(0)
        Y_local_1[16] = T.float32(0)
        Y_local_1[32] = T.float32(0)
        Y_local_1[48] = T.float32(0)
        Y_local_1[64] = T.float32(0)
        Y_local_1[80] = T.float32(0)
        Y_local_1[1] = T.float32(0)
        Y_local_1[17] = T.float32(0)
        Y_local_1[33] = T.float32(0)
        Y_local_1[49] = T.float32(0)
        Y_local_1[65] = T.float32(0)
        Y_local_1[81] = T.float32(0)
        Y_local_1[2] = T.float32(0)
        Y_local_1[18] = T.float32(0)
        Y_local_1[34] = T.float32(0)
        Y_local_1[50] = T.float32(0)
        Y_local_1[66] = T.float32(0)
        Y_local_1[82] = T.float32(0)
        Y_local_1[3] = T.float32(0)
        Y_local_1[19] = T.float32(0)
        Y_local_1[35] = T.float32(0)
        Y_local_1[51] = T.float32(0)
        Y_local_1[67] = T.float32(0)
        Y_local_1[83] = T.float32(0)
        Y_local_1[4] = T.float32(0)
        Y_local_1[20] = T.float32(0)
        Y_local_1[36] = T.float32(0)
        Y_local_1[52] = T.float32(0)
        Y_local_1[68] = T.float32(0)
        Y_local_1[84] = T.float32(0)
        Y_local_1[5] = T.float32(0)
        Y_local_1[21] = T.float32(0)
        Y_local_1[37] = T.float32(0)
        Y_local_1[53] = T.float32(0)
        Y_local_1[69] = T.float32(0)
        Y_local_1[85] = T.float32(0)
        Y_local_1[6] = T.float32(0)
        Y_local_1[22] = T.float32(0)
        Y_local_1[38] = T.float32(0)
        Y_local_1[54] = T.float32(0)
        Y_local_1[70] = T.float32(0)
        Y_local_1[86] = T.float32(0)
        Y_local_1[7] = T.float32(0)
        Y_local_1[23] = T.float32(0)
        Y_local_1[39] = T.float32(0)
        Y_local_1[55] = T.float32(0)
        Y_local_1[71] = T.float32(0)
        Y_local_1[87] = T.float32(0)
        Y_local_1[8] = T.float32(0)
        Y_local_1[24] = T.float32(0)
        Y_local_1[40] = T.float32(0)
        Y_local_1[56] = T.float32(0)
        Y_local_1[72] = T.float32(0)
        Y_local_1[88] = T.float32(0)
        Y_local_1[9] = T.float32(0)
        Y_local_1[25] = T.float32(0)
        Y_local_1[41] = T.float32(0)
        Y_local_1[57] = T.float32(0)
        Y_local_1[73] = T.float32(0)
        Y_local_1[89] = T.float32(0)
        Y_local_1[10] = T.float32(0)
        Y_local_1[26] = T.float32(0)
        Y_local_1[42] = T.float32(0)
        Y_local_1[58] = T.float32(0)
        Y_local_1[74] = T.float32(0)
        Y_local_1[90] = T.float32(0)
        Y_local_1[11] = T.float32(0)
        Y_local_1[27] = T.float32(0)
        Y_local_1[43] = T.float32(0)
        Y_local_1[59] = T.float32(0)
        Y_local_1[75] = T.float32(0)
        Y_local_1[91] = T.float32(0)
        Y_local_1[12] = T.float32(0)
        Y_local_1[28] = T.float32(0)
        Y_local_1[44] = T.float32(0)
        Y_local_1[60] = T.float32(0)
        Y_local_1[76] = T.float32(0)
        Y_local_1[92] = T.float32(0)
        Y_local_1[13] = T.float32(0)
        Y_local_1[29] = T.float32(0)
        Y_local_1[45] = T.float32(0)
        Y_local_1[61] = T.float32(0)
        Y_local_1[77] = T.float32(0)
        Y_local_1[93] = T.float32(0)
        Y_local_1[14] = T.float32(0)
        Y_local_1[30] = T.float32(0)
        Y_local_1[46] = T.float32(0)
        Y_local_1[62] = T.float32(0)
        Y_local_1[78] = T.float32(0)
        Y_local_1[94] = T.float32(0)
        Y_local_1[15] = T.float32(0)
        Y_local_1[31] = T.float32(0)
        Y_local_1[47] = T.float32(0)
        Y_local_1[63] = T.float32(0)
        Y_local_1[79] = T.float32(0)
        Y_local_1[95] = T.float32(0)
        for k_0 in T.serial(48):
            A_shared_1[threadIdx_x * 4:threadIdx_x * 4 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 4]
            A_shared_1[threadIdx_x * 4 + 432:threadIdx_x * 4 + 432 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 20736:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 20736 + 4]
            A_shared_1[threadIdx_x * 4 + 864:threadIdx_x * 4 + 864 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 41472:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 41472 + 4]
            A_shared_1[threadIdx_x * 4 + 1296:threadIdx_x * 4 + 1296 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 62208:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 62208 + 4]
            A_shared_1[threadIdx_x * 4 + 1728:threadIdx_x * 4 + 1728 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 82944:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 82944 + 4]
            A_shared_1[threadIdx_x * 4 + 2160:threadIdx_x * 4 + 2160 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 103680:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 103680 + 4]
            A_shared_1[threadIdx_x * 4 + 2592:threadIdx_x * 4 + 2592 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 124416:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 124416 + 4]
            A_shared_1[threadIdx_x * 4 + 3024:threadIdx_x * 4 + 3024 + 4] = A_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 145152:blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 1152 + k_0 * 24 + threadIdx_x % 6 * 4 + 145152 + 4]
            B_shared_1[threadIdx_x * 2:threadIdx_x * 2 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 2]
            B_shared_1[threadIdx_x * 2 + 216:threadIdx_x * 2 + 216 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 3456:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 3456 + 2]
            B_shared_1[threadIdx_x * 2 + 432:threadIdx_x * 2 + 432 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 6912:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 6912 + 2]
            B_shared_1[threadIdx_x * 2 + 648:threadIdx_x * 2 + 648 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 10368:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 10368 + 2]
            B_shared_1[threadIdx_x * 2 + 864:threadIdx_x * 2 + 864 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 13824:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 13824 + 2]
            B_shared_1[threadIdx_x * 2 + 1080:threadIdx_x * 2 + 1080 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 17280:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 17280 + 2]
            B_shared_1[threadIdx_x * 2 + 1296:threadIdx_x * 2 + 1296 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 20736:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 20736 + 2]
            B_shared_1[threadIdx_x * 2 + 1512:threadIdx_x * 2 + 1512 + 2] = B_1[k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 24192:k_0 * 27648 + threadIdx_x // 36 * 1152 + blockIdx_x % 16 * 72 + threadIdx_x % 36 * 2 + 24192 + 2]
            for k_1, i_3 in T.grid(3, 8):
                cse_var_12: T.int32 = i_3 * 2
                cse_var_11: T.int32 = cse_var_12 + 81
                cse_var_10: T.int32 = cse_var_12 + 80
                cse_var_9: T.int32 = cse_var_12 + 65
                cse_var_8: T.int32 = cse_var_12 + 64
                cse_var_7: T.int32 = cse_var_12 + 49
                cse_var_6: T.int32 = cse_var_12 + 48
                cse_var_5: T.int32 = cse_var_12 + 33
                cse_var_4: T.int32 = cse_var_12 + 32
                cse_var_3: T.int32 = cse_var_12 + 17
                cse_var_2: T.int32 = cse_var_12 + 16
                cse_var_1: T.int32 = cse_var_12 + 1
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 12]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 24]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 36]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 48]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 60]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 72]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 84]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 96]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 108]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 120]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 132]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 144]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 156]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 168]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 180]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 192]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 204]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 216]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 228]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 240]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 252]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 264]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 276]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 288]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 300]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 312]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 324]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 336]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 348]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 360]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 372]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 384]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 396]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 408]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 420]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 432]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 444]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 456]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 468]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 480]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 492]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 504]
                Y_local_1[cse_var_2] = Y_local_1[cse_var_2] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 516]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 528]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 540]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 552]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 564]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 1]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 13]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 25]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 37]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 49]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 61]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 73]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 85]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 97]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 109]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 121]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 1] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 133]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 145]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 157]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 169]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 181]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 193]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 2] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 205]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 217]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 229]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 241]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 253]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 265]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 3] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 277]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 289]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 301]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 313]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 325]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 337]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 4] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 349]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 361]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 373]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 385]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 397]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 409]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 5] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 421]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 433]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 445]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 457]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 469]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 481]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 6] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 493]
                Y_local_1[cse_var_1] = Y_local_1[cse_var_1] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 505]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 517]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 529]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 541]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 553]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 6 * 192 + i_3 * 24 + k_1 * 8 + 7] * B_shared_1[k_1 * 576 + threadIdx_x % 6 * 2 + 565]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2] = Y_local_1[0]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 12] = Y_local_1[16]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 24] = Y_local_1[32]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 36] = Y_local_1[48]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 48] = Y_local_1[64]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 60] = Y_local_1[80]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1] = Y_local_1[1]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 13] = Y_local_1[17]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 25] = Y_local_1[33]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 37] = Y_local_1[49]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 49] = Y_local_1[65]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 61] = Y_local_1[81]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1152] = Y_local_1[2]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1164] = Y_local_1[18]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1176] = Y_local_1[34]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1188] = Y_local_1[50]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1200] = Y_local_1[66]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1212] = Y_local_1[82]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1153] = Y_local_1[3]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1165] = Y_local_1[19]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1177] = Y_local_1[35]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1189] = Y_local_1[51]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1201] = Y_local_1[67]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 1213] = Y_local_1[83]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2304] = Y_local_1[4]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2316] = Y_local_1[20]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2328] = Y_local_1[36]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2340] = Y_local_1[52]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2352] = Y_local_1[68]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2364] = Y_local_1[84]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2305] = Y_local_1[5]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2317] = Y_local_1[21]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2329] = Y_local_1[37]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2341] = Y_local_1[53]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2353] = Y_local_1[69]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 2365] = Y_local_1[85]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3456] = Y_local_1[6]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3468] = Y_local_1[22]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3480] = Y_local_1[38]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3492] = Y_local_1[54]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3504] = Y_local_1[70]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3516] = Y_local_1[86]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3457] = Y_local_1[7]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3469] = Y_local_1[23]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3481] = Y_local_1[39]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3493] = Y_local_1[55]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3505] = Y_local_1[71]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 3517] = Y_local_1[87]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4608] = Y_local_1[8]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4620] = Y_local_1[24]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4632] = Y_local_1[40]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4644] = Y_local_1[56]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4656] = Y_local_1[72]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4668] = Y_local_1[88]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4609] = Y_local_1[9]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4621] = Y_local_1[25]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4633] = Y_local_1[41]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4645] = Y_local_1[57]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4657] = Y_local_1[73]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 4669] = Y_local_1[89]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5760] = Y_local_1[10]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5772] = Y_local_1[26]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5784] = Y_local_1[42]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5796] = Y_local_1[58]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5808] = Y_local_1[74]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5820] = Y_local_1[90]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5761] = Y_local_1[11]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5773] = Y_local_1[27]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5785] = Y_local_1[43]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5797] = Y_local_1[59]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5809] = Y_local_1[75]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 5821] = Y_local_1[91]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6912] = Y_local_1[12]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6924] = Y_local_1[28]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6936] = Y_local_1[44]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6948] = Y_local_1[60]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6960] = Y_local_1[76]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6972] = Y_local_1[92]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6913] = Y_local_1[13]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6925] = Y_local_1[29]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6937] = Y_local_1[45]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6949] = Y_local_1[61]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6961] = Y_local_1[77]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 6973] = Y_local_1[93]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8064] = Y_local_1[14]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8076] = Y_local_1[30]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8088] = Y_local_1[46]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8100] = Y_local_1[62]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8112] = Y_local_1[78]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8124] = Y_local_1[94]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8065] = Y_local_1[15]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8077] = Y_local_1[31]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8089] = Y_local_1[47]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8101] = Y_local_1[63]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8113] = Y_local_1[79]
        Y_1[blockIdx_x // 16 * 165888 + threadIdx_x // 6 * 9216 + blockIdx_x % 16 * 72 + threadIdx_x % 6 * 2 + 8125] = Y_local_1[95]
    

