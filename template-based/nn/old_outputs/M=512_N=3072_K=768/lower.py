# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer[(512, 768), "float32"], B: T.Buffer[(768, 3072), "float32"], Y: T.Buffer[(512, 3072), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # var definition
        threadIdx_x = T.env_thread("threadIdx.x")
        blockIdx_x = T.env_thread("blockIdx.x")
        # buffer definition
        A_1 = T.buffer_decl([393216], dtype="float32", data=A.data)
        B_1 = T.buffer_decl([2359296], dtype="float32", data=B.data)
        Y_1 = T.buffer_decl([1572864], dtype="float32", data=Y.data)
        # body
        T.launch_thread(blockIdx_x, 128)
        Y_local = T.allocate([96], "float32", "local")
        Y_local_1 = T.buffer_decl([1024], dtype="float32", data=Y_local, scope="local")
        A_shared = T.allocate([1536], "float32", "shared")
        A_shared_1 = T.buffer_decl([1536], dtype="float32", data=A_shared, scope="shared")
        B_shared = T.allocate([4608], "float32", "shared")
        B_shared_1 = T.buffer_decl([4608], dtype="float32", data=B_shared, scope="shared")
        T.launch_thread(threadIdx_x, 128)
        Y_local_1[0] = T.float32(0)
        Y_local_1[32] = T.float32(0)
        Y_local_1[64] = T.float32(0)
        Y_local_1[2] = T.float32(0)
        Y_local_1[34] = T.float32(0)
        Y_local_1[66] = T.float32(0)
        Y_local_1[4] = T.float32(0)
        Y_local_1[36] = T.float32(0)
        Y_local_1[68] = T.float32(0)
        Y_local_1[6] = T.float32(0)
        Y_local_1[38] = T.float32(0)
        Y_local_1[70] = T.float32(0)
        Y_local_1[8] = T.float32(0)
        Y_local_1[40] = T.float32(0)
        Y_local_1[72] = T.float32(0)
        Y_local_1[10] = T.float32(0)
        Y_local_1[42] = T.float32(0)
        Y_local_1[74] = T.float32(0)
        Y_local_1[12] = T.float32(0)
        Y_local_1[44] = T.float32(0)
        Y_local_1[76] = T.float32(0)
        Y_local_1[14] = T.float32(0)
        Y_local_1[46] = T.float32(0)
        Y_local_1[78] = T.float32(0)
        Y_local_1[16] = T.float32(0)
        Y_local_1[48] = T.float32(0)
        Y_local_1[80] = T.float32(0)
        Y_local_1[18] = T.float32(0)
        Y_local_1[50] = T.float32(0)
        Y_local_1[82] = T.float32(0)
        Y_local_1[20] = T.float32(0)
        Y_local_1[52] = T.float32(0)
        Y_local_1[84] = T.float32(0)
        Y_local_1[22] = T.float32(0)
        Y_local_1[54] = T.float32(0)
        Y_local_1[86] = T.float32(0)
        Y_local_1[24] = T.float32(0)
        Y_local_1[56] = T.float32(0)
        Y_local_1[88] = T.float32(0)
        Y_local_1[26] = T.float32(0)
        Y_local_1[58] = T.float32(0)
        Y_local_1[90] = T.float32(0)
        Y_local_1[28] = T.float32(0)
        Y_local_1[60] = T.float32(0)
        Y_local_1[92] = T.float32(0)
        Y_local_1[30] = T.float32(0)
        Y_local_1[62] = T.float32(0)
        Y_local_1[94] = T.float32(0)
        Y_local_1[1] = T.float32(0)
        Y_local_1[33] = T.float32(0)
        Y_local_1[65] = T.float32(0)
        Y_local_1[3] = T.float32(0)
        Y_local_1[35] = T.float32(0)
        Y_local_1[67] = T.float32(0)
        Y_local_1[5] = T.float32(0)
        Y_local_1[37] = T.float32(0)
        Y_local_1[69] = T.float32(0)
        Y_local_1[7] = T.float32(0)
        Y_local_1[39] = T.float32(0)
        Y_local_1[71] = T.float32(0)
        Y_local_1[9] = T.float32(0)
        Y_local_1[41] = T.float32(0)
        Y_local_1[73] = T.float32(0)
        Y_local_1[11] = T.float32(0)
        Y_local_1[43] = T.float32(0)
        Y_local_1[75] = T.float32(0)
        Y_local_1[13] = T.float32(0)
        Y_local_1[45] = T.float32(0)
        Y_local_1[77] = T.float32(0)
        Y_local_1[15] = T.float32(0)
        Y_local_1[47] = T.float32(0)
        Y_local_1[79] = T.float32(0)
        Y_local_1[17] = T.float32(0)
        Y_local_1[49] = T.float32(0)
        Y_local_1[81] = T.float32(0)
        Y_local_1[19] = T.float32(0)
        Y_local_1[51] = T.float32(0)
        Y_local_1[83] = T.float32(0)
        Y_local_1[21] = T.float32(0)
        Y_local_1[53] = T.float32(0)
        Y_local_1[85] = T.float32(0)
        Y_local_1[23] = T.float32(0)
        Y_local_1[55] = T.float32(0)
        Y_local_1[87] = T.float32(0)
        Y_local_1[25] = T.float32(0)
        Y_local_1[57] = T.float32(0)
        Y_local_1[89] = T.float32(0)
        Y_local_1[27] = T.float32(0)
        Y_local_1[59] = T.float32(0)
        Y_local_1[91] = T.float32(0)
        Y_local_1[29] = T.float32(0)
        Y_local_1[61] = T.float32(0)
        Y_local_1[93] = T.float32(0)
        Y_local_1[31] = T.float32(0)
        Y_local_1[63] = T.float32(0)
        Y_local_1[95] = T.float32(0)
        for k_0 in T.serial(32):
            cse_var_2: T.int32 = k_0 * 73728
            cse_var_1: T.int32 = k_0 * 24
            A_shared_1[threadIdx_x * 4:threadIdx_x * 4 + 4] = A_1[blockIdx_x // 16 * 49152 + threadIdx_x // 6 * 768 + cse_var_1 + threadIdx_x % 6 * 4:blockIdx_x // 16 * 49152 + threadIdx_x // 6 * 768 + cse_var_1 + threadIdx_x % 6 * 4 + 4]
            A_shared_1[threadIdx_x * 4 + 512:threadIdx_x * 4 + 512 + 4] = A_1[blockIdx_x // 16 * 49152 + (threadIdx_x * 4 + 512) // 24 * 768 + cse_var_1 + (threadIdx_x * 4 + 8) % 24:blockIdx_x // 16 * 49152 + (threadIdx_x * 4 + 512) // 24 * 768 + cse_var_1 + (threadIdx_x * 4 + 8) % 24 + 4]
            A_shared_1[threadIdx_x * 4 + 1024:threadIdx_x * 4 + 1024 + 4] = A_1[blockIdx_x // 16 * 49152 + (threadIdx_x * 4 + 1024) // 24 * 768 + cse_var_1 + (threadIdx_x * 4 + 16) % 24:blockIdx_x // 16 * 49152 + (threadIdx_x * 4 + 1024) // 24 * 768 + cse_var_1 + (threadIdx_x * 4 + 16) % 24 + 4]
            B_shared_1[threadIdx_x * 4:threadIdx_x * 4 + 4] = B_1[cse_var_2 + threadIdx_x // 48 * 3072 + blockIdx_x % 16 * 192 + threadIdx_x % 48 * 4:cse_var_2 + threadIdx_x // 48 * 3072 + blockIdx_x % 16 * 192 + threadIdx_x % 48 * 4 + 4]
            B_shared_1[threadIdx_x * 4 + 512:threadIdx_x * 4 + 512 + 4] = B_1[cse_var_2 + (threadIdx_x * 4 + 512) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 128) % 192:cse_var_2 + (threadIdx_x * 4 + 512) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 128) % 192 + 4]
            B_shared_1[threadIdx_x * 4 + 1024:threadIdx_x * 4 + 1024 + 4] = B_1[cse_var_2 + (threadIdx_x * 4 + 1024) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 64) % 192:cse_var_2 + (threadIdx_x * 4 + 1024) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 64) % 192 + 4]
            B_shared_1[threadIdx_x * 4 + 1536:threadIdx_x * 4 + 1536 + 4] = B_1[cse_var_2 + threadIdx_x // 48 * 3072 + blockIdx_x % 16 * 192 + threadIdx_x % 48 * 4 + 24576:cse_var_2 + threadIdx_x // 48 * 3072 + blockIdx_x % 16 * 192 + threadIdx_x % 48 * 4 + 24576 + 4]
            B_shared_1[threadIdx_x * 4 + 2048:threadIdx_x * 4 + 2048 + 4] = B_1[cse_var_2 + (threadIdx_x * 4 + 2048) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 128) % 192:cse_var_2 + (threadIdx_x * 4 + 2048) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 128) % 192 + 4]
            B_shared_1[threadIdx_x * 4 + 2560:threadIdx_x * 4 + 2560 + 4] = B_1[cse_var_2 + (threadIdx_x * 4 + 2560) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 64) % 192:cse_var_2 + (threadIdx_x * 4 + 2560) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 64) % 192 + 4]
            B_shared_1[threadIdx_x * 4 + 3072:threadIdx_x * 4 + 3072 + 4] = B_1[cse_var_2 + threadIdx_x // 48 * 3072 + blockIdx_x % 16 * 192 + threadIdx_x % 48 * 4 + 49152:cse_var_2 + threadIdx_x // 48 * 3072 + blockIdx_x % 16 * 192 + threadIdx_x % 48 * 4 + 49152 + 4]
            B_shared_1[threadIdx_x * 4 + 3584:threadIdx_x * 4 + 3584 + 4] = B_1[cse_var_2 + (threadIdx_x * 4 + 3584) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 128) % 192:cse_var_2 + (threadIdx_x * 4 + 3584) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 128) % 192 + 4]
            B_shared_1[threadIdx_x * 4 + 4096:threadIdx_x * 4 + 4096 + 4] = B_1[cse_var_2 + (threadIdx_x * 4 + 4096) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 64) % 192:cse_var_2 + (threadIdx_x * 4 + 4096) // 192 * 3072 + blockIdx_x % 16 * 192 + (threadIdx_x * 4 + 64) % 192 + 4]
            for k_1, j_3 in T.grid(4, 2):
                cse_var_49: T.int32 = j_3 + 94
                cse_var_48: T.int32 = j_3 + 92
                cse_var_47: T.int32 = j_3 + 90
                cse_var_46: T.int32 = j_3 + 88
                cse_var_45: T.int32 = j_3 + 86
                cse_var_44: T.int32 = j_3 + 84
                cse_var_43: T.int32 = j_3 + 82
                cse_var_42: T.int32 = j_3 + 80
                cse_var_41: T.int32 = j_3 + 8
                cse_var_40: T.int32 = j_3 + 78
                cse_var_39: T.int32 = j_3 + 76
                cse_var_38: T.int32 = j_3 + 74
                cse_var_37: T.int32 = j_3 + 72
                cse_var_36: T.int32 = j_3 + 70
                cse_var_35: T.int32 = j_3 + 68
                cse_var_34: T.int32 = j_3 + 66
                cse_var_33: T.int32 = j_3 + 64
                cse_var_32: T.int32 = j_3 + 62
                cse_var_31: T.int32 = j_3 + 60
                cse_var_30: T.int32 = j_3 + 6
                cse_var_29: T.int32 = j_3 + 58
                cse_var_28: T.int32 = j_3 + 56
                cse_var_27: T.int32 = j_3 + 54
                cse_var_26: T.int32 = j_3 + 52
                cse_var_25: T.int32 = j_3 + 50
                cse_var_24: T.int32 = j_3 + 48
                cse_var_23: T.int32 = j_3 + 46
                cse_var_22: T.int32 = j_3 + 44
                cse_var_21: T.int32 = j_3 + 42
                cse_var_20: T.int32 = j_3 + 40
                cse_var_19: T.int32 = j_3 + 4
                cse_var_18: T.int32 = j_3 + 38
                cse_var_17: T.int32 = j_3 + 36
                cse_var_16: T.int32 = j_3 + 34
                cse_var_15: T.int32 = j_3 + 32
                cse_var_14: T.int32 = j_3 + 30
                cse_var_13: T.int32 = j_3 + 28
                cse_var_12: T.int32 = j_3 + 26
                cse_var_11: T.int32 = j_3 + 24
                cse_var_10: T.int32 = j_3 + 22
                cse_var_9: T.int32 = j_3 + 20
                cse_var_8: T.int32 = j_3 + 2
                cse_var_7: T.int32 = j_3 + 18
                cse_var_6: T.int32 = j_3 + 16
                cse_var_5: T.int32 = j_3 + 14
                cse_var_4: T.int32 = j_3 + 12
                cse_var_3: T.int32 = j_3 + 10
                Y_local_1[j_3] = Y_local_1[j_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_15] = Y_local_1[cse_var_15] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_33] = Y_local_1[cse_var_33] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 24] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_16] = Y_local_1[cse_var_16] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 24] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_34] = Y_local_1[cse_var_34] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 24] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_19] = Y_local_1[cse_var_19] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 48] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_17] = Y_local_1[cse_var_17] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 48] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_35] = Y_local_1[cse_var_35] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 48] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_30] = Y_local_1[cse_var_30] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 72] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_18] = Y_local_1[cse_var_18] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 72] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_36] = Y_local_1[cse_var_36] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 72] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_41] = Y_local_1[cse_var_41] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 96] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_20] = Y_local_1[cse_var_20] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 96] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_37] = Y_local_1[cse_var_37] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 96] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 120] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_21] = Y_local_1[cse_var_21] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 120] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_38] = Y_local_1[cse_var_38] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 120] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 144] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_22] = Y_local_1[cse_var_22] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 144] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_39] = Y_local_1[cse_var_39] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 144] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 168] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_23] = Y_local_1[cse_var_23] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 168] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_40] = Y_local_1[cse_var_40] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 168] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 192] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_24] = Y_local_1[cse_var_24] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 192] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_42] = Y_local_1[cse_var_42] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 192] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 216] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_25] = Y_local_1[cse_var_25] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 216] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_43] = Y_local_1[cse_var_43] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 216] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 240] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_26] = Y_local_1[cse_var_26] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 240] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_44] = Y_local_1[cse_var_44] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 240] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 264] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_27] = Y_local_1[cse_var_27] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 264] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_45] = Y_local_1[cse_var_45] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 264] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 288] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_28] = Y_local_1[cse_var_28] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 288] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_46] = Y_local_1[cse_var_46] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 288] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 312] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_29] = Y_local_1[cse_var_29] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 312] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_47] = Y_local_1[cse_var_47] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 312] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_13] = Y_local_1[cse_var_13] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 336] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_31] = Y_local_1[cse_var_31] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 336] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_48] = Y_local_1[cse_var_48] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 336] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[cse_var_14] = Y_local_1[cse_var_14] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 360] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3]
                Y_local_1[cse_var_32] = Y_local_1[cse_var_32] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 360] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 64]
                Y_local_1[cse_var_49] = Y_local_1[cse_var_49] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 360] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 128]
                Y_local_1[j_3] = Y_local_1[j_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 1] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_15] = Y_local_1[cse_var_15] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 1] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_33] = Y_local_1[cse_var_33] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 1] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 25] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_16] = Y_local_1[cse_var_16] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 25] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_34] = Y_local_1[cse_var_34] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 25] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_19] = Y_local_1[cse_var_19] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 49] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_17] = Y_local_1[cse_var_17] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 49] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_35] = Y_local_1[cse_var_35] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 49] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_30] = Y_local_1[cse_var_30] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 73] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_18] = Y_local_1[cse_var_18] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 73] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_36] = Y_local_1[cse_var_36] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 73] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_41] = Y_local_1[cse_var_41] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 97] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_20] = Y_local_1[cse_var_20] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 97] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_37] = Y_local_1[cse_var_37] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 97] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 121] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_21] = Y_local_1[cse_var_21] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 121] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_38] = Y_local_1[cse_var_38] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 121] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 145] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_22] = Y_local_1[cse_var_22] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 145] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_39] = Y_local_1[cse_var_39] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 145] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 169] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_23] = Y_local_1[cse_var_23] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 169] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_40] = Y_local_1[cse_var_40] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 169] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 193] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_24] = Y_local_1[cse_var_24] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 193] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_42] = Y_local_1[cse_var_42] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 193] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 217] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_25] = Y_local_1[cse_var_25] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 217] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_43] = Y_local_1[cse_var_43] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 217] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 241] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_26] = Y_local_1[cse_var_26] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 241] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_44] = Y_local_1[cse_var_44] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 241] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 265] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_27] = Y_local_1[cse_var_27] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 265] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_45] = Y_local_1[cse_var_45] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 265] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 289] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_28] = Y_local_1[cse_var_28] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 289] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_46] = Y_local_1[cse_var_46] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 289] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 313] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_29] = Y_local_1[cse_var_29] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 313] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_47] = Y_local_1[cse_var_47] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 313] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_13] = Y_local_1[cse_var_13] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 337] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_31] = Y_local_1[cse_var_31] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 337] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_48] = Y_local_1[cse_var_48] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 337] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[cse_var_14] = Y_local_1[cse_var_14] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 361] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 192]
                Y_local_1[cse_var_32] = Y_local_1[cse_var_32] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 361] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 256]
                Y_local_1[cse_var_49] = Y_local_1[cse_var_49] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 361] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 320]
                Y_local_1[j_3] = Y_local_1[j_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 2] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_15] = Y_local_1[cse_var_15] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 2] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_33] = Y_local_1[cse_var_33] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 2] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 26] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_16] = Y_local_1[cse_var_16] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 26] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_34] = Y_local_1[cse_var_34] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 26] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_19] = Y_local_1[cse_var_19] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 50] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_17] = Y_local_1[cse_var_17] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 50] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_35] = Y_local_1[cse_var_35] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 50] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_30] = Y_local_1[cse_var_30] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 74] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_18] = Y_local_1[cse_var_18] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 74] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_36] = Y_local_1[cse_var_36] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 74] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_41] = Y_local_1[cse_var_41] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 98] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_20] = Y_local_1[cse_var_20] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 98] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_37] = Y_local_1[cse_var_37] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 98] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 122] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_21] = Y_local_1[cse_var_21] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 122] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_38] = Y_local_1[cse_var_38] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 122] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 146] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_22] = Y_local_1[cse_var_22] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 146] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_39] = Y_local_1[cse_var_39] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 146] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 170] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_23] = Y_local_1[cse_var_23] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 170] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_40] = Y_local_1[cse_var_40] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 170] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 194] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_24] = Y_local_1[cse_var_24] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 194] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_42] = Y_local_1[cse_var_42] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 194] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 218] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_25] = Y_local_1[cse_var_25] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 218] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_43] = Y_local_1[cse_var_43] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 218] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 242] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_26] = Y_local_1[cse_var_26] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 242] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_44] = Y_local_1[cse_var_44] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 242] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 266] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_27] = Y_local_1[cse_var_27] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 266] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_45] = Y_local_1[cse_var_45] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 266] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 290] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_28] = Y_local_1[cse_var_28] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 290] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_46] = Y_local_1[cse_var_46] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 290] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 314] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_29] = Y_local_1[cse_var_29] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 314] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_47] = Y_local_1[cse_var_47] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 314] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_13] = Y_local_1[cse_var_13] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 338] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_31] = Y_local_1[cse_var_31] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 338] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_48] = Y_local_1[cse_var_48] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 338] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[cse_var_14] = Y_local_1[cse_var_14] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 362] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 384]
                Y_local_1[cse_var_32] = Y_local_1[cse_var_32] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 362] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 448]
                Y_local_1[cse_var_49] = Y_local_1[cse_var_49] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 362] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 512]
                Y_local_1[j_3] = Y_local_1[j_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 3] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_15] = Y_local_1[cse_var_15] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 3] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_33] = Y_local_1[cse_var_33] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 3] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 27] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_16] = Y_local_1[cse_var_16] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 27] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_34] = Y_local_1[cse_var_34] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 27] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_19] = Y_local_1[cse_var_19] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 51] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_17] = Y_local_1[cse_var_17] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 51] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_35] = Y_local_1[cse_var_35] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 51] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_30] = Y_local_1[cse_var_30] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 75] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_18] = Y_local_1[cse_var_18] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 75] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_36] = Y_local_1[cse_var_36] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 75] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_41] = Y_local_1[cse_var_41] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 99] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_20] = Y_local_1[cse_var_20] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 99] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_37] = Y_local_1[cse_var_37] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 99] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 123] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_21] = Y_local_1[cse_var_21] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 123] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_38] = Y_local_1[cse_var_38] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 123] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 147] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_22] = Y_local_1[cse_var_22] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 147] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_39] = Y_local_1[cse_var_39] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 147] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 171] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_23] = Y_local_1[cse_var_23] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 171] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_40] = Y_local_1[cse_var_40] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 171] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 195] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_24] = Y_local_1[cse_var_24] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 195] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_42] = Y_local_1[cse_var_42] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 195] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 219] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_25] = Y_local_1[cse_var_25] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 219] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_43] = Y_local_1[cse_var_43] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 219] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 243] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_26] = Y_local_1[cse_var_26] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 243] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_44] = Y_local_1[cse_var_44] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 243] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 267] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_27] = Y_local_1[cse_var_27] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 267] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_45] = Y_local_1[cse_var_45] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 267] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 291] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_28] = Y_local_1[cse_var_28] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 291] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_46] = Y_local_1[cse_var_46] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 291] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 315] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_29] = Y_local_1[cse_var_29] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 315] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_47] = Y_local_1[cse_var_47] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 315] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_13] = Y_local_1[cse_var_13] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 339] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_31] = Y_local_1[cse_var_31] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 339] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_48] = Y_local_1[cse_var_48] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 339] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[cse_var_14] = Y_local_1[cse_var_14] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 363] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 576]
                Y_local_1[cse_var_32] = Y_local_1[cse_var_32] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 363] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 640]
                Y_local_1[cse_var_49] = Y_local_1[cse_var_49] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 363] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 704]
                Y_local_1[j_3] = Y_local_1[j_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 4] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_15] = Y_local_1[cse_var_15] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 4] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_33] = Y_local_1[cse_var_33] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 4] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 28] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_16] = Y_local_1[cse_var_16] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 28] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_34] = Y_local_1[cse_var_34] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 28] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_19] = Y_local_1[cse_var_19] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 52] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_17] = Y_local_1[cse_var_17] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 52] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_35] = Y_local_1[cse_var_35] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 52] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_30] = Y_local_1[cse_var_30] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 76] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_18] = Y_local_1[cse_var_18] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 76] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_36] = Y_local_1[cse_var_36] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 76] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_41] = Y_local_1[cse_var_41] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 100] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_20] = Y_local_1[cse_var_20] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 100] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_37] = Y_local_1[cse_var_37] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 100] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 124] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_21] = Y_local_1[cse_var_21] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 124] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_38] = Y_local_1[cse_var_38] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 124] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 148] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_22] = Y_local_1[cse_var_22] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 148] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_39] = Y_local_1[cse_var_39] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 148] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 172] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_23] = Y_local_1[cse_var_23] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 172] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_40] = Y_local_1[cse_var_40] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 172] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 196] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_24] = Y_local_1[cse_var_24] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 196] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_42] = Y_local_1[cse_var_42] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 196] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 220] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_25] = Y_local_1[cse_var_25] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 220] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_43] = Y_local_1[cse_var_43] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 220] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 244] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_26] = Y_local_1[cse_var_26] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 244] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_44] = Y_local_1[cse_var_44] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 244] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 268] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_27] = Y_local_1[cse_var_27] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 268] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_45] = Y_local_1[cse_var_45] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 268] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 292] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_28] = Y_local_1[cse_var_28] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 292] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_46] = Y_local_1[cse_var_46] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 292] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 316] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_29] = Y_local_1[cse_var_29] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 316] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_47] = Y_local_1[cse_var_47] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 316] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_13] = Y_local_1[cse_var_13] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 340] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_31] = Y_local_1[cse_var_31] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 340] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_48] = Y_local_1[cse_var_48] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 340] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[cse_var_14] = Y_local_1[cse_var_14] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 364] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 768]
                Y_local_1[cse_var_32] = Y_local_1[cse_var_32] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 364] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 832]
                Y_local_1[cse_var_49] = Y_local_1[cse_var_49] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 364] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 896]
                Y_local_1[j_3] = Y_local_1[j_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 5] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_15] = Y_local_1[cse_var_15] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 5] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_33] = Y_local_1[cse_var_33] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 5] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_8] = Y_local_1[cse_var_8] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 29] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_16] = Y_local_1[cse_var_16] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 29] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_34] = Y_local_1[cse_var_34] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 29] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_19] = Y_local_1[cse_var_19] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 53] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_17] = Y_local_1[cse_var_17] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 53] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_35] = Y_local_1[cse_var_35] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 53] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_30] = Y_local_1[cse_var_30] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 77] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_18] = Y_local_1[cse_var_18] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 77] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_36] = Y_local_1[cse_var_36] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 77] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_41] = Y_local_1[cse_var_41] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 101] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_20] = Y_local_1[cse_var_20] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 101] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_37] = Y_local_1[cse_var_37] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 101] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_3] = Y_local_1[cse_var_3] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 125] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_21] = Y_local_1[cse_var_21] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 125] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_38] = Y_local_1[cse_var_38] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 125] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_4] = Y_local_1[cse_var_4] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 149] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_22] = Y_local_1[cse_var_22] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 149] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_39] = Y_local_1[cse_var_39] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 149] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_5] = Y_local_1[cse_var_5] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 173] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_23] = Y_local_1[cse_var_23] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 173] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_40] = Y_local_1[cse_var_40] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 173] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_6] = Y_local_1[cse_var_6] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 197] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_24] = Y_local_1[cse_var_24] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 197] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_42] = Y_local_1[cse_var_42] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 197] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_7] = Y_local_1[cse_var_7] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 221] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_25] = Y_local_1[cse_var_25] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 221] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_43] = Y_local_1[cse_var_43] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 221] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_9] = Y_local_1[cse_var_9] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 245] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_26] = Y_local_1[cse_var_26] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 245] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_44] = Y_local_1[cse_var_44] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 245] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_10] = Y_local_1[cse_var_10] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 269] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_27] = Y_local_1[cse_var_27] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 269] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_45] = Y_local_1[cse_var_45] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 269] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_11] = Y_local_1[cse_var_11] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 293] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_28] = Y_local_1[cse_var_28] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 293] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_46] = Y_local_1[cse_var_46] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 293] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_12] = Y_local_1[cse_var_12] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 317] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_29] = Y_local_1[cse_var_29] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 317] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_47] = Y_local_1[cse_var_47] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 317] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_13] = Y_local_1[cse_var_13] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 341] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_31] = Y_local_1[cse_var_31] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 341] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_48] = Y_local_1[cse_var_48] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 341] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
                Y_local_1[cse_var_14] = Y_local_1[cse_var_14] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 365] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 960]
                Y_local_1[cse_var_32] = Y_local_1[cse_var_32] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 365] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1024]
                Y_local_1[cse_var_49] = Y_local_1[cse_var_49] + A_shared_1[threadIdx_x // 32 * 384 + k_1 * 6 + 365] * B_shared_1[k_1 * 1152 + threadIdx_x % 32 * 2 + j_3 + 1088]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2] = Y_local_1[0]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 64] = Y_local_1[32]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 128] = Y_local_1[64]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 1] = Y_local_1[1]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 65] = Y_local_1[33]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 129] = Y_local_1[65]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 3072] = Y_local_1[2]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 3136] = Y_local_1[34]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 3200] = Y_local_1[66]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 3073] = Y_local_1[3]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 3137] = Y_local_1[35]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 3201] = Y_local_1[67]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 6144] = Y_local_1[4]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 6208] = Y_local_1[36]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 6272] = Y_local_1[68]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 6145] = Y_local_1[5]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 6209] = Y_local_1[37]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 6273] = Y_local_1[69]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 9216] = Y_local_1[6]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 9280] = Y_local_1[38]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 9344] = Y_local_1[70]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 9217] = Y_local_1[7]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 9281] = Y_local_1[39]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 9345] = Y_local_1[71]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 12288] = Y_local_1[8]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 12352] = Y_local_1[40]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 12416] = Y_local_1[72]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 12289] = Y_local_1[9]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 12353] = Y_local_1[41]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 12417] = Y_local_1[73]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 15360] = Y_local_1[10]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 15424] = Y_local_1[42]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 15488] = Y_local_1[74]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 15361] = Y_local_1[11]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 15425] = Y_local_1[43]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 15489] = Y_local_1[75]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 18432] = Y_local_1[12]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 18496] = Y_local_1[44]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 18560] = Y_local_1[76]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 18433] = Y_local_1[13]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 18497] = Y_local_1[45]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 18561] = Y_local_1[77]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 21504] = Y_local_1[14]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 21568] = Y_local_1[46]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 21632] = Y_local_1[78]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 21505] = Y_local_1[15]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 21569] = Y_local_1[47]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 21633] = Y_local_1[79]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 24576] = Y_local_1[16]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 24640] = Y_local_1[48]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 24704] = Y_local_1[80]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 24577] = Y_local_1[17]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 24641] = Y_local_1[49]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 24705] = Y_local_1[81]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 27648] = Y_local_1[18]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 27712] = Y_local_1[50]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 27776] = Y_local_1[82]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 27649] = Y_local_1[19]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 27713] = Y_local_1[51]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 27777] = Y_local_1[83]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 30720] = Y_local_1[20]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 30784] = Y_local_1[52]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 30848] = Y_local_1[84]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 30721] = Y_local_1[21]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 30785] = Y_local_1[53]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 30849] = Y_local_1[85]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 33792] = Y_local_1[22]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 33856] = Y_local_1[54]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 33920] = Y_local_1[86]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 33793] = Y_local_1[23]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 33857] = Y_local_1[55]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 33921] = Y_local_1[87]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 36864] = Y_local_1[24]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 36928] = Y_local_1[56]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 36992] = Y_local_1[88]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 36865] = Y_local_1[25]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 36929] = Y_local_1[57]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 36993] = Y_local_1[89]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 39936] = Y_local_1[26]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 40000] = Y_local_1[58]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 40064] = Y_local_1[90]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 39937] = Y_local_1[27]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 40001] = Y_local_1[59]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 40065] = Y_local_1[91]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 43008] = Y_local_1[28]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 43072] = Y_local_1[60]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 43136] = Y_local_1[92]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 43009] = Y_local_1[29]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 43073] = Y_local_1[61]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 43137] = Y_local_1[93]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 46080] = Y_local_1[30]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 46144] = Y_local_1[62]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 46208] = Y_local_1[94]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 46081] = Y_local_1[31]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 46145] = Y_local_1[63]
        Y_1[blockIdx_x // 16 * 196608 + threadIdx_x // 32 * 49152 + blockIdx_x % 16 * 192 + threadIdx_x % 32 * 2 + 46209] = Y_local_1[95]
    

