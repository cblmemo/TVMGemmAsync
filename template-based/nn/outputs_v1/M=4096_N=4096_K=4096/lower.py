# from tvm.script import tir as T
@tvm.script.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer[(4096, 4096), "float32"], B: T.Buffer[(4096, 4096), "float32"], Y: T.Buffer[(4096, 4096), "float32"]):
        # function attr dict
        T.func_attr({"global_symbol": "main", "tir.noalias": True})
        # var definition
        threadIdx_x = T.env_thread("threadIdx.x")
        blockIdx_x = T.env_thread("blockIdx.x")
        # buffer definition
        A_1 = T.buffer_decl([16777216], dtype="float32", data=A.data)
        B_1 = T.buffer_decl([16777216], dtype="float32", data=B.data)
        Y_1 = T.buffer_decl([16777216], dtype="float32", data=Y.data)
        # body
        T.launch_thread(blockIdx_x, 512)
        Y_local = T.allocate([128], "float32", "local")
        Y_local_1 = T.buffer_decl([128], dtype="float32", data=Y_local, scope="local")
        A_shared_dyn = T.allocate([2560], "float32", "shared.dyn")
        A_shared_dyn_1 = T.buffer_decl([2560], dtype="float32", data=A_shared_dyn, scope="shared.dyn")
        B_shared_dyn = T.allocate([5120], "float32", "shared.dyn")
        B_shared_dyn_1 = T.buffer_decl([5120], dtype="float32", data=B_shared_dyn, scope="shared.dyn")
        A_shared_dyn_local = T.allocate([4], "float32x4", "local")
        A_shared_dyn_local_1 = T.buffer_decl([4], dtype="float32x4", data=A_shared_dyn_local, scope="local")
        B_shared_dyn_local = T.allocate([32], "float32", "local")
        B_shared_dyn_local_1 = T.buffer_decl([32], dtype="float32", data=B_shared_dyn_local, scope="local")
        T.launch_thread(threadIdx_x, 256)
        Y_local_1[0] = T.float32(0)
        Y_local_1[16] = T.float32(0)
        Y_local_1[32] = T.float32(0)
        Y_local_1[48] = T.float32(0)
        Y_local_1[64] = T.float32(0)
        Y_local_1[80] = T.float32(0)
        Y_local_1[96] = T.float32(0)
        Y_local_1[112] = T.float32(0)
        Y_local_1[1] = T.float32(0)
        Y_local_1[17] = T.float32(0)
        Y_local_1[33] = T.float32(0)
        Y_local_1[49] = T.float32(0)
        Y_local_1[65] = T.float32(0)
        Y_local_1[81] = T.float32(0)
        Y_local_1[97] = T.float32(0)
        Y_local_1[113] = T.float32(0)
        Y_local_1[2] = T.float32(0)
        Y_local_1[18] = T.float32(0)
        Y_local_1[34] = T.float32(0)
        Y_local_1[50] = T.float32(0)
        Y_local_1[66] = T.float32(0)
        Y_local_1[82] = T.float32(0)
        Y_local_1[98] = T.float32(0)
        Y_local_1[114] = T.float32(0)
        Y_local_1[3] = T.float32(0)
        Y_local_1[19] = T.float32(0)
        Y_local_1[35] = T.float32(0)
        Y_local_1[51] = T.float32(0)
        Y_local_1[67] = T.float32(0)
        Y_local_1[83] = T.float32(0)
        Y_local_1[99] = T.float32(0)
        Y_local_1[115] = T.float32(0)
        Y_local_1[4] = T.float32(0)
        Y_local_1[20] = T.float32(0)
        Y_local_1[36] = T.float32(0)
        Y_local_1[52] = T.float32(0)
        Y_local_1[68] = T.float32(0)
        Y_local_1[84] = T.float32(0)
        Y_local_1[100] = T.float32(0)
        Y_local_1[116] = T.float32(0)
        Y_local_1[5] = T.float32(0)
        Y_local_1[21] = T.float32(0)
        Y_local_1[37] = T.float32(0)
        Y_local_1[53] = T.float32(0)
        Y_local_1[69] = T.float32(0)
        Y_local_1[85] = T.float32(0)
        Y_local_1[101] = T.float32(0)
        Y_local_1[117] = T.float32(0)
        Y_local_1[6] = T.float32(0)
        Y_local_1[22] = T.float32(0)
        Y_local_1[38] = T.float32(0)
        Y_local_1[54] = T.float32(0)
        Y_local_1[70] = T.float32(0)
        Y_local_1[86] = T.float32(0)
        Y_local_1[102] = T.float32(0)
        Y_local_1[118] = T.float32(0)
        Y_local_1[7] = T.float32(0)
        Y_local_1[23] = T.float32(0)
        Y_local_1[39] = T.float32(0)
        Y_local_1[55] = T.float32(0)
        Y_local_1[71] = T.float32(0)
        Y_local_1[87] = T.float32(0)
        Y_local_1[103] = T.float32(0)
        Y_local_1[119] = T.float32(0)
        Y_local_1[8] = T.float32(0)
        Y_local_1[24] = T.float32(0)
        Y_local_1[40] = T.float32(0)
        Y_local_1[56] = T.float32(0)
        Y_local_1[72] = T.float32(0)
        Y_local_1[88] = T.float32(0)
        Y_local_1[104] = T.float32(0)
        Y_local_1[120] = T.float32(0)
        Y_local_1[9] = T.float32(0)
        Y_local_1[25] = T.float32(0)
        Y_local_1[41] = T.float32(0)
        Y_local_1[57] = T.float32(0)
        Y_local_1[73] = T.float32(0)
        Y_local_1[89] = T.float32(0)
        Y_local_1[105] = T.float32(0)
        Y_local_1[121] = T.float32(0)
        Y_local_1[10] = T.float32(0)
        Y_local_1[26] = T.float32(0)
        Y_local_1[42] = T.float32(0)
        Y_local_1[58] = T.float32(0)
        Y_local_1[74] = T.float32(0)
        Y_local_1[90] = T.float32(0)
        Y_local_1[106] = T.float32(0)
        Y_local_1[122] = T.float32(0)
        Y_local_1[11] = T.float32(0)
        Y_local_1[27] = T.float32(0)
        Y_local_1[43] = T.float32(0)
        Y_local_1[59] = T.float32(0)
        Y_local_1[75] = T.float32(0)
        Y_local_1[91] = T.float32(0)
        Y_local_1[107] = T.float32(0)
        Y_local_1[123] = T.float32(0)
        Y_local_1[12] = T.float32(0)
        Y_local_1[28] = T.float32(0)
        Y_local_1[44] = T.float32(0)
        Y_local_1[60] = T.float32(0)
        Y_local_1[76] = T.float32(0)
        Y_local_1[92] = T.float32(0)
        Y_local_1[108] = T.float32(0)
        Y_local_1[124] = T.float32(0)
        Y_local_1[13] = T.float32(0)
        Y_local_1[29] = T.float32(0)
        Y_local_1[45] = T.float32(0)
        Y_local_1[61] = T.float32(0)
        Y_local_1[77] = T.float32(0)
        Y_local_1[93] = T.float32(0)
        Y_local_1[109] = T.float32(0)
        Y_local_1[125] = T.float32(0)
        Y_local_1[14] = T.float32(0)
        Y_local_1[30] = T.float32(0)
        Y_local_1[46] = T.float32(0)
        Y_local_1[62] = T.float32(0)
        Y_local_1[78] = T.float32(0)
        Y_local_1[94] = T.float32(0)
        Y_local_1[110] = T.float32(0)
        Y_local_1[126] = T.float32(0)
        Y_local_1[15] = T.float32(0)
        Y_local_1[31] = T.float32(0)
        Y_local_1[47] = T.float32(0)
        Y_local_1[63] = T.float32(0)
        Y_local_1[79] = T.float32(0)
        Y_local_1[95] = T.float32(0)
        Y_local_1[111] = T.float32(0)
        Y_local_1[127] = T.float32(0)
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2]
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 128] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 1]
            T.attr(0, "async_scope", 1)
            B_shared_dyn_1[threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4:threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 4] = B_1[threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4:threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 4]
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 512] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 4]
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 640] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 5]
            T.attr(0, "async_scope", 1)
            B_shared_dyn_1[threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 1024:threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 1024 + 4] = B_1[threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 16384:threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 16384 + 4]
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 1024] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 8]
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 1152] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 9]
            T.attr(0, "async_scope", 1)
            B_shared_dyn_1[threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 2048:threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 2048 + 4] = B_1[threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 32768:threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 32768 + 4]
        with T.attr(0, "async_commit_queue_scope", 0):
            with T.attr(0, "async_scope", 1):
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 1536] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 12]
                A_shared_dyn_1[threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 1664] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + threadIdx_x % 2 * 2 + 13]
            T.attr(0, "async_scope", 1)
            B_shared_dyn_1[threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 3072:threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 3072 + 4] = B_1[threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 49152:threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 49152 + 4]
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 3)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 4]
        for k_0 in T.serial(1020):
            cse_var_1: T.int32 = (k_0 + 4) % 5
            with T.attr(0, "async_commit_queue_scope", 0):
                with T.attr(0, "async_scope", 1):
                    A_shared_dyn_1[cse_var_1 * 512 + threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + k_0 * 4 + threadIdx_x % 2 * 2 + 16]
                    A_shared_dyn_1[cse_var_1 * 512 + threadIdx_x % 2 * 256 + threadIdx_x // 64 * 32 + threadIdx_x % 16 // 8 * 16 + threadIdx_x % 64 // 16 * 4 + threadIdx_x % 8 // 2 + 128] = A_1[blockIdx_x // 16 * 524288 + threadIdx_x // 2 * 4096 + k_0 * 4 + threadIdx_x % 2 * 2 + 17]
                T.attr(0, "async_scope", 1)
                B_shared_dyn_1[cse_var_1 * 1024 + threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4:cse_var_1 * 1024 + threadIdx_x // 16 * 64 + threadIdx_x % 2 * 32 + threadIdx_x % 16 // 2 * 4 + 4] = B_1[k_0 * 16384 + threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 65536:k_0 * 16384 + threadIdx_x // 64 * 4096 + blockIdx_x % 16 * 256 + threadIdx_x % 64 * 4 + 65536 + 4]
            with T.attr(0, "async_wait_queue_scope", 0):
                T.attr(0, "async_wait_inflight_count", 3)
                for ax0_0 in T.serial(2):
                    A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[k_0 % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 128:k_0 % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 128 + 4]
                for ax1_0 in T.serial(4):
                    B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[k_0 % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 256:k_0 % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 256 + 4]
                Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
                Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
                for ax0_0 in T.serial(2):
                    A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[k_0 % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 256:k_0 % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 256 + 4]
                for ax1_0 in T.serial(4):
                    B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[k_0 % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 512:k_0 % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 512 + 4]
                Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
                Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
                Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
                Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
                Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
                Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
                Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
                Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
                Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
                Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
                Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
                Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
                Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
                Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
                Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
                Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
                Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
                Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
                Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
                Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
                Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
                Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
                Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
                Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
                Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
                Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
                Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
                Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
                Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
                Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
                Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
                Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
                for ax0_0 in T.serial(2):
                    A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[k_0 % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 384:k_0 % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 384 + 4]
                for ax1_0 in T.serial(4):
                    B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[k_0 % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 768:k_0 % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 768 + 4]
                Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
                Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
                Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
                Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
                Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
                Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
                Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
                Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
                Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
                Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
                Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
                Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
                Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
                Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
                Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
                Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
                Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[(k_0 + 1) % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4:(k_0 + 1) % 5 * 512 + threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[(k_0 + 1) % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4:(k_0 + 1) % 5 * 1024 + threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 2)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 128:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 128 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 256:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 256 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 256:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 256 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 512:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 512 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 384:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 384 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 768:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 768 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
        for ax0_0 in T.serial(2):
            A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 512:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 512 + 4]
        for ax1_0 in T.serial(4):
            B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1024:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1024 + 4]
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 1)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 640:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 640 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1280:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1280 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 768:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 768 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1536:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1536 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 896:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 896 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1792:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 1792 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
        for ax0_0 in T.serial(2):
            A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1024:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1024 + 4]
        for ax1_0 in T.serial(4):
            B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2048:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2048 + 4]
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
        with T.attr(0, "async_wait_queue_scope", 0):
            T.attr(0, "async_wait_inflight_count", 0)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1152:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1152 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2304:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2304 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1280:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1280 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2560:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2560 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
            for ax0_0 in T.serial(2):
                A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1408:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1408 + 4]
            for ax1_0 in T.serial(4):
                B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2816:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 2816 + 4]
            Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
            Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
            Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
            Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
            Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
            Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
            Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
            Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
            Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
            Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
            Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
            Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
            Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
            Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
            Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
            Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
            Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
        for ax0_0 in T.serial(2):
            A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1536:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1536 + 4]
        for ax1_0 in T.serial(4):
            B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3072:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3072 + 4]
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
        for ax0_0 in T.serial(2):
            A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1664:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1664 + 4]
        for ax1_0 in T.serial(4):
            B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3328:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3328 + 4]
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
        for ax0_0 in T.serial(2):
            A_shared_dyn_local_1[ax0_0] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1792:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1792 + 4]
        for ax1_0 in T.serial(4):
            B_shared_dyn_local_1[ax1_0 * 4:ax1_0 * 4 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3584:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3584 + 4]
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
        for ax0_0 in T.serial(2):
            A_shared_dyn_local_1[ax0_0 + 2] = A_shared_dyn_1[threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1920:threadIdx_x % 64 // 16 * 32 + ax0_0 * 16 + threadIdx_x % 16 // 8 * 8 + threadIdx_x % 2 * 4 + 1920 + 4]
        for ax1_0 in T.serial(4):
            B_shared_dyn_local_1[ax1_0 * 4 + 16:ax1_0 * 4 + 16 + 4] = B_shared_dyn_1[threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3840:threadIdx_x // 64 * 64 + ax1_0 % 2 * 32 + threadIdx_x % 8 // 2 * 8 + ax1_0 // 2 * 4 + 3840 + 4]
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[0], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[1], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[2], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[3], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[4], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[5], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[6], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[7], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[8], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[9], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[10], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[11], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[12], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[13], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[14], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[0] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[1] * T.broadcast(B_shared_dyn_local_1[15], 4)
        Y_local_1[0:64:16] = Y_local_1[0:64:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[64:128:16] = Y_local_1[64:128:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[16], 4)
        Y_local_1[1:65:16] = Y_local_1[1:65:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[65:129:16] = Y_local_1[65:129:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[17], 4)
        Y_local_1[2:66:16] = Y_local_1[2:66:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[66:130:16] = Y_local_1[66:130:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[18], 4)
        Y_local_1[3:67:16] = Y_local_1[3:67:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[67:131:16] = Y_local_1[67:131:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[19], 4)
        Y_local_1[4:68:16] = Y_local_1[4:68:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[68:132:16] = Y_local_1[68:132:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[20], 4)
        Y_local_1[5:69:16] = Y_local_1[5:69:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[69:133:16] = Y_local_1[69:133:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[21], 4)
        Y_local_1[6:70:16] = Y_local_1[6:70:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[70:134:16] = Y_local_1[70:134:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[22], 4)
        Y_local_1[7:71:16] = Y_local_1[7:71:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[71:135:16] = Y_local_1[71:135:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[23], 4)
        Y_local_1[8:72:16] = Y_local_1[8:72:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[72:136:16] = Y_local_1[72:136:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[24], 4)
        Y_local_1[9:73:16] = Y_local_1[9:73:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[73:137:16] = Y_local_1[73:137:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[25], 4)
        Y_local_1[10:74:16] = Y_local_1[10:74:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[74:138:16] = Y_local_1[74:138:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[26], 4)
        Y_local_1[11:75:16] = Y_local_1[11:75:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[75:139:16] = Y_local_1[75:139:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[27], 4)
        Y_local_1[12:76:16] = Y_local_1[12:76:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[76:140:16] = Y_local_1[76:140:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[28], 4)
        Y_local_1[13:77:16] = Y_local_1[13:77:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[77:141:16] = Y_local_1[77:141:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[29], 4)
        Y_local_1[14:78:16] = Y_local_1[14:78:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[78:142:16] = Y_local_1[78:142:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[30], 4)
        Y_local_1[15:79:16] = Y_local_1[15:79:16] + A_shared_dyn_local_1[2] * T.broadcast(B_shared_dyn_local_1[31], 4)
        Y_local_1[79:143:16] = Y_local_1[79:143:16] + A_shared_dyn_local_1[3] * T.broadcast(B_shared_dyn_local_1[31], 4)
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4] = Y_local_1[0:4]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4 + 4] = Y_local_1[4:8]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8 + 4] = Y_local_1[8:12]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12 + 4] = Y_local_1[12:16]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4096:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4096 + 4] = Y_local_1[16:20]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4100:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4100 + 4] = Y_local_1[20:24]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4104:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4104 + 4] = Y_local_1[24:28]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4108:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 4108 + 4] = Y_local_1[28:32]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8192:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8192 + 4] = Y_local_1[32:36]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8196:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8196 + 4] = Y_local_1[36:40]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8200:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8200 + 4] = Y_local_1[40:44]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8204:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 8204 + 4] = Y_local_1[44:48]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12288:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12288 + 4] = Y_local_1[48:52]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12292:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12292 + 4] = Y_local_1[52:56]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12296:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12296 + 4] = Y_local_1[56:60]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12300:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 12300 + 4] = Y_local_1[60:64]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16384:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16384 + 4] = Y_local_1[64:68]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16388:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16388 + 4] = Y_local_1[68:72]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16392:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16392 + 4] = Y_local_1[72:76]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16396:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 16396 + 4] = Y_local_1[76:80]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20480:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20480 + 4] = Y_local_1[80:84]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20484:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20484 + 4] = Y_local_1[84:88]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20488:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20488 + 4] = Y_local_1[88:92]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20492:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 20492 + 4] = Y_local_1[92:96]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24576:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24576 + 4] = Y_local_1[96:100]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24580:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24580 + 4] = Y_local_1[100:104]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24584:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24584 + 4] = Y_local_1[104:108]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24588:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 24588 + 4] = Y_local_1[108:112]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28672:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28672 + 4] = Y_local_1[112:116]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28676:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28676 + 4] = Y_local_1[116:120]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28680:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28680 + 4] = Y_local_1[120:124]
        Y_1[blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28684:blockIdx_x // 16 * 524288 + threadIdx_x % 64 // 8 * 65536 + threadIdx_x % 2 * 32768 + blockIdx_x % 16 * 256 + threadIdx_x // 64 * 64 + threadIdx_x % 8 // 2 * 16 + 28684 + 4] = Y_local_1[124:128]
    

