
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(96) main_kernel0(float* __restrict__ A, float* __restrict__ B, float* __restrict__ Y) {
  extern __shared__ uchar buf_dyn_shmem[];
  float Y_local[32];
  float4 A_shared_dyn_local[4];
  float B_shared_dyn_local[8];
  Y_local[0] = 0.000000e+00f;
  Y_local[4] = 0.000000e+00f;
  Y_local[8] = 0.000000e+00f;
  Y_local[12] = 0.000000e+00f;
  Y_local[16] = 0.000000e+00f;
  Y_local[20] = 0.000000e+00f;
  Y_local[24] = 0.000000e+00f;
  Y_local[28] = 0.000000e+00f;
  Y_local[1] = 0.000000e+00f;
  Y_local[5] = 0.000000e+00f;
  Y_local[9] = 0.000000e+00f;
  Y_local[13] = 0.000000e+00f;
  Y_local[17] = 0.000000e+00f;
  Y_local[21] = 0.000000e+00f;
  Y_local[25] = 0.000000e+00f;
  Y_local[29] = 0.000000e+00f;
  Y_local[2] = 0.000000e+00f;
  Y_local[6] = 0.000000e+00f;
  Y_local[10] = 0.000000e+00f;
  Y_local[14] = 0.000000e+00f;
  Y_local[18] = 0.000000e+00f;
  Y_local[22] = 0.000000e+00f;
  Y_local[26] = 0.000000e+00f;
  Y_local[30] = 0.000000e+00f;
  Y_local[3] = 0.000000e+00f;
  Y_local[7] = 0.000000e+00f;
  Y_local[11] = 0.000000e+00f;
  Y_local[15] = 0.000000e+00f;
  Y_local[19] = 0.000000e+00f;
  Y_local[23] = 0.000000e+00f;
  Y_local[27] = 0.000000e+00f;
  Y_local[31] = 0.000000e+00f;
  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((int)threadIdx.x) % 12) * 6) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + (((((int)threadIdx.x) % 12) * 6) & 7)))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) + 1) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 1) & 7)))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) + 2) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 2) & 7)))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) + 3) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 3) & 7)))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) + 4) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 4) & 7)))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) + 5) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 5) & 7)))), "n"(4)
    );
  }
  }

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((int)threadIdx.x) / 12) * 512) + (((((((int)blockIdx.x) & 7) * 48) + ((((int)threadIdx.x) % 12) * 4)) >> 6) * 256)) + ((((int)threadIdx.x) & 1) * 128)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 12) >> 1)) & 7) * 16)) + 10240) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 256))))
    );
    __asm__ __volatile__(
      "cp.async.cg.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(B + ((((((int)threadIdx.x) / 12) * 384) + ((((int)blockIdx.x) & 7) * 48)) + ((((int)threadIdx.x) % 12) * 4)))), "n"(16)
    );
  }
__asm__ __volatile__("cp.async.commit_group;");

  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4)) + 2048)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + (((((int)threadIdx.x) % 12) * 6) & 7)) + 8))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 1) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4)) + 2048)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 1) & 7)) + 8))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 2) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4)) + 2048)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 2) & 7)) + 8))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 3) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4)) + 2048)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 3) & 7)) + 8))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 4) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4)) + 2048)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 4) & 7)) + 8))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 5) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4)) + 2048)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 5) & 7)) + 8))), "n"(4)
    );
  }
  }

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((int)threadIdx.x) / 12) * 512) + (((((((int)blockIdx.x) & 7) * 48) + ((((int)threadIdx.x) % 12) * 4)) >> 6) * 256)) + ((((int)threadIdx.x) & 1) * 128)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 12) >> 1)) & 7) * 16)) + 14336) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 256))))
    );
    __asm__ __volatile__(
      "cp.async.cg.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(B + (((((((int)threadIdx.x) / 12) * 384) + ((((int)blockIdx.x) & 7) * 48)) + ((((int)threadIdx.x) % 12) * 4)) + 3072))), "n"(16)
    );
  }
__asm__ __volatile__("cp.async.commit_group;");

  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4)) + 4096)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + (((((int)threadIdx.x) % 12) * 6) & 7)) + 16))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 1) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4)) + 4096)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 1) & 7)) + 16))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 2) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4)) + 4096)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 2) & 7)) + 16))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 3) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4)) + 4096)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 3) & 7)) + 16))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 4) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4)) + 4096)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 4) & 7)) + 16))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 5) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4)) + 4096)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 5) & 7)) + 16))), "n"(4)
    );
  }
  }

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((int)threadIdx.x) / 12) * 512) + (((((((int)blockIdx.x) & 7) * 48) + ((((int)threadIdx.x) % 12) * 4)) >> 6) * 256)) + ((((int)threadIdx.x) & 1) * 128)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 12) >> 1)) & 7) * 16)) + 18432) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 256))))
    );
    __asm__ __volatile__(
      "cp.async.cg.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(B + (((((((int)threadIdx.x) / 12) * 384) + ((((int)blockIdx.x) & 7) * 48)) + ((((int)threadIdx.x) % 12) * 4)) + 6144))), "n"(16)
    );
  }
__asm__ __volatile__("cp.async.commit_group;");

  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((((int)threadIdx.x) % 12) * 6) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4)) + 6144)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + (((((int)threadIdx.x) % 12) * 6) & 7)) + 24))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 1) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4)) + 6144)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 1) & 7)) + 24))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 2) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4)) + 6144)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 2) & 7)) + 24))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 3) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4)) + 6144)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 3) & 7)) + 24))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 4) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4)) + 6144)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 4) & 7)) + 24))), "n"(4)
    );
  }
  }
  if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((((((int)threadIdx.x) % 12) * 6) + 5) & 7) * 256) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4)) + 6144)))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + ((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + ((((((int)threadIdx.x) % 12) * 6) + 5) & 7)) + 24))), "n"(4)
    );
  }
  }

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((int)threadIdx.x) / 12) * 512) + (((((((int)blockIdx.x) & 7) * 48) + ((((int)threadIdx.x) % 12) * 4)) >> 6) * 256)) + ((((int)threadIdx.x) & 1) * 128)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 12) >> 1)) & 7) * 16)) + 22528) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 256))))
    );
    __asm__ __volatile__(
      "cp.async.cg.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(B + (((((((int)threadIdx.x) / 12) * 384) + ((((int)blockIdx.x) & 7) * 48)) + ((((int)threadIdx.x) % 12) * 4)) + 9216))), "n"(16)
    );
  }
__asm__ __volatile__("cp.async.commit_group;");

__asm__ __volatile__("cp.async.wait_group 3;");

  __syncthreads();
  for (int ax0_0 = 0; ax0_0 < 2; ++ax0_0) {
    A_shared_dyn_local[ax0_0] = *(float4*)(((float*)buf_dyn_shmem) + (((((((int)threadIdx.x) / 48) * 32) + (ax0_0 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2560) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
  for (int k_0 = 0; k_0 < 28; ++k_0) {
    __syncthreads();
    if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((k_0 + 4) % 5) * 2048) + ((((((int)threadIdx.x) % 12) * 6) & 7) * 256)) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + (k_0 * 8)) + (((((int)threadIdx.x) % 12) * 6) & 7)) + 32))), "n"(4)
    );
  }
    }
    if (((int)threadIdx.x) < 86) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((k_0 + 4) % 5) * 2048) + (((((((int)threadIdx.x) % 12) * 6) + 1) & 7) * 256)) + (((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + (((((int)threadIdx.x) % 12) * 3) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + ((((((int)threadIdx.x) % 12) * 3) >> 2) * 256)) + (k_0 * 8)) + ((((((int)threadIdx.x) % 12) * 6) + 1) & 7)) + 32))), "n"(4)
    );
  }
    }
    if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((k_0 + 4) % 5) * 2048) + (((((((int)threadIdx.x) % 12) * 6) + 2) & 7) * 256)) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + (k_0 * 8)) + ((((((int)threadIdx.x) % 12) * 6) + 2) & 7)) + 32))), "n"(4)
    );
  }
    }
    if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((k_0 + 4) % 5) * 2048) + (((((((int)threadIdx.x) % 12) * 6) + 3) & 7) * 256)) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 1) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 1) >> 2) * 256)) + (k_0 * 8)) + ((((((int)threadIdx.x) % 12) * 6) + 3) & 7)) + 32))), "n"(4)
    );
  }
    }
    if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((k_0 + 4) % 5) * 2048) + (((((((int)threadIdx.x) % 12) * 6) + 4) & 7) * 256)) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + (k_0 * 8)) + ((((((int)threadIdx.x) % 12) * 6) + 4) & 7)) + 32))), "n"(4)
    );
  }
    }
    if (((int)threadIdx.x) < 85) {

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + ((((((((k_0 + 4) % 5) * 2048) + (((((((int)threadIdx.x) % 12) * 6) + 5) & 7) * 256)) + (((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) >> 5) * 128)) + (((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 7) >> 2) * 64)) + ((((((((int)threadIdx.x) / 12) * 9) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 31) >> 3) * 16)) + ((((((int)threadIdx.x) / 12) + ((((((int)threadIdx.x) % 12) * 3) + 2) >> 2)) & 3) * 4))))
    );
    __asm__ __volatile__(
      "cp.async.ca.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(A + (((((((((int)blockIdx.x) >> 3) * 16384) + ((((int)threadIdx.x) / 12) * 2304)) + (((((((int)threadIdx.x) % 12) * 3) + 2) >> 2) * 256)) + (k_0 * 8)) + ((((((int)threadIdx.x) % 12) * 6) + 5) & 7)) + 32))), "n"(4)
    );
  }
    }

  {
    unsigned int addr;
    __asm__ __volatile__(
      "{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\n"
      : "=r"(addr)
      : "l"((void *)(buf_dyn_shmem + (((((((((k_0 + 4) % 5) * 4096) + ((((int)threadIdx.x) / 12) * 512)) + (((((((int)blockIdx.x) & 7) * 48) + ((((int)threadIdx.x) % 12) * 4)) >> 6) * 256)) + ((((int)threadIdx.x) & 1) * 128)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 12) >> 1)) & 7) * 16)) + 10240) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 256))))
    );
    __asm__ __volatile__(
      "cp.async.cg.shared.global [%0], [%1], %2;"
       :: "r"(addr), "l"((void*)(B + (((((k_0 * 3072) + ((((int)threadIdx.x) / 12) * 384)) + ((((int)blockIdx.x) & 7) * 48)) + ((((int)threadIdx.x) % 12) * 4)) + 12288))), "n"(16)
    );
  }
__asm__ __volatile__("cp.async.commit_group;");

__asm__ __volatile__("cp.async.wait_group 3;");

    __syncthreads();
    for (int ax0_0_1 = 0; ax0_0_1 < 2; ++ax0_0_1) {
      A_shared_dyn_local[(ax0_0_1 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_1 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 64));
    }
    *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2688) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __1 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __2;
        float4 __3 = make_float4(Y_local[__1.x],Y_local[__1.y],Y_local[__1.z],Y_local[__1.w]);
        float4 __4;
          float4 __5 = A_shared_dyn_local[0];
          float4 __6 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __4.x = (__5.x*__6.x);
          __4.y = (__5.y*__6.y);
          __4.z = (__5.z*__6.z);
          __4.w = (__5.w*__6.w);
        __2.x = (__3.x+__4.x);
        __2.y = (__3.y+__4.y);
        __2.z = (__3.z+__4.z);
        __2.w = (__3.w+__4.w);
      Y_local[__1.x] = __2.x;
      Y_local[__1.y] = __2.y;
      Y_local[__1.z] = __2.z;
      Y_local[__1.w] = __2.w;
      int4 __7 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __8;
        float4 __9 = make_float4(Y_local[__7.x],Y_local[__7.y],Y_local[__7.z],Y_local[__7.w]);
        float4 __10;
          float4 __11 = A_shared_dyn_local[1];
          float4 __12 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __10.x = (__11.x*__12.x);
          __10.y = (__11.y*__12.y);
          __10.z = (__11.z*__12.z);
          __10.w = (__11.w*__12.w);
        __8.x = (__9.x+__10.x);
        __8.y = (__9.y+__10.y);
        __8.z = (__9.z+__10.z);
        __8.w = (__9.w+__10.w);
      Y_local[__7.x] = __8.x;
      Y_local[__7.y] = __8.y;
      Y_local[__7.z] = __8.z;
      Y_local[__7.w] = __8.w;
      int4 __13 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __14;
        float4 __15 = make_float4(Y_local[__13.x],Y_local[__13.y],Y_local[__13.z],Y_local[__13.w]);
        float4 __16;
          float4 __17 = A_shared_dyn_local[0];
          float4 __18 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __16.x = (__17.x*__18.x);
          __16.y = (__17.y*__18.y);
          __16.z = (__17.z*__18.z);
          __16.w = (__17.w*__18.w);
        __14.x = (__15.x+__16.x);
        __14.y = (__15.y+__16.y);
        __14.z = (__15.z+__16.z);
        __14.w = (__15.w+__16.w);
      Y_local[__13.x] = __14.x;
      Y_local[__13.y] = __14.y;
      Y_local[__13.z] = __14.z;
      Y_local[__13.w] = __14.w;
      int4 __19 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __20;
        float4 __21 = make_float4(Y_local[__19.x],Y_local[__19.y],Y_local[__19.z],Y_local[__19.w]);
        float4 __22;
          float4 __23 = A_shared_dyn_local[1];
          float4 __24 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __22.x = (__23.x*__24.x);
          __22.y = (__23.y*__24.y);
          __22.z = (__23.z*__24.z);
          __22.w = (__23.w*__24.w);
        __20.x = (__21.x+__22.x);
        __20.y = (__21.y+__22.y);
        __20.z = (__21.z+__22.z);
        __20.w = (__21.w+__22.w);
      Y_local[__19.x] = __20.x;
      Y_local[__19.y] = __20.y;
      Y_local[__19.z] = __20.z;
      Y_local[__19.w] = __20.w;
      int4 __25 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __26;
        float4 __27 = make_float4(Y_local[__25.x],Y_local[__25.y],Y_local[__25.z],Y_local[__25.w]);
        float4 __28;
          float4 __29 = A_shared_dyn_local[0];
          float4 __30 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __28.x = (__29.x*__30.x);
          __28.y = (__29.y*__30.y);
          __28.z = (__29.z*__30.z);
          __28.w = (__29.w*__30.w);
        __26.x = (__27.x+__28.x);
        __26.y = (__27.y+__28.y);
        __26.z = (__27.z+__28.z);
        __26.w = (__27.w+__28.w);
      Y_local[__25.x] = __26.x;
      Y_local[__25.y] = __26.y;
      Y_local[__25.z] = __26.z;
      Y_local[__25.w] = __26.w;
      int4 __31 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __32;
        float4 __33 = make_float4(Y_local[__31.x],Y_local[__31.y],Y_local[__31.z],Y_local[__31.w]);
        float4 __34;
          float4 __35 = A_shared_dyn_local[1];
          float4 __36 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __34.x = (__35.x*__36.x);
          __34.y = (__35.y*__36.y);
          __34.z = (__35.z*__36.z);
          __34.w = (__35.w*__36.w);
        __32.x = (__33.x+__34.x);
        __32.y = (__33.y+__34.y);
        __32.z = (__33.z+__34.z);
        __32.w = (__33.w+__34.w);
      Y_local[__31.x] = __32.x;
      Y_local[__31.y] = __32.y;
      Y_local[__31.z] = __32.z;
      Y_local[__31.w] = __32.w;
      int4 __37 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __38;
        float4 __39 = make_float4(Y_local[__37.x],Y_local[__37.y],Y_local[__37.z],Y_local[__37.w]);
        float4 __40;
          float4 __41 = A_shared_dyn_local[0];
          float4 __42 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __40.x = (__41.x*__42.x);
          __40.y = (__41.y*__42.y);
          __40.z = (__41.z*__42.z);
          __40.w = (__41.w*__42.w);
        __38.x = (__39.x+__40.x);
        __38.y = (__39.y+__40.y);
        __38.z = (__39.z+__40.z);
        __38.w = (__39.w+__40.w);
      Y_local[__37.x] = __38.x;
      Y_local[__37.y] = __38.y;
      Y_local[__37.z] = __38.z;
      Y_local[__37.w] = __38.w;
      int4 __43 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __44;
        float4 __45 = make_float4(Y_local[__43.x],Y_local[__43.y],Y_local[__43.z],Y_local[__43.w]);
        float4 __46;
          float4 __47 = A_shared_dyn_local[1];
          float4 __48 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __46.x = (__47.x*__48.x);
          __46.y = (__47.y*__48.y);
          __46.z = (__47.z*__48.z);
          __46.w = (__47.w*__48.w);
        __44.x = (__45.x+__46.x);
        __44.y = (__45.y+__46.y);
        __44.z = (__45.z+__46.z);
        __44.w = (__45.w+__46.w);
      Y_local[__43.x] = __44.x;
      Y_local[__43.y] = __44.y;
      Y_local[__43.z] = __44.z;
      Y_local[__43.w] = __44.w;
    for (int ax0_0_2 = 0; ax0_0_2 < 2; ++ax0_0_2) {
      A_shared_dyn_local[ax0_0_2] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_2 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 128));
    }
    *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2816) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __49 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __50;
        float4 __51 = make_float4(Y_local[__49.x],Y_local[__49.y],Y_local[__49.z],Y_local[__49.w]);
        float4 __52;
          float4 __53 = A_shared_dyn_local[2];
          float4 __54 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __52.x = (__53.x*__54.x);
          __52.y = (__53.y*__54.y);
          __52.z = (__53.z*__54.z);
          __52.w = (__53.w*__54.w);
        __50.x = (__51.x+__52.x);
        __50.y = (__51.y+__52.y);
        __50.z = (__51.z+__52.z);
        __50.w = (__51.w+__52.w);
      Y_local[__49.x] = __50.x;
      Y_local[__49.y] = __50.y;
      Y_local[__49.z] = __50.z;
      Y_local[__49.w] = __50.w;
      int4 __55 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __56;
        float4 __57 = make_float4(Y_local[__55.x],Y_local[__55.y],Y_local[__55.z],Y_local[__55.w]);
        float4 __58;
          float4 __59 = A_shared_dyn_local[3];
          float4 __60 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __58.x = (__59.x*__60.x);
          __58.y = (__59.y*__60.y);
          __58.z = (__59.z*__60.z);
          __58.w = (__59.w*__60.w);
        __56.x = (__57.x+__58.x);
        __56.y = (__57.y+__58.y);
        __56.z = (__57.z+__58.z);
        __56.w = (__57.w+__58.w);
      Y_local[__55.x] = __56.x;
      Y_local[__55.y] = __56.y;
      Y_local[__55.z] = __56.z;
      Y_local[__55.w] = __56.w;
      int4 __61 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __62;
        float4 __63 = make_float4(Y_local[__61.x],Y_local[__61.y],Y_local[__61.z],Y_local[__61.w]);
        float4 __64;
          float4 __65 = A_shared_dyn_local[2];
          float4 __66 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __64.x = (__65.x*__66.x);
          __64.y = (__65.y*__66.y);
          __64.z = (__65.z*__66.z);
          __64.w = (__65.w*__66.w);
        __62.x = (__63.x+__64.x);
        __62.y = (__63.y+__64.y);
        __62.z = (__63.z+__64.z);
        __62.w = (__63.w+__64.w);
      Y_local[__61.x] = __62.x;
      Y_local[__61.y] = __62.y;
      Y_local[__61.z] = __62.z;
      Y_local[__61.w] = __62.w;
      int4 __67 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __68;
        float4 __69 = make_float4(Y_local[__67.x],Y_local[__67.y],Y_local[__67.z],Y_local[__67.w]);
        float4 __70;
          float4 __71 = A_shared_dyn_local[3];
          float4 __72 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __70.x = (__71.x*__72.x);
          __70.y = (__71.y*__72.y);
          __70.z = (__71.z*__72.z);
          __70.w = (__71.w*__72.w);
        __68.x = (__69.x+__70.x);
        __68.y = (__69.y+__70.y);
        __68.z = (__69.z+__70.z);
        __68.w = (__69.w+__70.w);
      Y_local[__67.x] = __68.x;
      Y_local[__67.y] = __68.y;
      Y_local[__67.z] = __68.z;
      Y_local[__67.w] = __68.w;
      int4 __73 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __74;
        float4 __75 = make_float4(Y_local[__73.x],Y_local[__73.y],Y_local[__73.z],Y_local[__73.w]);
        float4 __76;
          float4 __77 = A_shared_dyn_local[2];
          float4 __78 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __76.x = (__77.x*__78.x);
          __76.y = (__77.y*__78.y);
          __76.z = (__77.z*__78.z);
          __76.w = (__77.w*__78.w);
        __74.x = (__75.x+__76.x);
        __74.y = (__75.y+__76.y);
        __74.z = (__75.z+__76.z);
        __74.w = (__75.w+__76.w);
      Y_local[__73.x] = __74.x;
      Y_local[__73.y] = __74.y;
      Y_local[__73.z] = __74.z;
      Y_local[__73.w] = __74.w;
      int4 __79 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __80;
        float4 __81 = make_float4(Y_local[__79.x],Y_local[__79.y],Y_local[__79.z],Y_local[__79.w]);
        float4 __82;
          float4 __83 = A_shared_dyn_local[3];
          float4 __84 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __82.x = (__83.x*__84.x);
          __82.y = (__83.y*__84.y);
          __82.z = (__83.z*__84.z);
          __82.w = (__83.w*__84.w);
        __80.x = (__81.x+__82.x);
        __80.y = (__81.y+__82.y);
        __80.z = (__81.z+__82.z);
        __80.w = (__81.w+__82.w);
      Y_local[__79.x] = __80.x;
      Y_local[__79.y] = __80.y;
      Y_local[__79.z] = __80.z;
      Y_local[__79.w] = __80.w;
      int4 __85 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __86;
        float4 __87 = make_float4(Y_local[__85.x],Y_local[__85.y],Y_local[__85.z],Y_local[__85.w]);
        float4 __88;
          float4 __89 = A_shared_dyn_local[2];
          float4 __90 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __88.x = (__89.x*__90.x);
          __88.y = (__89.y*__90.y);
          __88.z = (__89.z*__90.z);
          __88.w = (__89.w*__90.w);
        __86.x = (__87.x+__88.x);
        __86.y = (__87.y+__88.y);
        __86.z = (__87.z+__88.z);
        __86.w = (__87.w+__88.w);
      Y_local[__85.x] = __86.x;
      Y_local[__85.y] = __86.y;
      Y_local[__85.z] = __86.z;
      Y_local[__85.w] = __86.w;
      int4 __91 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __92;
        float4 __93 = make_float4(Y_local[__91.x],Y_local[__91.y],Y_local[__91.z],Y_local[__91.w]);
        float4 __94;
          float4 __95 = A_shared_dyn_local[3];
          float4 __96 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __94.x = (__95.x*__96.x);
          __94.y = (__95.y*__96.y);
          __94.z = (__95.z*__96.z);
          __94.w = (__95.w*__96.w);
        __92.x = (__93.x+__94.x);
        __92.y = (__93.y+__94.y);
        __92.z = (__93.z+__94.z);
        __92.w = (__93.w+__94.w);
      Y_local[__91.x] = __92.x;
      Y_local[__91.y] = __92.y;
      Y_local[__91.z] = __92.z;
      Y_local[__91.w] = __92.w;
    for (int ax0_0_3 = 0; ax0_0_3 < 2; ++ax0_0_3) {
      A_shared_dyn_local[(ax0_0_3 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_3 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 192));
    }
    *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2944) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __97 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __98;
        float4 __99 = make_float4(Y_local[__97.x],Y_local[__97.y],Y_local[__97.z],Y_local[__97.w]);
        float4 __100;
          float4 __101 = A_shared_dyn_local[0];
          float4 __102 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __100.x = (__101.x*__102.x);
          __100.y = (__101.y*__102.y);
          __100.z = (__101.z*__102.z);
          __100.w = (__101.w*__102.w);
        __98.x = (__99.x+__100.x);
        __98.y = (__99.y+__100.y);
        __98.z = (__99.z+__100.z);
        __98.w = (__99.w+__100.w);
      Y_local[__97.x] = __98.x;
      Y_local[__97.y] = __98.y;
      Y_local[__97.z] = __98.z;
      Y_local[__97.w] = __98.w;
      int4 __103 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __104;
        float4 __105 = make_float4(Y_local[__103.x],Y_local[__103.y],Y_local[__103.z],Y_local[__103.w]);
        float4 __106;
          float4 __107 = A_shared_dyn_local[1];
          float4 __108 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __106.x = (__107.x*__108.x);
          __106.y = (__107.y*__108.y);
          __106.z = (__107.z*__108.z);
          __106.w = (__107.w*__108.w);
        __104.x = (__105.x+__106.x);
        __104.y = (__105.y+__106.y);
        __104.z = (__105.z+__106.z);
        __104.w = (__105.w+__106.w);
      Y_local[__103.x] = __104.x;
      Y_local[__103.y] = __104.y;
      Y_local[__103.z] = __104.z;
      Y_local[__103.w] = __104.w;
      int4 __109 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __110;
        float4 __111 = make_float4(Y_local[__109.x],Y_local[__109.y],Y_local[__109.z],Y_local[__109.w]);
        float4 __112;
          float4 __113 = A_shared_dyn_local[0];
          float4 __114 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __112.x = (__113.x*__114.x);
          __112.y = (__113.y*__114.y);
          __112.z = (__113.z*__114.z);
          __112.w = (__113.w*__114.w);
        __110.x = (__111.x+__112.x);
        __110.y = (__111.y+__112.y);
        __110.z = (__111.z+__112.z);
        __110.w = (__111.w+__112.w);
      Y_local[__109.x] = __110.x;
      Y_local[__109.y] = __110.y;
      Y_local[__109.z] = __110.z;
      Y_local[__109.w] = __110.w;
      int4 __115 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __116;
        float4 __117 = make_float4(Y_local[__115.x],Y_local[__115.y],Y_local[__115.z],Y_local[__115.w]);
        float4 __118;
          float4 __119 = A_shared_dyn_local[1];
          float4 __120 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __118.x = (__119.x*__120.x);
          __118.y = (__119.y*__120.y);
          __118.z = (__119.z*__120.z);
          __118.w = (__119.w*__120.w);
        __116.x = (__117.x+__118.x);
        __116.y = (__117.y+__118.y);
        __116.z = (__117.z+__118.z);
        __116.w = (__117.w+__118.w);
      Y_local[__115.x] = __116.x;
      Y_local[__115.y] = __116.y;
      Y_local[__115.z] = __116.z;
      Y_local[__115.w] = __116.w;
      int4 __121 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __122;
        float4 __123 = make_float4(Y_local[__121.x],Y_local[__121.y],Y_local[__121.z],Y_local[__121.w]);
        float4 __124;
          float4 __125 = A_shared_dyn_local[0];
          float4 __126 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __124.x = (__125.x*__126.x);
          __124.y = (__125.y*__126.y);
          __124.z = (__125.z*__126.z);
          __124.w = (__125.w*__126.w);
        __122.x = (__123.x+__124.x);
        __122.y = (__123.y+__124.y);
        __122.z = (__123.z+__124.z);
        __122.w = (__123.w+__124.w);
      Y_local[__121.x] = __122.x;
      Y_local[__121.y] = __122.y;
      Y_local[__121.z] = __122.z;
      Y_local[__121.w] = __122.w;
      int4 __127 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __128;
        float4 __129 = make_float4(Y_local[__127.x],Y_local[__127.y],Y_local[__127.z],Y_local[__127.w]);
        float4 __130;
          float4 __131 = A_shared_dyn_local[1];
          float4 __132 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __130.x = (__131.x*__132.x);
          __130.y = (__131.y*__132.y);
          __130.z = (__131.z*__132.z);
          __130.w = (__131.w*__132.w);
        __128.x = (__129.x+__130.x);
        __128.y = (__129.y+__130.y);
        __128.z = (__129.z+__130.z);
        __128.w = (__129.w+__130.w);
      Y_local[__127.x] = __128.x;
      Y_local[__127.y] = __128.y;
      Y_local[__127.z] = __128.z;
      Y_local[__127.w] = __128.w;
      int4 __133 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __134;
        float4 __135 = make_float4(Y_local[__133.x],Y_local[__133.y],Y_local[__133.z],Y_local[__133.w]);
        float4 __136;
          float4 __137 = A_shared_dyn_local[0];
          float4 __138 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __136.x = (__137.x*__138.x);
          __136.y = (__137.y*__138.y);
          __136.z = (__137.z*__138.z);
          __136.w = (__137.w*__138.w);
        __134.x = (__135.x+__136.x);
        __134.y = (__135.y+__136.y);
        __134.z = (__135.z+__136.z);
        __134.w = (__135.w+__136.w);
      Y_local[__133.x] = __134.x;
      Y_local[__133.y] = __134.y;
      Y_local[__133.z] = __134.z;
      Y_local[__133.w] = __134.w;
      int4 __139 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __140;
        float4 __141 = make_float4(Y_local[__139.x],Y_local[__139.y],Y_local[__139.z],Y_local[__139.w]);
        float4 __142;
          float4 __143 = A_shared_dyn_local[1];
          float4 __144 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __142.x = (__143.x*__144.x);
          __142.y = (__143.y*__144.y);
          __142.z = (__143.z*__144.z);
          __142.w = (__143.w*__144.w);
        __140.x = (__141.x+__142.x);
        __140.y = (__141.y+__142.y);
        __140.z = (__141.z+__142.z);
        __140.w = (__141.w+__142.w);
      Y_local[__139.x] = __140.x;
      Y_local[__139.y] = __140.y;
      Y_local[__139.z] = __140.z;
      Y_local[__139.w] = __140.w;
    for (int ax0_0_4 = 0; ax0_0_4 < 2; ++ax0_0_4) {
      A_shared_dyn_local[ax0_0_4] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_4 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 256));
    }
    *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3072) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __145 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __146;
        float4 __147 = make_float4(Y_local[__145.x],Y_local[__145.y],Y_local[__145.z],Y_local[__145.w]);
        float4 __148;
          float4 __149 = A_shared_dyn_local[2];
          float4 __150 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __148.x = (__149.x*__150.x);
          __148.y = (__149.y*__150.y);
          __148.z = (__149.z*__150.z);
          __148.w = (__149.w*__150.w);
        __146.x = (__147.x+__148.x);
        __146.y = (__147.y+__148.y);
        __146.z = (__147.z+__148.z);
        __146.w = (__147.w+__148.w);
      Y_local[__145.x] = __146.x;
      Y_local[__145.y] = __146.y;
      Y_local[__145.z] = __146.z;
      Y_local[__145.w] = __146.w;
      int4 __151 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __152;
        float4 __153 = make_float4(Y_local[__151.x],Y_local[__151.y],Y_local[__151.z],Y_local[__151.w]);
        float4 __154;
          float4 __155 = A_shared_dyn_local[3];
          float4 __156 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __154.x = (__155.x*__156.x);
          __154.y = (__155.y*__156.y);
          __154.z = (__155.z*__156.z);
          __154.w = (__155.w*__156.w);
        __152.x = (__153.x+__154.x);
        __152.y = (__153.y+__154.y);
        __152.z = (__153.z+__154.z);
        __152.w = (__153.w+__154.w);
      Y_local[__151.x] = __152.x;
      Y_local[__151.y] = __152.y;
      Y_local[__151.z] = __152.z;
      Y_local[__151.w] = __152.w;
      int4 __157 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __158;
        float4 __159 = make_float4(Y_local[__157.x],Y_local[__157.y],Y_local[__157.z],Y_local[__157.w]);
        float4 __160;
          float4 __161 = A_shared_dyn_local[2];
          float4 __162 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __160.x = (__161.x*__162.x);
          __160.y = (__161.y*__162.y);
          __160.z = (__161.z*__162.z);
          __160.w = (__161.w*__162.w);
        __158.x = (__159.x+__160.x);
        __158.y = (__159.y+__160.y);
        __158.z = (__159.z+__160.z);
        __158.w = (__159.w+__160.w);
      Y_local[__157.x] = __158.x;
      Y_local[__157.y] = __158.y;
      Y_local[__157.z] = __158.z;
      Y_local[__157.w] = __158.w;
      int4 __163 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __164;
        float4 __165 = make_float4(Y_local[__163.x],Y_local[__163.y],Y_local[__163.z],Y_local[__163.w]);
        float4 __166;
          float4 __167 = A_shared_dyn_local[3];
          float4 __168 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __166.x = (__167.x*__168.x);
          __166.y = (__167.y*__168.y);
          __166.z = (__167.z*__168.z);
          __166.w = (__167.w*__168.w);
        __164.x = (__165.x+__166.x);
        __164.y = (__165.y+__166.y);
        __164.z = (__165.z+__166.z);
        __164.w = (__165.w+__166.w);
      Y_local[__163.x] = __164.x;
      Y_local[__163.y] = __164.y;
      Y_local[__163.z] = __164.z;
      Y_local[__163.w] = __164.w;
      int4 __169 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __170;
        float4 __171 = make_float4(Y_local[__169.x],Y_local[__169.y],Y_local[__169.z],Y_local[__169.w]);
        float4 __172;
          float4 __173 = A_shared_dyn_local[2];
          float4 __174 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __172.x = (__173.x*__174.x);
          __172.y = (__173.y*__174.y);
          __172.z = (__173.z*__174.z);
          __172.w = (__173.w*__174.w);
        __170.x = (__171.x+__172.x);
        __170.y = (__171.y+__172.y);
        __170.z = (__171.z+__172.z);
        __170.w = (__171.w+__172.w);
      Y_local[__169.x] = __170.x;
      Y_local[__169.y] = __170.y;
      Y_local[__169.z] = __170.z;
      Y_local[__169.w] = __170.w;
      int4 __175 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __176;
        float4 __177 = make_float4(Y_local[__175.x],Y_local[__175.y],Y_local[__175.z],Y_local[__175.w]);
        float4 __178;
          float4 __179 = A_shared_dyn_local[3];
          float4 __180 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __178.x = (__179.x*__180.x);
          __178.y = (__179.y*__180.y);
          __178.z = (__179.z*__180.z);
          __178.w = (__179.w*__180.w);
        __176.x = (__177.x+__178.x);
        __176.y = (__177.y+__178.y);
        __176.z = (__177.z+__178.z);
        __176.w = (__177.w+__178.w);
      Y_local[__175.x] = __176.x;
      Y_local[__175.y] = __176.y;
      Y_local[__175.z] = __176.z;
      Y_local[__175.w] = __176.w;
      int4 __181 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __182;
        float4 __183 = make_float4(Y_local[__181.x],Y_local[__181.y],Y_local[__181.z],Y_local[__181.w]);
        float4 __184;
          float4 __185 = A_shared_dyn_local[2];
          float4 __186 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __184.x = (__185.x*__186.x);
          __184.y = (__185.y*__186.y);
          __184.z = (__185.z*__186.z);
          __184.w = (__185.w*__186.w);
        __182.x = (__183.x+__184.x);
        __182.y = (__183.y+__184.y);
        __182.z = (__183.z+__184.z);
        __182.w = (__183.w+__184.w);
      Y_local[__181.x] = __182.x;
      Y_local[__181.y] = __182.y;
      Y_local[__181.z] = __182.z;
      Y_local[__181.w] = __182.w;
      int4 __187 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __188;
        float4 __189 = make_float4(Y_local[__187.x],Y_local[__187.y],Y_local[__187.z],Y_local[__187.w]);
        float4 __190;
          float4 __191 = A_shared_dyn_local[3];
          float4 __192 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __190.x = (__191.x*__192.x);
          __190.y = (__191.y*__192.y);
          __190.z = (__191.z*__192.z);
          __190.w = (__191.w*__192.w);
        __188.x = (__189.x+__190.x);
        __188.y = (__189.y+__190.y);
        __188.z = (__189.z+__190.z);
        __188.w = (__189.w+__190.w);
      Y_local[__187.x] = __188.x;
      Y_local[__187.y] = __188.y;
      Y_local[__187.z] = __188.z;
      Y_local[__187.w] = __188.w;
    for (int ax0_0_5 = 0; ax0_0_5 < 2; ++ax0_0_5) {
      A_shared_dyn_local[(ax0_0_5 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_5 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 320));
    }
    *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3200) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __193 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __194;
        float4 __195 = make_float4(Y_local[__193.x],Y_local[__193.y],Y_local[__193.z],Y_local[__193.w]);
        float4 __196;
          float4 __197 = A_shared_dyn_local[0];
          float4 __198 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __196.x = (__197.x*__198.x);
          __196.y = (__197.y*__198.y);
          __196.z = (__197.z*__198.z);
          __196.w = (__197.w*__198.w);
        __194.x = (__195.x+__196.x);
        __194.y = (__195.y+__196.y);
        __194.z = (__195.z+__196.z);
        __194.w = (__195.w+__196.w);
      Y_local[__193.x] = __194.x;
      Y_local[__193.y] = __194.y;
      Y_local[__193.z] = __194.z;
      Y_local[__193.w] = __194.w;
      int4 __199 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __200;
        float4 __201 = make_float4(Y_local[__199.x],Y_local[__199.y],Y_local[__199.z],Y_local[__199.w]);
        float4 __202;
          float4 __203 = A_shared_dyn_local[1];
          float4 __204 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __202.x = (__203.x*__204.x);
          __202.y = (__203.y*__204.y);
          __202.z = (__203.z*__204.z);
          __202.w = (__203.w*__204.w);
        __200.x = (__201.x+__202.x);
        __200.y = (__201.y+__202.y);
        __200.z = (__201.z+__202.z);
        __200.w = (__201.w+__202.w);
      Y_local[__199.x] = __200.x;
      Y_local[__199.y] = __200.y;
      Y_local[__199.z] = __200.z;
      Y_local[__199.w] = __200.w;
      int4 __205 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __206;
        float4 __207 = make_float4(Y_local[__205.x],Y_local[__205.y],Y_local[__205.z],Y_local[__205.w]);
        float4 __208;
          float4 __209 = A_shared_dyn_local[0];
          float4 __210 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __208.x = (__209.x*__210.x);
          __208.y = (__209.y*__210.y);
          __208.z = (__209.z*__210.z);
          __208.w = (__209.w*__210.w);
        __206.x = (__207.x+__208.x);
        __206.y = (__207.y+__208.y);
        __206.z = (__207.z+__208.z);
        __206.w = (__207.w+__208.w);
      Y_local[__205.x] = __206.x;
      Y_local[__205.y] = __206.y;
      Y_local[__205.z] = __206.z;
      Y_local[__205.w] = __206.w;
      int4 __211 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __212;
        float4 __213 = make_float4(Y_local[__211.x],Y_local[__211.y],Y_local[__211.z],Y_local[__211.w]);
        float4 __214;
          float4 __215 = A_shared_dyn_local[1];
          float4 __216 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __214.x = (__215.x*__216.x);
          __214.y = (__215.y*__216.y);
          __214.z = (__215.z*__216.z);
          __214.w = (__215.w*__216.w);
        __212.x = (__213.x+__214.x);
        __212.y = (__213.y+__214.y);
        __212.z = (__213.z+__214.z);
        __212.w = (__213.w+__214.w);
      Y_local[__211.x] = __212.x;
      Y_local[__211.y] = __212.y;
      Y_local[__211.z] = __212.z;
      Y_local[__211.w] = __212.w;
      int4 __217 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __218;
        float4 __219 = make_float4(Y_local[__217.x],Y_local[__217.y],Y_local[__217.z],Y_local[__217.w]);
        float4 __220;
          float4 __221 = A_shared_dyn_local[0];
          float4 __222 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __220.x = (__221.x*__222.x);
          __220.y = (__221.y*__222.y);
          __220.z = (__221.z*__222.z);
          __220.w = (__221.w*__222.w);
        __218.x = (__219.x+__220.x);
        __218.y = (__219.y+__220.y);
        __218.z = (__219.z+__220.z);
        __218.w = (__219.w+__220.w);
      Y_local[__217.x] = __218.x;
      Y_local[__217.y] = __218.y;
      Y_local[__217.z] = __218.z;
      Y_local[__217.w] = __218.w;
      int4 __223 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __224;
        float4 __225 = make_float4(Y_local[__223.x],Y_local[__223.y],Y_local[__223.z],Y_local[__223.w]);
        float4 __226;
          float4 __227 = A_shared_dyn_local[1];
          float4 __228 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __226.x = (__227.x*__228.x);
          __226.y = (__227.y*__228.y);
          __226.z = (__227.z*__228.z);
          __226.w = (__227.w*__228.w);
        __224.x = (__225.x+__226.x);
        __224.y = (__225.y+__226.y);
        __224.z = (__225.z+__226.z);
        __224.w = (__225.w+__226.w);
      Y_local[__223.x] = __224.x;
      Y_local[__223.y] = __224.y;
      Y_local[__223.z] = __224.z;
      Y_local[__223.w] = __224.w;
      int4 __229 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __230;
        float4 __231 = make_float4(Y_local[__229.x],Y_local[__229.y],Y_local[__229.z],Y_local[__229.w]);
        float4 __232;
          float4 __233 = A_shared_dyn_local[0];
          float4 __234 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __232.x = (__233.x*__234.x);
          __232.y = (__233.y*__234.y);
          __232.z = (__233.z*__234.z);
          __232.w = (__233.w*__234.w);
        __230.x = (__231.x+__232.x);
        __230.y = (__231.y+__232.y);
        __230.z = (__231.z+__232.z);
        __230.w = (__231.w+__232.w);
      Y_local[__229.x] = __230.x;
      Y_local[__229.y] = __230.y;
      Y_local[__229.z] = __230.z;
      Y_local[__229.w] = __230.w;
      int4 __235 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __236;
        float4 __237 = make_float4(Y_local[__235.x],Y_local[__235.y],Y_local[__235.z],Y_local[__235.w]);
        float4 __238;
          float4 __239 = A_shared_dyn_local[1];
          float4 __240 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __238.x = (__239.x*__240.x);
          __238.y = (__239.y*__240.y);
          __238.z = (__239.z*__240.z);
          __238.w = (__239.w*__240.w);
        __236.x = (__237.x+__238.x);
        __236.y = (__237.y+__238.y);
        __236.z = (__237.z+__238.z);
        __236.w = (__237.w+__238.w);
      Y_local[__235.x] = __236.x;
      Y_local[__235.y] = __236.y;
      Y_local[__235.z] = __236.z;
      Y_local[__235.w] = __236.w;
    for (int ax0_0_6 = 0; ax0_0_6 < 2; ++ax0_0_6) {
      A_shared_dyn_local[ax0_0_6] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_6 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 384));
    }
    *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3328) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __241 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __242;
        float4 __243 = make_float4(Y_local[__241.x],Y_local[__241.y],Y_local[__241.z],Y_local[__241.w]);
        float4 __244;
          float4 __245 = A_shared_dyn_local[2];
          float4 __246 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __244.x = (__245.x*__246.x);
          __244.y = (__245.y*__246.y);
          __244.z = (__245.z*__246.z);
          __244.w = (__245.w*__246.w);
        __242.x = (__243.x+__244.x);
        __242.y = (__243.y+__244.y);
        __242.z = (__243.z+__244.z);
        __242.w = (__243.w+__244.w);
      Y_local[__241.x] = __242.x;
      Y_local[__241.y] = __242.y;
      Y_local[__241.z] = __242.z;
      Y_local[__241.w] = __242.w;
      int4 __247 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __248;
        float4 __249 = make_float4(Y_local[__247.x],Y_local[__247.y],Y_local[__247.z],Y_local[__247.w]);
        float4 __250;
          float4 __251 = A_shared_dyn_local[3];
          float4 __252 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __250.x = (__251.x*__252.x);
          __250.y = (__251.y*__252.y);
          __250.z = (__251.z*__252.z);
          __250.w = (__251.w*__252.w);
        __248.x = (__249.x+__250.x);
        __248.y = (__249.y+__250.y);
        __248.z = (__249.z+__250.z);
        __248.w = (__249.w+__250.w);
      Y_local[__247.x] = __248.x;
      Y_local[__247.y] = __248.y;
      Y_local[__247.z] = __248.z;
      Y_local[__247.w] = __248.w;
      int4 __253 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __254;
        float4 __255 = make_float4(Y_local[__253.x],Y_local[__253.y],Y_local[__253.z],Y_local[__253.w]);
        float4 __256;
          float4 __257 = A_shared_dyn_local[2];
          float4 __258 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __256.x = (__257.x*__258.x);
          __256.y = (__257.y*__258.y);
          __256.z = (__257.z*__258.z);
          __256.w = (__257.w*__258.w);
        __254.x = (__255.x+__256.x);
        __254.y = (__255.y+__256.y);
        __254.z = (__255.z+__256.z);
        __254.w = (__255.w+__256.w);
      Y_local[__253.x] = __254.x;
      Y_local[__253.y] = __254.y;
      Y_local[__253.z] = __254.z;
      Y_local[__253.w] = __254.w;
      int4 __259 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __260;
        float4 __261 = make_float4(Y_local[__259.x],Y_local[__259.y],Y_local[__259.z],Y_local[__259.w]);
        float4 __262;
          float4 __263 = A_shared_dyn_local[3];
          float4 __264 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __262.x = (__263.x*__264.x);
          __262.y = (__263.y*__264.y);
          __262.z = (__263.z*__264.z);
          __262.w = (__263.w*__264.w);
        __260.x = (__261.x+__262.x);
        __260.y = (__261.y+__262.y);
        __260.z = (__261.z+__262.z);
        __260.w = (__261.w+__262.w);
      Y_local[__259.x] = __260.x;
      Y_local[__259.y] = __260.y;
      Y_local[__259.z] = __260.z;
      Y_local[__259.w] = __260.w;
      int4 __265 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __266;
        float4 __267 = make_float4(Y_local[__265.x],Y_local[__265.y],Y_local[__265.z],Y_local[__265.w]);
        float4 __268;
          float4 __269 = A_shared_dyn_local[2];
          float4 __270 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __268.x = (__269.x*__270.x);
          __268.y = (__269.y*__270.y);
          __268.z = (__269.z*__270.z);
          __268.w = (__269.w*__270.w);
        __266.x = (__267.x+__268.x);
        __266.y = (__267.y+__268.y);
        __266.z = (__267.z+__268.z);
        __266.w = (__267.w+__268.w);
      Y_local[__265.x] = __266.x;
      Y_local[__265.y] = __266.y;
      Y_local[__265.z] = __266.z;
      Y_local[__265.w] = __266.w;
      int4 __271 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __272;
        float4 __273 = make_float4(Y_local[__271.x],Y_local[__271.y],Y_local[__271.z],Y_local[__271.w]);
        float4 __274;
          float4 __275 = A_shared_dyn_local[3];
          float4 __276 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __274.x = (__275.x*__276.x);
          __274.y = (__275.y*__276.y);
          __274.z = (__275.z*__276.z);
          __274.w = (__275.w*__276.w);
        __272.x = (__273.x+__274.x);
        __272.y = (__273.y+__274.y);
        __272.z = (__273.z+__274.z);
        __272.w = (__273.w+__274.w);
      Y_local[__271.x] = __272.x;
      Y_local[__271.y] = __272.y;
      Y_local[__271.z] = __272.z;
      Y_local[__271.w] = __272.w;
      int4 __277 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __278;
        float4 __279 = make_float4(Y_local[__277.x],Y_local[__277.y],Y_local[__277.z],Y_local[__277.w]);
        float4 __280;
          float4 __281 = A_shared_dyn_local[2];
          float4 __282 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __280.x = (__281.x*__282.x);
          __280.y = (__281.y*__282.y);
          __280.z = (__281.z*__282.z);
          __280.w = (__281.w*__282.w);
        __278.x = (__279.x+__280.x);
        __278.y = (__279.y+__280.y);
        __278.z = (__279.z+__280.z);
        __278.w = (__279.w+__280.w);
      Y_local[__277.x] = __278.x;
      Y_local[__277.y] = __278.y;
      Y_local[__277.z] = __278.z;
      Y_local[__277.w] = __278.w;
      int4 __283 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __284;
        float4 __285 = make_float4(Y_local[__283.x],Y_local[__283.y],Y_local[__283.z],Y_local[__283.w]);
        float4 __286;
          float4 __287 = A_shared_dyn_local[3];
          float4 __288 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __286.x = (__287.x*__288.x);
          __286.y = (__287.y*__288.y);
          __286.z = (__287.z*__288.z);
          __286.w = (__287.w*__288.w);
        __284.x = (__285.x+__286.x);
        __284.y = (__285.y+__286.y);
        __284.z = (__285.z+__286.z);
        __284.w = (__285.w+__286.w);
      Y_local[__283.x] = __284.x;
      Y_local[__283.y] = __284.y;
      Y_local[__283.z] = __284.z;
      Y_local[__283.w] = __284.w;
    for (int ax0_0_7 = 0; ax0_0_7 < 2; ++ax0_0_7) {
      A_shared_dyn_local[(ax0_0_7 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_7 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 448));
    }
    *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3456) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __289 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __290;
        float4 __291 = make_float4(Y_local[__289.x],Y_local[__289.y],Y_local[__289.z],Y_local[__289.w]);
        float4 __292;
          float4 __293 = A_shared_dyn_local[0];
          float4 __294 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __292.x = (__293.x*__294.x);
          __292.y = (__293.y*__294.y);
          __292.z = (__293.z*__294.z);
          __292.w = (__293.w*__294.w);
        __290.x = (__291.x+__292.x);
        __290.y = (__291.y+__292.y);
        __290.z = (__291.z+__292.z);
        __290.w = (__291.w+__292.w);
      Y_local[__289.x] = __290.x;
      Y_local[__289.y] = __290.y;
      Y_local[__289.z] = __290.z;
      Y_local[__289.w] = __290.w;
      int4 __295 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __296;
        float4 __297 = make_float4(Y_local[__295.x],Y_local[__295.y],Y_local[__295.z],Y_local[__295.w]);
        float4 __298;
          float4 __299 = A_shared_dyn_local[1];
          float4 __300 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
          __298.x = (__299.x*__300.x);
          __298.y = (__299.y*__300.y);
          __298.z = (__299.z*__300.z);
          __298.w = (__299.w*__300.w);
        __296.x = (__297.x+__298.x);
        __296.y = (__297.y+__298.y);
        __296.z = (__297.z+__298.z);
        __296.w = (__297.w+__298.w);
      Y_local[__295.x] = __296.x;
      Y_local[__295.y] = __296.y;
      Y_local[__295.z] = __296.z;
      Y_local[__295.w] = __296.w;
      int4 __301 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __302;
        float4 __303 = make_float4(Y_local[__301.x],Y_local[__301.y],Y_local[__301.z],Y_local[__301.w]);
        float4 __304;
          float4 __305 = A_shared_dyn_local[0];
          float4 __306 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __304.x = (__305.x*__306.x);
          __304.y = (__305.y*__306.y);
          __304.z = (__305.z*__306.z);
          __304.w = (__305.w*__306.w);
        __302.x = (__303.x+__304.x);
        __302.y = (__303.y+__304.y);
        __302.z = (__303.z+__304.z);
        __302.w = (__303.w+__304.w);
      Y_local[__301.x] = __302.x;
      Y_local[__301.y] = __302.y;
      Y_local[__301.z] = __302.z;
      Y_local[__301.w] = __302.w;
      int4 __307 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __308;
        float4 __309 = make_float4(Y_local[__307.x],Y_local[__307.y],Y_local[__307.z],Y_local[__307.w]);
        float4 __310;
          float4 __311 = A_shared_dyn_local[1];
          float4 __312 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
          __310.x = (__311.x*__312.x);
          __310.y = (__311.y*__312.y);
          __310.z = (__311.z*__312.z);
          __310.w = (__311.w*__312.w);
        __308.x = (__309.x+__310.x);
        __308.y = (__309.y+__310.y);
        __308.z = (__309.z+__310.z);
        __308.w = (__309.w+__310.w);
      Y_local[__307.x] = __308.x;
      Y_local[__307.y] = __308.y;
      Y_local[__307.z] = __308.z;
      Y_local[__307.w] = __308.w;
      int4 __313 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __314;
        float4 __315 = make_float4(Y_local[__313.x],Y_local[__313.y],Y_local[__313.z],Y_local[__313.w]);
        float4 __316;
          float4 __317 = A_shared_dyn_local[0];
          float4 __318 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __316.x = (__317.x*__318.x);
          __316.y = (__317.y*__318.y);
          __316.z = (__317.z*__318.z);
          __316.w = (__317.w*__318.w);
        __314.x = (__315.x+__316.x);
        __314.y = (__315.y+__316.y);
        __314.z = (__315.z+__316.z);
        __314.w = (__315.w+__316.w);
      Y_local[__313.x] = __314.x;
      Y_local[__313.y] = __314.y;
      Y_local[__313.z] = __314.z;
      Y_local[__313.w] = __314.w;
      int4 __319 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __320;
        float4 __321 = make_float4(Y_local[__319.x],Y_local[__319.y],Y_local[__319.z],Y_local[__319.w]);
        float4 __322;
          float4 __323 = A_shared_dyn_local[1];
          float4 __324 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
          __322.x = (__323.x*__324.x);
          __322.y = (__323.y*__324.y);
          __322.z = (__323.z*__324.z);
          __322.w = (__323.w*__324.w);
        __320.x = (__321.x+__322.x);
        __320.y = (__321.y+__322.y);
        __320.z = (__321.z+__322.z);
        __320.w = (__321.w+__322.w);
      Y_local[__319.x] = __320.x;
      Y_local[__319.y] = __320.y;
      Y_local[__319.z] = __320.z;
      Y_local[__319.w] = __320.w;
      int4 __325 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __326;
        float4 __327 = make_float4(Y_local[__325.x],Y_local[__325.y],Y_local[__325.z],Y_local[__325.w]);
        float4 __328;
          float4 __329 = A_shared_dyn_local[0];
          float4 __330 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __328.x = (__329.x*__330.x);
          __328.y = (__329.y*__330.y);
          __328.z = (__329.z*__330.z);
          __328.w = (__329.w*__330.w);
        __326.x = (__327.x+__328.x);
        __326.y = (__327.y+__328.y);
        __326.z = (__327.z+__328.z);
        __326.w = (__327.w+__328.w);
      Y_local[__325.x] = __326.x;
      Y_local[__325.y] = __326.y;
      Y_local[__325.z] = __326.z;
      Y_local[__325.w] = __326.w;
      int4 __331 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __332;
        float4 __333 = make_float4(Y_local[__331.x],Y_local[__331.y],Y_local[__331.z],Y_local[__331.w]);
        float4 __334;
          float4 __335 = A_shared_dyn_local[1];
          float4 __336 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
          __334.x = (__335.x*__336.x);
          __334.y = (__335.y*__336.y);
          __334.z = (__335.z*__336.z);
          __334.w = (__335.w*__336.w);
        __332.x = (__333.x+__334.x);
        __332.y = (__333.y+__334.y);
        __332.z = (__333.z+__334.z);
        __332.w = (__333.w+__334.w);
      Y_local[__331.x] = __332.x;
      Y_local[__331.y] = __332.y;
      Y_local[__331.z] = __332.z;
      Y_local[__331.w] = __332.w;
    for (int ax0_0_8 = 0; ax0_0_8 < 2; ++ax0_0_8) {
      A_shared_dyn_local[ax0_0_8] = *(float4*)(((float*)buf_dyn_shmem) + (((((((k_0 + 1) % 5) * 512) + ((((int)threadIdx.x) / 48) * 32)) + (ax0_0_8 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)));
    }
    *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + ((((((((k_0 + 1) % 5) * 1024) + (((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64)) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2560) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
      int4 __337 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
      float4 __338;
        float4 __339 = make_float4(Y_local[__337.x],Y_local[__337.y],Y_local[__337.z],Y_local[__337.w]);
        float4 __340;
          float4 __341 = A_shared_dyn_local[2];
          float4 __342 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __340.x = (__341.x*__342.x);
          __340.y = (__341.y*__342.y);
          __340.z = (__341.z*__342.z);
          __340.w = (__341.w*__342.w);
        __338.x = (__339.x+__340.x);
        __338.y = (__339.y+__340.y);
        __338.z = (__339.z+__340.z);
        __338.w = (__339.w+__340.w);
      Y_local[__337.x] = __338.x;
      Y_local[__337.y] = __338.y;
      Y_local[__337.z] = __338.z;
      Y_local[__337.w] = __338.w;
      int4 __343 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
      float4 __344;
        float4 __345 = make_float4(Y_local[__343.x],Y_local[__343.y],Y_local[__343.z],Y_local[__343.w]);
        float4 __346;
          float4 __347 = A_shared_dyn_local[3];
          float4 __348 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
          __346.x = (__347.x*__348.x);
          __346.y = (__347.y*__348.y);
          __346.z = (__347.z*__348.z);
          __346.w = (__347.w*__348.w);
        __344.x = (__345.x+__346.x);
        __344.y = (__345.y+__346.y);
        __344.z = (__345.z+__346.z);
        __344.w = (__345.w+__346.w);
      Y_local[__343.x] = __344.x;
      Y_local[__343.y] = __344.y;
      Y_local[__343.z] = __344.z;
      Y_local[__343.w] = __344.w;
      int4 __349 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
      float4 __350;
        float4 __351 = make_float4(Y_local[__349.x],Y_local[__349.y],Y_local[__349.z],Y_local[__349.w]);
        float4 __352;
          float4 __353 = A_shared_dyn_local[2];
          float4 __354 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __352.x = (__353.x*__354.x);
          __352.y = (__353.y*__354.y);
          __352.z = (__353.z*__354.z);
          __352.w = (__353.w*__354.w);
        __350.x = (__351.x+__352.x);
        __350.y = (__351.y+__352.y);
        __350.z = (__351.z+__352.z);
        __350.w = (__351.w+__352.w);
      Y_local[__349.x] = __350.x;
      Y_local[__349.y] = __350.y;
      Y_local[__349.z] = __350.z;
      Y_local[__349.w] = __350.w;
      int4 __355 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
      float4 __356;
        float4 __357 = make_float4(Y_local[__355.x],Y_local[__355.y],Y_local[__355.z],Y_local[__355.w]);
        float4 __358;
          float4 __359 = A_shared_dyn_local[3];
          float4 __360 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
          __358.x = (__359.x*__360.x);
          __358.y = (__359.y*__360.y);
          __358.z = (__359.z*__360.z);
          __358.w = (__359.w*__360.w);
        __356.x = (__357.x+__358.x);
        __356.y = (__357.y+__358.y);
        __356.z = (__357.z+__358.z);
        __356.w = (__357.w+__358.w);
      Y_local[__355.x] = __356.x;
      Y_local[__355.y] = __356.y;
      Y_local[__355.z] = __356.z;
      Y_local[__355.w] = __356.w;
      int4 __361 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
      float4 __362;
        float4 __363 = make_float4(Y_local[__361.x],Y_local[__361.y],Y_local[__361.z],Y_local[__361.w]);
        float4 __364;
          float4 __365 = A_shared_dyn_local[2];
          float4 __366 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __364.x = (__365.x*__366.x);
          __364.y = (__365.y*__366.y);
          __364.z = (__365.z*__366.z);
          __364.w = (__365.w*__366.w);
        __362.x = (__363.x+__364.x);
        __362.y = (__363.y+__364.y);
        __362.z = (__363.z+__364.z);
        __362.w = (__363.w+__364.w);
      Y_local[__361.x] = __362.x;
      Y_local[__361.y] = __362.y;
      Y_local[__361.z] = __362.z;
      Y_local[__361.w] = __362.w;
      int4 __367 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
      float4 __368;
        float4 __369 = make_float4(Y_local[__367.x],Y_local[__367.y],Y_local[__367.z],Y_local[__367.w]);
        float4 __370;
          float4 __371 = A_shared_dyn_local[3];
          float4 __372 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
          __370.x = (__371.x*__372.x);
          __370.y = (__371.y*__372.y);
          __370.z = (__371.z*__372.z);
          __370.w = (__371.w*__372.w);
        __368.x = (__369.x+__370.x);
        __368.y = (__369.y+__370.y);
        __368.z = (__369.z+__370.z);
        __368.w = (__369.w+__370.w);
      Y_local[__367.x] = __368.x;
      Y_local[__367.y] = __368.y;
      Y_local[__367.z] = __368.z;
      Y_local[__367.w] = __368.w;
      int4 __373 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
      float4 __374;
        float4 __375 = make_float4(Y_local[__373.x],Y_local[__373.y],Y_local[__373.z],Y_local[__373.w]);
        float4 __376;
          float4 __377 = A_shared_dyn_local[2];
          float4 __378 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __376.x = (__377.x*__378.x);
          __376.y = (__377.y*__378.y);
          __376.z = (__377.z*__378.z);
          __376.w = (__377.w*__378.w);
        __374.x = (__375.x+__376.x);
        __374.y = (__375.y+__376.y);
        __374.z = (__375.z+__376.z);
        __374.w = (__375.w+__376.w);
      Y_local[__373.x] = __374.x;
      Y_local[__373.y] = __374.y;
      Y_local[__373.z] = __374.z;
      Y_local[__373.w] = __374.w;
      int4 __379 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
      float4 __380;
        float4 __381 = make_float4(Y_local[__379.x],Y_local[__379.y],Y_local[__379.z],Y_local[__379.w]);
        float4 __382;
          float4 __383 = A_shared_dyn_local[3];
          float4 __384 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
          __382.x = (__383.x*__384.x);
          __382.y = (__383.y*__384.y);
          __382.z = (__383.z*__384.z);
          __382.w = (__383.w*__384.w);
        __380.x = (__381.x+__382.x);
        __380.y = (__381.y+__382.y);
        __380.z = (__381.z+__382.z);
        __380.w = (__381.w+__382.w);
      Y_local[__379.x] = __380.x;
      Y_local[__379.y] = __380.y;
      Y_local[__379.z] = __380.z;
      Y_local[__379.w] = __380.w;
  }
__asm__ __volatile__("cp.async.wait_group 2;");

  __syncthreads();
  for (int ax0_0_9 = 0; ax0_0_9 < 2; ++ax0_0_9) {
    A_shared_dyn_local[(ax0_0_9 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_9 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1600));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 5760) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __385 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __386;
      float4 __387 = make_float4(Y_local[__385.x],Y_local[__385.y],Y_local[__385.z],Y_local[__385.w]);
      float4 __388;
        float4 __389 = A_shared_dyn_local[0];
        float4 __390 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __388.x = (__389.x*__390.x);
        __388.y = (__389.y*__390.y);
        __388.z = (__389.z*__390.z);
        __388.w = (__389.w*__390.w);
      __386.x = (__387.x+__388.x);
      __386.y = (__387.y+__388.y);
      __386.z = (__387.z+__388.z);
      __386.w = (__387.w+__388.w);
    Y_local[__385.x] = __386.x;
    Y_local[__385.y] = __386.y;
    Y_local[__385.z] = __386.z;
    Y_local[__385.w] = __386.w;
    int4 __391 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __392;
      float4 __393 = make_float4(Y_local[__391.x],Y_local[__391.y],Y_local[__391.z],Y_local[__391.w]);
      float4 __394;
        float4 __395 = A_shared_dyn_local[1];
        float4 __396 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __394.x = (__395.x*__396.x);
        __394.y = (__395.y*__396.y);
        __394.z = (__395.z*__396.z);
        __394.w = (__395.w*__396.w);
      __392.x = (__393.x+__394.x);
      __392.y = (__393.y+__394.y);
      __392.z = (__393.z+__394.z);
      __392.w = (__393.w+__394.w);
    Y_local[__391.x] = __392.x;
    Y_local[__391.y] = __392.y;
    Y_local[__391.z] = __392.z;
    Y_local[__391.w] = __392.w;
    int4 __397 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __398;
      float4 __399 = make_float4(Y_local[__397.x],Y_local[__397.y],Y_local[__397.z],Y_local[__397.w]);
      float4 __400;
        float4 __401 = A_shared_dyn_local[0];
        float4 __402 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __400.x = (__401.x*__402.x);
        __400.y = (__401.y*__402.y);
        __400.z = (__401.z*__402.z);
        __400.w = (__401.w*__402.w);
      __398.x = (__399.x+__400.x);
      __398.y = (__399.y+__400.y);
      __398.z = (__399.z+__400.z);
      __398.w = (__399.w+__400.w);
    Y_local[__397.x] = __398.x;
    Y_local[__397.y] = __398.y;
    Y_local[__397.z] = __398.z;
    Y_local[__397.w] = __398.w;
    int4 __403 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __404;
      float4 __405 = make_float4(Y_local[__403.x],Y_local[__403.y],Y_local[__403.z],Y_local[__403.w]);
      float4 __406;
        float4 __407 = A_shared_dyn_local[1];
        float4 __408 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __406.x = (__407.x*__408.x);
        __406.y = (__407.y*__408.y);
        __406.z = (__407.z*__408.z);
        __406.w = (__407.w*__408.w);
      __404.x = (__405.x+__406.x);
      __404.y = (__405.y+__406.y);
      __404.z = (__405.z+__406.z);
      __404.w = (__405.w+__406.w);
    Y_local[__403.x] = __404.x;
    Y_local[__403.y] = __404.y;
    Y_local[__403.z] = __404.z;
    Y_local[__403.w] = __404.w;
    int4 __409 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __410;
      float4 __411 = make_float4(Y_local[__409.x],Y_local[__409.y],Y_local[__409.z],Y_local[__409.w]);
      float4 __412;
        float4 __413 = A_shared_dyn_local[0];
        float4 __414 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __412.x = (__413.x*__414.x);
        __412.y = (__413.y*__414.y);
        __412.z = (__413.z*__414.z);
        __412.w = (__413.w*__414.w);
      __410.x = (__411.x+__412.x);
      __410.y = (__411.y+__412.y);
      __410.z = (__411.z+__412.z);
      __410.w = (__411.w+__412.w);
    Y_local[__409.x] = __410.x;
    Y_local[__409.y] = __410.y;
    Y_local[__409.z] = __410.z;
    Y_local[__409.w] = __410.w;
    int4 __415 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __416;
      float4 __417 = make_float4(Y_local[__415.x],Y_local[__415.y],Y_local[__415.z],Y_local[__415.w]);
      float4 __418;
        float4 __419 = A_shared_dyn_local[1];
        float4 __420 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __418.x = (__419.x*__420.x);
        __418.y = (__419.y*__420.y);
        __418.z = (__419.z*__420.z);
        __418.w = (__419.w*__420.w);
      __416.x = (__417.x+__418.x);
      __416.y = (__417.y+__418.y);
      __416.z = (__417.z+__418.z);
      __416.w = (__417.w+__418.w);
    Y_local[__415.x] = __416.x;
    Y_local[__415.y] = __416.y;
    Y_local[__415.z] = __416.z;
    Y_local[__415.w] = __416.w;
    int4 __421 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __422;
      float4 __423 = make_float4(Y_local[__421.x],Y_local[__421.y],Y_local[__421.z],Y_local[__421.w]);
      float4 __424;
        float4 __425 = A_shared_dyn_local[0];
        float4 __426 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __424.x = (__425.x*__426.x);
        __424.y = (__425.y*__426.y);
        __424.z = (__425.z*__426.z);
        __424.w = (__425.w*__426.w);
      __422.x = (__423.x+__424.x);
      __422.y = (__423.y+__424.y);
      __422.z = (__423.z+__424.z);
      __422.w = (__423.w+__424.w);
    Y_local[__421.x] = __422.x;
    Y_local[__421.y] = __422.y;
    Y_local[__421.z] = __422.z;
    Y_local[__421.w] = __422.w;
    int4 __427 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __428;
      float4 __429 = make_float4(Y_local[__427.x],Y_local[__427.y],Y_local[__427.z],Y_local[__427.w]);
      float4 __430;
        float4 __431 = A_shared_dyn_local[1];
        float4 __432 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __430.x = (__431.x*__432.x);
        __430.y = (__431.y*__432.y);
        __430.z = (__431.z*__432.z);
        __430.w = (__431.w*__432.w);
      __428.x = (__429.x+__430.x);
      __428.y = (__429.y+__430.y);
      __428.z = (__429.z+__430.z);
      __428.w = (__429.w+__430.w);
    Y_local[__427.x] = __428.x;
    Y_local[__427.y] = __428.y;
    Y_local[__427.z] = __428.z;
    Y_local[__427.w] = __428.w;
  for (int ax0_0_10 = 0; ax0_0_10 < 2; ++ax0_0_10) {
    A_shared_dyn_local[ax0_0_10] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_10 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1664));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 5888) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __433 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __434;
      float4 __435 = make_float4(Y_local[__433.x],Y_local[__433.y],Y_local[__433.z],Y_local[__433.w]);
      float4 __436;
        float4 __437 = A_shared_dyn_local[2];
        float4 __438 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __436.x = (__437.x*__438.x);
        __436.y = (__437.y*__438.y);
        __436.z = (__437.z*__438.z);
        __436.w = (__437.w*__438.w);
      __434.x = (__435.x+__436.x);
      __434.y = (__435.y+__436.y);
      __434.z = (__435.z+__436.z);
      __434.w = (__435.w+__436.w);
    Y_local[__433.x] = __434.x;
    Y_local[__433.y] = __434.y;
    Y_local[__433.z] = __434.z;
    Y_local[__433.w] = __434.w;
    int4 __439 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __440;
      float4 __441 = make_float4(Y_local[__439.x],Y_local[__439.y],Y_local[__439.z],Y_local[__439.w]);
      float4 __442;
        float4 __443 = A_shared_dyn_local[3];
        float4 __444 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __442.x = (__443.x*__444.x);
        __442.y = (__443.y*__444.y);
        __442.z = (__443.z*__444.z);
        __442.w = (__443.w*__444.w);
      __440.x = (__441.x+__442.x);
      __440.y = (__441.y+__442.y);
      __440.z = (__441.z+__442.z);
      __440.w = (__441.w+__442.w);
    Y_local[__439.x] = __440.x;
    Y_local[__439.y] = __440.y;
    Y_local[__439.z] = __440.z;
    Y_local[__439.w] = __440.w;
    int4 __445 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __446;
      float4 __447 = make_float4(Y_local[__445.x],Y_local[__445.y],Y_local[__445.z],Y_local[__445.w]);
      float4 __448;
        float4 __449 = A_shared_dyn_local[2];
        float4 __450 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __448.x = (__449.x*__450.x);
        __448.y = (__449.y*__450.y);
        __448.z = (__449.z*__450.z);
        __448.w = (__449.w*__450.w);
      __446.x = (__447.x+__448.x);
      __446.y = (__447.y+__448.y);
      __446.z = (__447.z+__448.z);
      __446.w = (__447.w+__448.w);
    Y_local[__445.x] = __446.x;
    Y_local[__445.y] = __446.y;
    Y_local[__445.z] = __446.z;
    Y_local[__445.w] = __446.w;
    int4 __451 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __452;
      float4 __453 = make_float4(Y_local[__451.x],Y_local[__451.y],Y_local[__451.z],Y_local[__451.w]);
      float4 __454;
        float4 __455 = A_shared_dyn_local[3];
        float4 __456 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __454.x = (__455.x*__456.x);
        __454.y = (__455.y*__456.y);
        __454.z = (__455.z*__456.z);
        __454.w = (__455.w*__456.w);
      __452.x = (__453.x+__454.x);
      __452.y = (__453.y+__454.y);
      __452.z = (__453.z+__454.z);
      __452.w = (__453.w+__454.w);
    Y_local[__451.x] = __452.x;
    Y_local[__451.y] = __452.y;
    Y_local[__451.z] = __452.z;
    Y_local[__451.w] = __452.w;
    int4 __457 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __458;
      float4 __459 = make_float4(Y_local[__457.x],Y_local[__457.y],Y_local[__457.z],Y_local[__457.w]);
      float4 __460;
        float4 __461 = A_shared_dyn_local[2];
        float4 __462 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __460.x = (__461.x*__462.x);
        __460.y = (__461.y*__462.y);
        __460.z = (__461.z*__462.z);
        __460.w = (__461.w*__462.w);
      __458.x = (__459.x+__460.x);
      __458.y = (__459.y+__460.y);
      __458.z = (__459.z+__460.z);
      __458.w = (__459.w+__460.w);
    Y_local[__457.x] = __458.x;
    Y_local[__457.y] = __458.y;
    Y_local[__457.z] = __458.z;
    Y_local[__457.w] = __458.w;
    int4 __463 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __464;
      float4 __465 = make_float4(Y_local[__463.x],Y_local[__463.y],Y_local[__463.z],Y_local[__463.w]);
      float4 __466;
        float4 __467 = A_shared_dyn_local[3];
        float4 __468 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __466.x = (__467.x*__468.x);
        __466.y = (__467.y*__468.y);
        __466.z = (__467.z*__468.z);
        __466.w = (__467.w*__468.w);
      __464.x = (__465.x+__466.x);
      __464.y = (__465.y+__466.y);
      __464.z = (__465.z+__466.z);
      __464.w = (__465.w+__466.w);
    Y_local[__463.x] = __464.x;
    Y_local[__463.y] = __464.y;
    Y_local[__463.z] = __464.z;
    Y_local[__463.w] = __464.w;
    int4 __469 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __470;
      float4 __471 = make_float4(Y_local[__469.x],Y_local[__469.y],Y_local[__469.z],Y_local[__469.w]);
      float4 __472;
        float4 __473 = A_shared_dyn_local[2];
        float4 __474 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __472.x = (__473.x*__474.x);
        __472.y = (__473.y*__474.y);
        __472.z = (__473.z*__474.z);
        __472.w = (__473.w*__474.w);
      __470.x = (__471.x+__472.x);
      __470.y = (__471.y+__472.y);
      __470.z = (__471.z+__472.z);
      __470.w = (__471.w+__472.w);
    Y_local[__469.x] = __470.x;
    Y_local[__469.y] = __470.y;
    Y_local[__469.z] = __470.z;
    Y_local[__469.w] = __470.w;
    int4 __475 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __476;
      float4 __477 = make_float4(Y_local[__475.x],Y_local[__475.y],Y_local[__475.z],Y_local[__475.w]);
      float4 __478;
        float4 __479 = A_shared_dyn_local[3];
        float4 __480 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __478.x = (__479.x*__480.x);
        __478.y = (__479.y*__480.y);
        __478.z = (__479.z*__480.z);
        __478.w = (__479.w*__480.w);
      __476.x = (__477.x+__478.x);
      __476.y = (__477.y+__478.y);
      __476.z = (__477.z+__478.z);
      __476.w = (__477.w+__478.w);
    Y_local[__475.x] = __476.x;
    Y_local[__475.y] = __476.y;
    Y_local[__475.z] = __476.z;
    Y_local[__475.w] = __476.w;
  for (int ax0_0_11 = 0; ax0_0_11 < 2; ++ax0_0_11) {
    A_shared_dyn_local[(ax0_0_11 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_11 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1728));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6016) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __481 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __482;
      float4 __483 = make_float4(Y_local[__481.x],Y_local[__481.y],Y_local[__481.z],Y_local[__481.w]);
      float4 __484;
        float4 __485 = A_shared_dyn_local[0];
        float4 __486 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __484.x = (__485.x*__486.x);
        __484.y = (__485.y*__486.y);
        __484.z = (__485.z*__486.z);
        __484.w = (__485.w*__486.w);
      __482.x = (__483.x+__484.x);
      __482.y = (__483.y+__484.y);
      __482.z = (__483.z+__484.z);
      __482.w = (__483.w+__484.w);
    Y_local[__481.x] = __482.x;
    Y_local[__481.y] = __482.y;
    Y_local[__481.z] = __482.z;
    Y_local[__481.w] = __482.w;
    int4 __487 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __488;
      float4 __489 = make_float4(Y_local[__487.x],Y_local[__487.y],Y_local[__487.z],Y_local[__487.w]);
      float4 __490;
        float4 __491 = A_shared_dyn_local[1];
        float4 __492 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __490.x = (__491.x*__492.x);
        __490.y = (__491.y*__492.y);
        __490.z = (__491.z*__492.z);
        __490.w = (__491.w*__492.w);
      __488.x = (__489.x+__490.x);
      __488.y = (__489.y+__490.y);
      __488.z = (__489.z+__490.z);
      __488.w = (__489.w+__490.w);
    Y_local[__487.x] = __488.x;
    Y_local[__487.y] = __488.y;
    Y_local[__487.z] = __488.z;
    Y_local[__487.w] = __488.w;
    int4 __493 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __494;
      float4 __495 = make_float4(Y_local[__493.x],Y_local[__493.y],Y_local[__493.z],Y_local[__493.w]);
      float4 __496;
        float4 __497 = A_shared_dyn_local[0];
        float4 __498 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __496.x = (__497.x*__498.x);
        __496.y = (__497.y*__498.y);
        __496.z = (__497.z*__498.z);
        __496.w = (__497.w*__498.w);
      __494.x = (__495.x+__496.x);
      __494.y = (__495.y+__496.y);
      __494.z = (__495.z+__496.z);
      __494.w = (__495.w+__496.w);
    Y_local[__493.x] = __494.x;
    Y_local[__493.y] = __494.y;
    Y_local[__493.z] = __494.z;
    Y_local[__493.w] = __494.w;
    int4 __499 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __500;
      float4 __501 = make_float4(Y_local[__499.x],Y_local[__499.y],Y_local[__499.z],Y_local[__499.w]);
      float4 __502;
        float4 __503 = A_shared_dyn_local[1];
        float4 __504 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __502.x = (__503.x*__504.x);
        __502.y = (__503.y*__504.y);
        __502.z = (__503.z*__504.z);
        __502.w = (__503.w*__504.w);
      __500.x = (__501.x+__502.x);
      __500.y = (__501.y+__502.y);
      __500.z = (__501.z+__502.z);
      __500.w = (__501.w+__502.w);
    Y_local[__499.x] = __500.x;
    Y_local[__499.y] = __500.y;
    Y_local[__499.z] = __500.z;
    Y_local[__499.w] = __500.w;
    int4 __505 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __506;
      float4 __507 = make_float4(Y_local[__505.x],Y_local[__505.y],Y_local[__505.z],Y_local[__505.w]);
      float4 __508;
        float4 __509 = A_shared_dyn_local[0];
        float4 __510 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __508.x = (__509.x*__510.x);
        __508.y = (__509.y*__510.y);
        __508.z = (__509.z*__510.z);
        __508.w = (__509.w*__510.w);
      __506.x = (__507.x+__508.x);
      __506.y = (__507.y+__508.y);
      __506.z = (__507.z+__508.z);
      __506.w = (__507.w+__508.w);
    Y_local[__505.x] = __506.x;
    Y_local[__505.y] = __506.y;
    Y_local[__505.z] = __506.z;
    Y_local[__505.w] = __506.w;
    int4 __511 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __512;
      float4 __513 = make_float4(Y_local[__511.x],Y_local[__511.y],Y_local[__511.z],Y_local[__511.w]);
      float4 __514;
        float4 __515 = A_shared_dyn_local[1];
        float4 __516 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __514.x = (__515.x*__516.x);
        __514.y = (__515.y*__516.y);
        __514.z = (__515.z*__516.z);
        __514.w = (__515.w*__516.w);
      __512.x = (__513.x+__514.x);
      __512.y = (__513.y+__514.y);
      __512.z = (__513.z+__514.z);
      __512.w = (__513.w+__514.w);
    Y_local[__511.x] = __512.x;
    Y_local[__511.y] = __512.y;
    Y_local[__511.z] = __512.z;
    Y_local[__511.w] = __512.w;
    int4 __517 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __518;
      float4 __519 = make_float4(Y_local[__517.x],Y_local[__517.y],Y_local[__517.z],Y_local[__517.w]);
      float4 __520;
        float4 __521 = A_shared_dyn_local[0];
        float4 __522 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __520.x = (__521.x*__522.x);
        __520.y = (__521.y*__522.y);
        __520.z = (__521.z*__522.z);
        __520.w = (__521.w*__522.w);
      __518.x = (__519.x+__520.x);
      __518.y = (__519.y+__520.y);
      __518.z = (__519.z+__520.z);
      __518.w = (__519.w+__520.w);
    Y_local[__517.x] = __518.x;
    Y_local[__517.y] = __518.y;
    Y_local[__517.z] = __518.z;
    Y_local[__517.w] = __518.w;
    int4 __523 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __524;
      float4 __525 = make_float4(Y_local[__523.x],Y_local[__523.y],Y_local[__523.z],Y_local[__523.w]);
      float4 __526;
        float4 __527 = A_shared_dyn_local[1];
        float4 __528 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __526.x = (__527.x*__528.x);
        __526.y = (__527.y*__528.y);
        __526.z = (__527.z*__528.z);
        __526.w = (__527.w*__528.w);
      __524.x = (__525.x+__526.x);
      __524.y = (__525.y+__526.y);
      __524.z = (__525.z+__526.z);
      __524.w = (__525.w+__526.w);
    Y_local[__523.x] = __524.x;
    Y_local[__523.y] = __524.y;
    Y_local[__523.z] = __524.z;
    Y_local[__523.w] = __524.w;
  for (int ax0_0_12 = 0; ax0_0_12 < 2; ++ax0_0_12) {
    A_shared_dyn_local[ax0_0_12] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_12 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1792));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6144) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __529 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __530;
      float4 __531 = make_float4(Y_local[__529.x],Y_local[__529.y],Y_local[__529.z],Y_local[__529.w]);
      float4 __532;
        float4 __533 = A_shared_dyn_local[2];
        float4 __534 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __532.x = (__533.x*__534.x);
        __532.y = (__533.y*__534.y);
        __532.z = (__533.z*__534.z);
        __532.w = (__533.w*__534.w);
      __530.x = (__531.x+__532.x);
      __530.y = (__531.y+__532.y);
      __530.z = (__531.z+__532.z);
      __530.w = (__531.w+__532.w);
    Y_local[__529.x] = __530.x;
    Y_local[__529.y] = __530.y;
    Y_local[__529.z] = __530.z;
    Y_local[__529.w] = __530.w;
    int4 __535 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __536;
      float4 __537 = make_float4(Y_local[__535.x],Y_local[__535.y],Y_local[__535.z],Y_local[__535.w]);
      float4 __538;
        float4 __539 = A_shared_dyn_local[3];
        float4 __540 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __538.x = (__539.x*__540.x);
        __538.y = (__539.y*__540.y);
        __538.z = (__539.z*__540.z);
        __538.w = (__539.w*__540.w);
      __536.x = (__537.x+__538.x);
      __536.y = (__537.y+__538.y);
      __536.z = (__537.z+__538.z);
      __536.w = (__537.w+__538.w);
    Y_local[__535.x] = __536.x;
    Y_local[__535.y] = __536.y;
    Y_local[__535.z] = __536.z;
    Y_local[__535.w] = __536.w;
    int4 __541 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __542;
      float4 __543 = make_float4(Y_local[__541.x],Y_local[__541.y],Y_local[__541.z],Y_local[__541.w]);
      float4 __544;
        float4 __545 = A_shared_dyn_local[2];
        float4 __546 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __544.x = (__545.x*__546.x);
        __544.y = (__545.y*__546.y);
        __544.z = (__545.z*__546.z);
        __544.w = (__545.w*__546.w);
      __542.x = (__543.x+__544.x);
      __542.y = (__543.y+__544.y);
      __542.z = (__543.z+__544.z);
      __542.w = (__543.w+__544.w);
    Y_local[__541.x] = __542.x;
    Y_local[__541.y] = __542.y;
    Y_local[__541.z] = __542.z;
    Y_local[__541.w] = __542.w;
    int4 __547 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __548;
      float4 __549 = make_float4(Y_local[__547.x],Y_local[__547.y],Y_local[__547.z],Y_local[__547.w]);
      float4 __550;
        float4 __551 = A_shared_dyn_local[3];
        float4 __552 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __550.x = (__551.x*__552.x);
        __550.y = (__551.y*__552.y);
        __550.z = (__551.z*__552.z);
        __550.w = (__551.w*__552.w);
      __548.x = (__549.x+__550.x);
      __548.y = (__549.y+__550.y);
      __548.z = (__549.z+__550.z);
      __548.w = (__549.w+__550.w);
    Y_local[__547.x] = __548.x;
    Y_local[__547.y] = __548.y;
    Y_local[__547.z] = __548.z;
    Y_local[__547.w] = __548.w;
    int4 __553 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __554;
      float4 __555 = make_float4(Y_local[__553.x],Y_local[__553.y],Y_local[__553.z],Y_local[__553.w]);
      float4 __556;
        float4 __557 = A_shared_dyn_local[2];
        float4 __558 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __556.x = (__557.x*__558.x);
        __556.y = (__557.y*__558.y);
        __556.z = (__557.z*__558.z);
        __556.w = (__557.w*__558.w);
      __554.x = (__555.x+__556.x);
      __554.y = (__555.y+__556.y);
      __554.z = (__555.z+__556.z);
      __554.w = (__555.w+__556.w);
    Y_local[__553.x] = __554.x;
    Y_local[__553.y] = __554.y;
    Y_local[__553.z] = __554.z;
    Y_local[__553.w] = __554.w;
    int4 __559 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __560;
      float4 __561 = make_float4(Y_local[__559.x],Y_local[__559.y],Y_local[__559.z],Y_local[__559.w]);
      float4 __562;
        float4 __563 = A_shared_dyn_local[3];
        float4 __564 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __562.x = (__563.x*__564.x);
        __562.y = (__563.y*__564.y);
        __562.z = (__563.z*__564.z);
        __562.w = (__563.w*__564.w);
      __560.x = (__561.x+__562.x);
      __560.y = (__561.y+__562.y);
      __560.z = (__561.z+__562.z);
      __560.w = (__561.w+__562.w);
    Y_local[__559.x] = __560.x;
    Y_local[__559.y] = __560.y;
    Y_local[__559.z] = __560.z;
    Y_local[__559.w] = __560.w;
    int4 __565 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __566;
      float4 __567 = make_float4(Y_local[__565.x],Y_local[__565.y],Y_local[__565.z],Y_local[__565.w]);
      float4 __568;
        float4 __569 = A_shared_dyn_local[2];
        float4 __570 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __568.x = (__569.x*__570.x);
        __568.y = (__569.y*__570.y);
        __568.z = (__569.z*__570.z);
        __568.w = (__569.w*__570.w);
      __566.x = (__567.x+__568.x);
      __566.y = (__567.y+__568.y);
      __566.z = (__567.z+__568.z);
      __566.w = (__567.w+__568.w);
    Y_local[__565.x] = __566.x;
    Y_local[__565.y] = __566.y;
    Y_local[__565.z] = __566.z;
    Y_local[__565.w] = __566.w;
    int4 __571 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __572;
      float4 __573 = make_float4(Y_local[__571.x],Y_local[__571.y],Y_local[__571.z],Y_local[__571.w]);
      float4 __574;
        float4 __575 = A_shared_dyn_local[3];
        float4 __576 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __574.x = (__575.x*__576.x);
        __574.y = (__575.y*__576.y);
        __574.z = (__575.z*__576.z);
        __574.w = (__575.w*__576.w);
      __572.x = (__573.x+__574.x);
      __572.y = (__573.y+__574.y);
      __572.z = (__573.z+__574.z);
      __572.w = (__573.w+__574.w);
    Y_local[__571.x] = __572.x;
    Y_local[__571.y] = __572.y;
    Y_local[__571.z] = __572.z;
    Y_local[__571.w] = __572.w;
  for (int ax0_0_13 = 0; ax0_0_13 < 2; ++ax0_0_13) {
    A_shared_dyn_local[(ax0_0_13 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_13 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1856));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6272) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __577 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __578;
      float4 __579 = make_float4(Y_local[__577.x],Y_local[__577.y],Y_local[__577.z],Y_local[__577.w]);
      float4 __580;
        float4 __581 = A_shared_dyn_local[0];
        float4 __582 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __580.x = (__581.x*__582.x);
        __580.y = (__581.y*__582.y);
        __580.z = (__581.z*__582.z);
        __580.w = (__581.w*__582.w);
      __578.x = (__579.x+__580.x);
      __578.y = (__579.y+__580.y);
      __578.z = (__579.z+__580.z);
      __578.w = (__579.w+__580.w);
    Y_local[__577.x] = __578.x;
    Y_local[__577.y] = __578.y;
    Y_local[__577.z] = __578.z;
    Y_local[__577.w] = __578.w;
    int4 __583 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __584;
      float4 __585 = make_float4(Y_local[__583.x],Y_local[__583.y],Y_local[__583.z],Y_local[__583.w]);
      float4 __586;
        float4 __587 = A_shared_dyn_local[1];
        float4 __588 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __586.x = (__587.x*__588.x);
        __586.y = (__587.y*__588.y);
        __586.z = (__587.z*__588.z);
        __586.w = (__587.w*__588.w);
      __584.x = (__585.x+__586.x);
      __584.y = (__585.y+__586.y);
      __584.z = (__585.z+__586.z);
      __584.w = (__585.w+__586.w);
    Y_local[__583.x] = __584.x;
    Y_local[__583.y] = __584.y;
    Y_local[__583.z] = __584.z;
    Y_local[__583.w] = __584.w;
    int4 __589 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __590;
      float4 __591 = make_float4(Y_local[__589.x],Y_local[__589.y],Y_local[__589.z],Y_local[__589.w]);
      float4 __592;
        float4 __593 = A_shared_dyn_local[0];
        float4 __594 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __592.x = (__593.x*__594.x);
        __592.y = (__593.y*__594.y);
        __592.z = (__593.z*__594.z);
        __592.w = (__593.w*__594.w);
      __590.x = (__591.x+__592.x);
      __590.y = (__591.y+__592.y);
      __590.z = (__591.z+__592.z);
      __590.w = (__591.w+__592.w);
    Y_local[__589.x] = __590.x;
    Y_local[__589.y] = __590.y;
    Y_local[__589.z] = __590.z;
    Y_local[__589.w] = __590.w;
    int4 __595 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __596;
      float4 __597 = make_float4(Y_local[__595.x],Y_local[__595.y],Y_local[__595.z],Y_local[__595.w]);
      float4 __598;
        float4 __599 = A_shared_dyn_local[1];
        float4 __600 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __598.x = (__599.x*__600.x);
        __598.y = (__599.y*__600.y);
        __598.z = (__599.z*__600.z);
        __598.w = (__599.w*__600.w);
      __596.x = (__597.x+__598.x);
      __596.y = (__597.y+__598.y);
      __596.z = (__597.z+__598.z);
      __596.w = (__597.w+__598.w);
    Y_local[__595.x] = __596.x;
    Y_local[__595.y] = __596.y;
    Y_local[__595.z] = __596.z;
    Y_local[__595.w] = __596.w;
    int4 __601 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __602;
      float4 __603 = make_float4(Y_local[__601.x],Y_local[__601.y],Y_local[__601.z],Y_local[__601.w]);
      float4 __604;
        float4 __605 = A_shared_dyn_local[0];
        float4 __606 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __604.x = (__605.x*__606.x);
        __604.y = (__605.y*__606.y);
        __604.z = (__605.z*__606.z);
        __604.w = (__605.w*__606.w);
      __602.x = (__603.x+__604.x);
      __602.y = (__603.y+__604.y);
      __602.z = (__603.z+__604.z);
      __602.w = (__603.w+__604.w);
    Y_local[__601.x] = __602.x;
    Y_local[__601.y] = __602.y;
    Y_local[__601.z] = __602.z;
    Y_local[__601.w] = __602.w;
    int4 __607 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __608;
      float4 __609 = make_float4(Y_local[__607.x],Y_local[__607.y],Y_local[__607.z],Y_local[__607.w]);
      float4 __610;
        float4 __611 = A_shared_dyn_local[1];
        float4 __612 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __610.x = (__611.x*__612.x);
        __610.y = (__611.y*__612.y);
        __610.z = (__611.z*__612.z);
        __610.w = (__611.w*__612.w);
      __608.x = (__609.x+__610.x);
      __608.y = (__609.y+__610.y);
      __608.z = (__609.z+__610.z);
      __608.w = (__609.w+__610.w);
    Y_local[__607.x] = __608.x;
    Y_local[__607.y] = __608.y;
    Y_local[__607.z] = __608.z;
    Y_local[__607.w] = __608.w;
    int4 __613 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __614;
      float4 __615 = make_float4(Y_local[__613.x],Y_local[__613.y],Y_local[__613.z],Y_local[__613.w]);
      float4 __616;
        float4 __617 = A_shared_dyn_local[0];
        float4 __618 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __616.x = (__617.x*__618.x);
        __616.y = (__617.y*__618.y);
        __616.z = (__617.z*__618.z);
        __616.w = (__617.w*__618.w);
      __614.x = (__615.x+__616.x);
      __614.y = (__615.y+__616.y);
      __614.z = (__615.z+__616.z);
      __614.w = (__615.w+__616.w);
    Y_local[__613.x] = __614.x;
    Y_local[__613.y] = __614.y;
    Y_local[__613.z] = __614.z;
    Y_local[__613.w] = __614.w;
    int4 __619 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __620;
      float4 __621 = make_float4(Y_local[__619.x],Y_local[__619.y],Y_local[__619.z],Y_local[__619.w]);
      float4 __622;
        float4 __623 = A_shared_dyn_local[1];
        float4 __624 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __622.x = (__623.x*__624.x);
        __622.y = (__623.y*__624.y);
        __622.z = (__623.z*__624.z);
        __622.w = (__623.w*__624.w);
      __620.x = (__621.x+__622.x);
      __620.y = (__621.y+__622.y);
      __620.z = (__621.z+__622.z);
      __620.w = (__621.w+__622.w);
    Y_local[__619.x] = __620.x;
    Y_local[__619.y] = __620.y;
    Y_local[__619.z] = __620.z;
    Y_local[__619.w] = __620.w;
  for (int ax0_0_14 = 0; ax0_0_14 < 2; ++ax0_0_14) {
    A_shared_dyn_local[ax0_0_14] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_14 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1920));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6400) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __625 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __626;
      float4 __627 = make_float4(Y_local[__625.x],Y_local[__625.y],Y_local[__625.z],Y_local[__625.w]);
      float4 __628;
        float4 __629 = A_shared_dyn_local[2];
        float4 __630 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __628.x = (__629.x*__630.x);
        __628.y = (__629.y*__630.y);
        __628.z = (__629.z*__630.z);
        __628.w = (__629.w*__630.w);
      __626.x = (__627.x+__628.x);
      __626.y = (__627.y+__628.y);
      __626.z = (__627.z+__628.z);
      __626.w = (__627.w+__628.w);
    Y_local[__625.x] = __626.x;
    Y_local[__625.y] = __626.y;
    Y_local[__625.z] = __626.z;
    Y_local[__625.w] = __626.w;
    int4 __631 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __632;
      float4 __633 = make_float4(Y_local[__631.x],Y_local[__631.y],Y_local[__631.z],Y_local[__631.w]);
      float4 __634;
        float4 __635 = A_shared_dyn_local[3];
        float4 __636 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __634.x = (__635.x*__636.x);
        __634.y = (__635.y*__636.y);
        __634.z = (__635.z*__636.z);
        __634.w = (__635.w*__636.w);
      __632.x = (__633.x+__634.x);
      __632.y = (__633.y+__634.y);
      __632.z = (__633.z+__634.z);
      __632.w = (__633.w+__634.w);
    Y_local[__631.x] = __632.x;
    Y_local[__631.y] = __632.y;
    Y_local[__631.z] = __632.z;
    Y_local[__631.w] = __632.w;
    int4 __637 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __638;
      float4 __639 = make_float4(Y_local[__637.x],Y_local[__637.y],Y_local[__637.z],Y_local[__637.w]);
      float4 __640;
        float4 __641 = A_shared_dyn_local[2];
        float4 __642 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __640.x = (__641.x*__642.x);
        __640.y = (__641.y*__642.y);
        __640.z = (__641.z*__642.z);
        __640.w = (__641.w*__642.w);
      __638.x = (__639.x+__640.x);
      __638.y = (__639.y+__640.y);
      __638.z = (__639.z+__640.z);
      __638.w = (__639.w+__640.w);
    Y_local[__637.x] = __638.x;
    Y_local[__637.y] = __638.y;
    Y_local[__637.z] = __638.z;
    Y_local[__637.w] = __638.w;
    int4 __643 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __644;
      float4 __645 = make_float4(Y_local[__643.x],Y_local[__643.y],Y_local[__643.z],Y_local[__643.w]);
      float4 __646;
        float4 __647 = A_shared_dyn_local[3];
        float4 __648 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __646.x = (__647.x*__648.x);
        __646.y = (__647.y*__648.y);
        __646.z = (__647.z*__648.z);
        __646.w = (__647.w*__648.w);
      __644.x = (__645.x+__646.x);
      __644.y = (__645.y+__646.y);
      __644.z = (__645.z+__646.z);
      __644.w = (__645.w+__646.w);
    Y_local[__643.x] = __644.x;
    Y_local[__643.y] = __644.y;
    Y_local[__643.z] = __644.z;
    Y_local[__643.w] = __644.w;
    int4 __649 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __650;
      float4 __651 = make_float4(Y_local[__649.x],Y_local[__649.y],Y_local[__649.z],Y_local[__649.w]);
      float4 __652;
        float4 __653 = A_shared_dyn_local[2];
        float4 __654 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __652.x = (__653.x*__654.x);
        __652.y = (__653.y*__654.y);
        __652.z = (__653.z*__654.z);
        __652.w = (__653.w*__654.w);
      __650.x = (__651.x+__652.x);
      __650.y = (__651.y+__652.y);
      __650.z = (__651.z+__652.z);
      __650.w = (__651.w+__652.w);
    Y_local[__649.x] = __650.x;
    Y_local[__649.y] = __650.y;
    Y_local[__649.z] = __650.z;
    Y_local[__649.w] = __650.w;
    int4 __655 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __656;
      float4 __657 = make_float4(Y_local[__655.x],Y_local[__655.y],Y_local[__655.z],Y_local[__655.w]);
      float4 __658;
        float4 __659 = A_shared_dyn_local[3];
        float4 __660 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __658.x = (__659.x*__660.x);
        __658.y = (__659.y*__660.y);
        __658.z = (__659.z*__660.z);
        __658.w = (__659.w*__660.w);
      __656.x = (__657.x+__658.x);
      __656.y = (__657.y+__658.y);
      __656.z = (__657.z+__658.z);
      __656.w = (__657.w+__658.w);
    Y_local[__655.x] = __656.x;
    Y_local[__655.y] = __656.y;
    Y_local[__655.z] = __656.z;
    Y_local[__655.w] = __656.w;
    int4 __661 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __662;
      float4 __663 = make_float4(Y_local[__661.x],Y_local[__661.y],Y_local[__661.z],Y_local[__661.w]);
      float4 __664;
        float4 __665 = A_shared_dyn_local[2];
        float4 __666 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __664.x = (__665.x*__666.x);
        __664.y = (__665.y*__666.y);
        __664.z = (__665.z*__666.z);
        __664.w = (__665.w*__666.w);
      __662.x = (__663.x+__664.x);
      __662.y = (__663.y+__664.y);
      __662.z = (__663.z+__664.z);
      __662.w = (__663.w+__664.w);
    Y_local[__661.x] = __662.x;
    Y_local[__661.y] = __662.y;
    Y_local[__661.z] = __662.z;
    Y_local[__661.w] = __662.w;
    int4 __667 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __668;
      float4 __669 = make_float4(Y_local[__667.x],Y_local[__667.y],Y_local[__667.z],Y_local[__667.w]);
      float4 __670;
        float4 __671 = A_shared_dyn_local[3];
        float4 __672 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __670.x = (__671.x*__672.x);
        __670.y = (__671.y*__672.y);
        __670.z = (__671.z*__672.z);
        __670.w = (__671.w*__672.w);
      __668.x = (__669.x+__670.x);
      __668.y = (__669.y+__670.y);
      __668.z = (__669.z+__670.z);
      __668.w = (__669.w+__670.w);
    Y_local[__667.x] = __668.x;
    Y_local[__667.y] = __668.y;
    Y_local[__667.z] = __668.z;
    Y_local[__667.w] = __668.w;
  for (int ax0_0_15 = 0; ax0_0_15 < 2; ++ax0_0_15) {
    A_shared_dyn_local[(ax0_0_15 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_15 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 1984));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6528) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __673 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __674;
      float4 __675 = make_float4(Y_local[__673.x],Y_local[__673.y],Y_local[__673.z],Y_local[__673.w]);
      float4 __676;
        float4 __677 = A_shared_dyn_local[0];
        float4 __678 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __676.x = (__677.x*__678.x);
        __676.y = (__677.y*__678.y);
        __676.z = (__677.z*__678.z);
        __676.w = (__677.w*__678.w);
      __674.x = (__675.x+__676.x);
      __674.y = (__675.y+__676.y);
      __674.z = (__675.z+__676.z);
      __674.w = (__675.w+__676.w);
    Y_local[__673.x] = __674.x;
    Y_local[__673.y] = __674.y;
    Y_local[__673.z] = __674.z;
    Y_local[__673.w] = __674.w;
    int4 __679 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __680;
      float4 __681 = make_float4(Y_local[__679.x],Y_local[__679.y],Y_local[__679.z],Y_local[__679.w]);
      float4 __682;
        float4 __683 = A_shared_dyn_local[1];
        float4 __684 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __682.x = (__683.x*__684.x);
        __682.y = (__683.y*__684.y);
        __682.z = (__683.z*__684.z);
        __682.w = (__683.w*__684.w);
      __680.x = (__681.x+__682.x);
      __680.y = (__681.y+__682.y);
      __680.z = (__681.z+__682.z);
      __680.w = (__681.w+__682.w);
    Y_local[__679.x] = __680.x;
    Y_local[__679.y] = __680.y;
    Y_local[__679.z] = __680.z;
    Y_local[__679.w] = __680.w;
    int4 __685 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __686;
      float4 __687 = make_float4(Y_local[__685.x],Y_local[__685.y],Y_local[__685.z],Y_local[__685.w]);
      float4 __688;
        float4 __689 = A_shared_dyn_local[0];
        float4 __690 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __688.x = (__689.x*__690.x);
        __688.y = (__689.y*__690.y);
        __688.z = (__689.z*__690.z);
        __688.w = (__689.w*__690.w);
      __686.x = (__687.x+__688.x);
      __686.y = (__687.y+__688.y);
      __686.z = (__687.z+__688.z);
      __686.w = (__687.w+__688.w);
    Y_local[__685.x] = __686.x;
    Y_local[__685.y] = __686.y;
    Y_local[__685.z] = __686.z;
    Y_local[__685.w] = __686.w;
    int4 __691 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __692;
      float4 __693 = make_float4(Y_local[__691.x],Y_local[__691.y],Y_local[__691.z],Y_local[__691.w]);
      float4 __694;
        float4 __695 = A_shared_dyn_local[1];
        float4 __696 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __694.x = (__695.x*__696.x);
        __694.y = (__695.y*__696.y);
        __694.z = (__695.z*__696.z);
        __694.w = (__695.w*__696.w);
      __692.x = (__693.x+__694.x);
      __692.y = (__693.y+__694.y);
      __692.z = (__693.z+__694.z);
      __692.w = (__693.w+__694.w);
    Y_local[__691.x] = __692.x;
    Y_local[__691.y] = __692.y;
    Y_local[__691.z] = __692.z;
    Y_local[__691.w] = __692.w;
    int4 __697 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __698;
      float4 __699 = make_float4(Y_local[__697.x],Y_local[__697.y],Y_local[__697.z],Y_local[__697.w]);
      float4 __700;
        float4 __701 = A_shared_dyn_local[0];
        float4 __702 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __700.x = (__701.x*__702.x);
        __700.y = (__701.y*__702.y);
        __700.z = (__701.z*__702.z);
        __700.w = (__701.w*__702.w);
      __698.x = (__699.x+__700.x);
      __698.y = (__699.y+__700.y);
      __698.z = (__699.z+__700.z);
      __698.w = (__699.w+__700.w);
    Y_local[__697.x] = __698.x;
    Y_local[__697.y] = __698.y;
    Y_local[__697.z] = __698.z;
    Y_local[__697.w] = __698.w;
    int4 __703 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __704;
      float4 __705 = make_float4(Y_local[__703.x],Y_local[__703.y],Y_local[__703.z],Y_local[__703.w]);
      float4 __706;
        float4 __707 = A_shared_dyn_local[1];
        float4 __708 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __706.x = (__707.x*__708.x);
        __706.y = (__707.y*__708.y);
        __706.z = (__707.z*__708.z);
        __706.w = (__707.w*__708.w);
      __704.x = (__705.x+__706.x);
      __704.y = (__705.y+__706.y);
      __704.z = (__705.z+__706.z);
      __704.w = (__705.w+__706.w);
    Y_local[__703.x] = __704.x;
    Y_local[__703.y] = __704.y;
    Y_local[__703.z] = __704.z;
    Y_local[__703.w] = __704.w;
    int4 __709 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __710;
      float4 __711 = make_float4(Y_local[__709.x],Y_local[__709.y],Y_local[__709.z],Y_local[__709.w]);
      float4 __712;
        float4 __713 = A_shared_dyn_local[0];
        float4 __714 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __712.x = (__713.x*__714.x);
        __712.y = (__713.y*__714.y);
        __712.z = (__713.z*__714.z);
        __712.w = (__713.w*__714.w);
      __710.x = (__711.x+__712.x);
      __710.y = (__711.y+__712.y);
      __710.z = (__711.z+__712.z);
      __710.w = (__711.w+__712.w);
    Y_local[__709.x] = __710.x;
    Y_local[__709.y] = __710.y;
    Y_local[__709.z] = __710.z;
    Y_local[__709.w] = __710.w;
    int4 __715 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __716;
      float4 __717 = make_float4(Y_local[__715.x],Y_local[__715.y],Y_local[__715.z],Y_local[__715.w]);
      float4 __718;
        float4 __719 = A_shared_dyn_local[1];
        float4 __720 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __718.x = (__719.x*__720.x);
        __718.y = (__719.y*__720.y);
        __718.z = (__719.z*__720.z);
        __718.w = (__719.w*__720.w);
      __716.x = (__717.x+__718.x);
      __716.y = (__717.y+__718.y);
      __716.z = (__717.z+__718.z);
      __716.w = (__717.w+__718.w);
    Y_local[__715.x] = __716.x;
    Y_local[__715.y] = __716.y;
    Y_local[__715.z] = __716.z;
    Y_local[__715.w] = __716.w;
  for (int ax0_0_16 = 0; ax0_0_16 < 2; ++ax0_0_16) {
    A_shared_dyn_local[ax0_0_16] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_16 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2048));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6656) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __721 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __722;
      float4 __723 = make_float4(Y_local[__721.x],Y_local[__721.y],Y_local[__721.z],Y_local[__721.w]);
      float4 __724;
        float4 __725 = A_shared_dyn_local[2];
        float4 __726 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __724.x = (__725.x*__726.x);
        __724.y = (__725.y*__726.y);
        __724.z = (__725.z*__726.z);
        __724.w = (__725.w*__726.w);
      __722.x = (__723.x+__724.x);
      __722.y = (__723.y+__724.y);
      __722.z = (__723.z+__724.z);
      __722.w = (__723.w+__724.w);
    Y_local[__721.x] = __722.x;
    Y_local[__721.y] = __722.y;
    Y_local[__721.z] = __722.z;
    Y_local[__721.w] = __722.w;
    int4 __727 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __728;
      float4 __729 = make_float4(Y_local[__727.x],Y_local[__727.y],Y_local[__727.z],Y_local[__727.w]);
      float4 __730;
        float4 __731 = A_shared_dyn_local[3];
        float4 __732 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __730.x = (__731.x*__732.x);
        __730.y = (__731.y*__732.y);
        __730.z = (__731.z*__732.z);
        __730.w = (__731.w*__732.w);
      __728.x = (__729.x+__730.x);
      __728.y = (__729.y+__730.y);
      __728.z = (__729.z+__730.z);
      __728.w = (__729.w+__730.w);
    Y_local[__727.x] = __728.x;
    Y_local[__727.y] = __728.y;
    Y_local[__727.z] = __728.z;
    Y_local[__727.w] = __728.w;
    int4 __733 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __734;
      float4 __735 = make_float4(Y_local[__733.x],Y_local[__733.y],Y_local[__733.z],Y_local[__733.w]);
      float4 __736;
        float4 __737 = A_shared_dyn_local[2];
        float4 __738 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __736.x = (__737.x*__738.x);
        __736.y = (__737.y*__738.y);
        __736.z = (__737.z*__738.z);
        __736.w = (__737.w*__738.w);
      __734.x = (__735.x+__736.x);
      __734.y = (__735.y+__736.y);
      __734.z = (__735.z+__736.z);
      __734.w = (__735.w+__736.w);
    Y_local[__733.x] = __734.x;
    Y_local[__733.y] = __734.y;
    Y_local[__733.z] = __734.z;
    Y_local[__733.w] = __734.w;
    int4 __739 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __740;
      float4 __741 = make_float4(Y_local[__739.x],Y_local[__739.y],Y_local[__739.z],Y_local[__739.w]);
      float4 __742;
        float4 __743 = A_shared_dyn_local[3];
        float4 __744 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __742.x = (__743.x*__744.x);
        __742.y = (__743.y*__744.y);
        __742.z = (__743.z*__744.z);
        __742.w = (__743.w*__744.w);
      __740.x = (__741.x+__742.x);
      __740.y = (__741.y+__742.y);
      __740.z = (__741.z+__742.z);
      __740.w = (__741.w+__742.w);
    Y_local[__739.x] = __740.x;
    Y_local[__739.y] = __740.y;
    Y_local[__739.z] = __740.z;
    Y_local[__739.w] = __740.w;
    int4 __745 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __746;
      float4 __747 = make_float4(Y_local[__745.x],Y_local[__745.y],Y_local[__745.z],Y_local[__745.w]);
      float4 __748;
        float4 __749 = A_shared_dyn_local[2];
        float4 __750 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __748.x = (__749.x*__750.x);
        __748.y = (__749.y*__750.y);
        __748.z = (__749.z*__750.z);
        __748.w = (__749.w*__750.w);
      __746.x = (__747.x+__748.x);
      __746.y = (__747.y+__748.y);
      __746.z = (__747.z+__748.z);
      __746.w = (__747.w+__748.w);
    Y_local[__745.x] = __746.x;
    Y_local[__745.y] = __746.y;
    Y_local[__745.z] = __746.z;
    Y_local[__745.w] = __746.w;
    int4 __751 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __752;
      float4 __753 = make_float4(Y_local[__751.x],Y_local[__751.y],Y_local[__751.z],Y_local[__751.w]);
      float4 __754;
        float4 __755 = A_shared_dyn_local[3];
        float4 __756 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __754.x = (__755.x*__756.x);
        __754.y = (__755.y*__756.y);
        __754.z = (__755.z*__756.z);
        __754.w = (__755.w*__756.w);
      __752.x = (__753.x+__754.x);
      __752.y = (__753.y+__754.y);
      __752.z = (__753.z+__754.z);
      __752.w = (__753.w+__754.w);
    Y_local[__751.x] = __752.x;
    Y_local[__751.y] = __752.y;
    Y_local[__751.z] = __752.z;
    Y_local[__751.w] = __752.w;
    int4 __757 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __758;
      float4 __759 = make_float4(Y_local[__757.x],Y_local[__757.y],Y_local[__757.z],Y_local[__757.w]);
      float4 __760;
        float4 __761 = A_shared_dyn_local[2];
        float4 __762 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __760.x = (__761.x*__762.x);
        __760.y = (__761.y*__762.y);
        __760.z = (__761.z*__762.z);
        __760.w = (__761.w*__762.w);
      __758.x = (__759.x+__760.x);
      __758.y = (__759.y+__760.y);
      __758.z = (__759.z+__760.z);
      __758.w = (__759.w+__760.w);
    Y_local[__757.x] = __758.x;
    Y_local[__757.y] = __758.y;
    Y_local[__757.z] = __758.z;
    Y_local[__757.w] = __758.w;
    int4 __763 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __764;
      float4 __765 = make_float4(Y_local[__763.x],Y_local[__763.y],Y_local[__763.z],Y_local[__763.w]);
      float4 __766;
        float4 __767 = A_shared_dyn_local[3];
        float4 __768 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __766.x = (__767.x*__768.x);
        __766.y = (__767.y*__768.y);
        __766.z = (__767.z*__768.z);
        __766.w = (__767.w*__768.w);
      __764.x = (__765.x+__766.x);
      __764.y = (__765.y+__766.y);
      __764.z = (__765.z+__766.z);
      __764.w = (__765.w+__766.w);
    Y_local[__763.x] = __764.x;
    Y_local[__763.y] = __764.y;
    Y_local[__763.z] = __764.z;
    Y_local[__763.w] = __764.w;
__asm__ __volatile__("cp.async.wait_group 1;");

  __syncthreads();
  for (int ax0_0_17 = 0; ax0_0_17 < 2; ++ax0_0_17) {
    A_shared_dyn_local[(ax0_0_17 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_17 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2112));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6784) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __769 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __770;
      float4 __771 = make_float4(Y_local[__769.x],Y_local[__769.y],Y_local[__769.z],Y_local[__769.w]);
      float4 __772;
        float4 __773 = A_shared_dyn_local[0];
        float4 __774 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __772.x = (__773.x*__774.x);
        __772.y = (__773.y*__774.y);
        __772.z = (__773.z*__774.z);
        __772.w = (__773.w*__774.w);
      __770.x = (__771.x+__772.x);
      __770.y = (__771.y+__772.y);
      __770.z = (__771.z+__772.z);
      __770.w = (__771.w+__772.w);
    Y_local[__769.x] = __770.x;
    Y_local[__769.y] = __770.y;
    Y_local[__769.z] = __770.z;
    Y_local[__769.w] = __770.w;
    int4 __775 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __776;
      float4 __777 = make_float4(Y_local[__775.x],Y_local[__775.y],Y_local[__775.z],Y_local[__775.w]);
      float4 __778;
        float4 __779 = A_shared_dyn_local[1];
        float4 __780 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __778.x = (__779.x*__780.x);
        __778.y = (__779.y*__780.y);
        __778.z = (__779.z*__780.z);
        __778.w = (__779.w*__780.w);
      __776.x = (__777.x+__778.x);
      __776.y = (__777.y+__778.y);
      __776.z = (__777.z+__778.z);
      __776.w = (__777.w+__778.w);
    Y_local[__775.x] = __776.x;
    Y_local[__775.y] = __776.y;
    Y_local[__775.z] = __776.z;
    Y_local[__775.w] = __776.w;
    int4 __781 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __782;
      float4 __783 = make_float4(Y_local[__781.x],Y_local[__781.y],Y_local[__781.z],Y_local[__781.w]);
      float4 __784;
        float4 __785 = A_shared_dyn_local[0];
        float4 __786 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __784.x = (__785.x*__786.x);
        __784.y = (__785.y*__786.y);
        __784.z = (__785.z*__786.z);
        __784.w = (__785.w*__786.w);
      __782.x = (__783.x+__784.x);
      __782.y = (__783.y+__784.y);
      __782.z = (__783.z+__784.z);
      __782.w = (__783.w+__784.w);
    Y_local[__781.x] = __782.x;
    Y_local[__781.y] = __782.y;
    Y_local[__781.z] = __782.z;
    Y_local[__781.w] = __782.w;
    int4 __787 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __788;
      float4 __789 = make_float4(Y_local[__787.x],Y_local[__787.y],Y_local[__787.z],Y_local[__787.w]);
      float4 __790;
        float4 __791 = A_shared_dyn_local[1];
        float4 __792 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __790.x = (__791.x*__792.x);
        __790.y = (__791.y*__792.y);
        __790.z = (__791.z*__792.z);
        __790.w = (__791.w*__792.w);
      __788.x = (__789.x+__790.x);
      __788.y = (__789.y+__790.y);
      __788.z = (__789.z+__790.z);
      __788.w = (__789.w+__790.w);
    Y_local[__787.x] = __788.x;
    Y_local[__787.y] = __788.y;
    Y_local[__787.z] = __788.z;
    Y_local[__787.w] = __788.w;
    int4 __793 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __794;
      float4 __795 = make_float4(Y_local[__793.x],Y_local[__793.y],Y_local[__793.z],Y_local[__793.w]);
      float4 __796;
        float4 __797 = A_shared_dyn_local[0];
        float4 __798 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __796.x = (__797.x*__798.x);
        __796.y = (__797.y*__798.y);
        __796.z = (__797.z*__798.z);
        __796.w = (__797.w*__798.w);
      __794.x = (__795.x+__796.x);
      __794.y = (__795.y+__796.y);
      __794.z = (__795.z+__796.z);
      __794.w = (__795.w+__796.w);
    Y_local[__793.x] = __794.x;
    Y_local[__793.y] = __794.y;
    Y_local[__793.z] = __794.z;
    Y_local[__793.w] = __794.w;
    int4 __799 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __800;
      float4 __801 = make_float4(Y_local[__799.x],Y_local[__799.y],Y_local[__799.z],Y_local[__799.w]);
      float4 __802;
        float4 __803 = A_shared_dyn_local[1];
        float4 __804 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __802.x = (__803.x*__804.x);
        __802.y = (__803.y*__804.y);
        __802.z = (__803.z*__804.z);
        __802.w = (__803.w*__804.w);
      __800.x = (__801.x+__802.x);
      __800.y = (__801.y+__802.y);
      __800.z = (__801.z+__802.z);
      __800.w = (__801.w+__802.w);
    Y_local[__799.x] = __800.x;
    Y_local[__799.y] = __800.y;
    Y_local[__799.z] = __800.z;
    Y_local[__799.w] = __800.w;
    int4 __805 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __806;
      float4 __807 = make_float4(Y_local[__805.x],Y_local[__805.y],Y_local[__805.z],Y_local[__805.w]);
      float4 __808;
        float4 __809 = A_shared_dyn_local[0];
        float4 __810 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __808.x = (__809.x*__810.x);
        __808.y = (__809.y*__810.y);
        __808.z = (__809.z*__810.z);
        __808.w = (__809.w*__810.w);
      __806.x = (__807.x+__808.x);
      __806.y = (__807.y+__808.y);
      __806.z = (__807.z+__808.z);
      __806.w = (__807.w+__808.w);
    Y_local[__805.x] = __806.x;
    Y_local[__805.y] = __806.y;
    Y_local[__805.z] = __806.z;
    Y_local[__805.w] = __806.w;
    int4 __811 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __812;
      float4 __813 = make_float4(Y_local[__811.x],Y_local[__811.y],Y_local[__811.z],Y_local[__811.w]);
      float4 __814;
        float4 __815 = A_shared_dyn_local[1];
        float4 __816 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __814.x = (__815.x*__816.x);
        __814.y = (__815.y*__816.y);
        __814.z = (__815.z*__816.z);
        __814.w = (__815.w*__816.w);
      __812.x = (__813.x+__814.x);
      __812.y = (__813.y+__814.y);
      __812.z = (__813.z+__814.z);
      __812.w = (__813.w+__814.w);
    Y_local[__811.x] = __812.x;
    Y_local[__811.y] = __812.y;
    Y_local[__811.z] = __812.z;
    Y_local[__811.w] = __812.w;
  for (int ax0_0_18 = 0; ax0_0_18 < 2; ++ax0_0_18) {
    A_shared_dyn_local[ax0_0_18] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_18 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2176));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 6912) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __817 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __818;
      float4 __819 = make_float4(Y_local[__817.x],Y_local[__817.y],Y_local[__817.z],Y_local[__817.w]);
      float4 __820;
        float4 __821 = A_shared_dyn_local[2];
        float4 __822 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __820.x = (__821.x*__822.x);
        __820.y = (__821.y*__822.y);
        __820.z = (__821.z*__822.z);
        __820.w = (__821.w*__822.w);
      __818.x = (__819.x+__820.x);
      __818.y = (__819.y+__820.y);
      __818.z = (__819.z+__820.z);
      __818.w = (__819.w+__820.w);
    Y_local[__817.x] = __818.x;
    Y_local[__817.y] = __818.y;
    Y_local[__817.z] = __818.z;
    Y_local[__817.w] = __818.w;
    int4 __823 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __824;
      float4 __825 = make_float4(Y_local[__823.x],Y_local[__823.y],Y_local[__823.z],Y_local[__823.w]);
      float4 __826;
        float4 __827 = A_shared_dyn_local[3];
        float4 __828 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __826.x = (__827.x*__828.x);
        __826.y = (__827.y*__828.y);
        __826.z = (__827.z*__828.z);
        __826.w = (__827.w*__828.w);
      __824.x = (__825.x+__826.x);
      __824.y = (__825.y+__826.y);
      __824.z = (__825.z+__826.z);
      __824.w = (__825.w+__826.w);
    Y_local[__823.x] = __824.x;
    Y_local[__823.y] = __824.y;
    Y_local[__823.z] = __824.z;
    Y_local[__823.w] = __824.w;
    int4 __829 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __830;
      float4 __831 = make_float4(Y_local[__829.x],Y_local[__829.y],Y_local[__829.z],Y_local[__829.w]);
      float4 __832;
        float4 __833 = A_shared_dyn_local[2];
        float4 __834 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __832.x = (__833.x*__834.x);
        __832.y = (__833.y*__834.y);
        __832.z = (__833.z*__834.z);
        __832.w = (__833.w*__834.w);
      __830.x = (__831.x+__832.x);
      __830.y = (__831.y+__832.y);
      __830.z = (__831.z+__832.z);
      __830.w = (__831.w+__832.w);
    Y_local[__829.x] = __830.x;
    Y_local[__829.y] = __830.y;
    Y_local[__829.z] = __830.z;
    Y_local[__829.w] = __830.w;
    int4 __835 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __836;
      float4 __837 = make_float4(Y_local[__835.x],Y_local[__835.y],Y_local[__835.z],Y_local[__835.w]);
      float4 __838;
        float4 __839 = A_shared_dyn_local[3];
        float4 __840 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __838.x = (__839.x*__840.x);
        __838.y = (__839.y*__840.y);
        __838.z = (__839.z*__840.z);
        __838.w = (__839.w*__840.w);
      __836.x = (__837.x+__838.x);
      __836.y = (__837.y+__838.y);
      __836.z = (__837.z+__838.z);
      __836.w = (__837.w+__838.w);
    Y_local[__835.x] = __836.x;
    Y_local[__835.y] = __836.y;
    Y_local[__835.z] = __836.z;
    Y_local[__835.w] = __836.w;
    int4 __841 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __842;
      float4 __843 = make_float4(Y_local[__841.x],Y_local[__841.y],Y_local[__841.z],Y_local[__841.w]);
      float4 __844;
        float4 __845 = A_shared_dyn_local[2];
        float4 __846 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __844.x = (__845.x*__846.x);
        __844.y = (__845.y*__846.y);
        __844.z = (__845.z*__846.z);
        __844.w = (__845.w*__846.w);
      __842.x = (__843.x+__844.x);
      __842.y = (__843.y+__844.y);
      __842.z = (__843.z+__844.z);
      __842.w = (__843.w+__844.w);
    Y_local[__841.x] = __842.x;
    Y_local[__841.y] = __842.y;
    Y_local[__841.z] = __842.z;
    Y_local[__841.w] = __842.w;
    int4 __847 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __848;
      float4 __849 = make_float4(Y_local[__847.x],Y_local[__847.y],Y_local[__847.z],Y_local[__847.w]);
      float4 __850;
        float4 __851 = A_shared_dyn_local[3];
        float4 __852 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __850.x = (__851.x*__852.x);
        __850.y = (__851.y*__852.y);
        __850.z = (__851.z*__852.z);
        __850.w = (__851.w*__852.w);
      __848.x = (__849.x+__850.x);
      __848.y = (__849.y+__850.y);
      __848.z = (__849.z+__850.z);
      __848.w = (__849.w+__850.w);
    Y_local[__847.x] = __848.x;
    Y_local[__847.y] = __848.y;
    Y_local[__847.z] = __848.z;
    Y_local[__847.w] = __848.w;
    int4 __853 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __854;
      float4 __855 = make_float4(Y_local[__853.x],Y_local[__853.y],Y_local[__853.z],Y_local[__853.w]);
      float4 __856;
        float4 __857 = A_shared_dyn_local[2];
        float4 __858 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __856.x = (__857.x*__858.x);
        __856.y = (__857.y*__858.y);
        __856.z = (__857.z*__858.z);
        __856.w = (__857.w*__858.w);
      __854.x = (__855.x+__856.x);
      __854.y = (__855.y+__856.y);
      __854.z = (__855.z+__856.z);
      __854.w = (__855.w+__856.w);
    Y_local[__853.x] = __854.x;
    Y_local[__853.y] = __854.y;
    Y_local[__853.z] = __854.z;
    Y_local[__853.w] = __854.w;
    int4 __859 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __860;
      float4 __861 = make_float4(Y_local[__859.x],Y_local[__859.y],Y_local[__859.z],Y_local[__859.w]);
      float4 __862;
        float4 __863 = A_shared_dyn_local[3];
        float4 __864 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __862.x = (__863.x*__864.x);
        __862.y = (__863.y*__864.y);
        __862.z = (__863.z*__864.z);
        __862.w = (__863.w*__864.w);
      __860.x = (__861.x+__862.x);
      __860.y = (__861.y+__862.y);
      __860.z = (__861.z+__862.z);
      __860.w = (__861.w+__862.w);
    Y_local[__859.x] = __860.x;
    Y_local[__859.y] = __860.y;
    Y_local[__859.z] = __860.z;
    Y_local[__859.w] = __860.w;
  for (int ax0_0_19 = 0; ax0_0_19 < 2; ++ax0_0_19) {
    A_shared_dyn_local[(ax0_0_19 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_19 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2240));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 7040) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __865 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __866;
      float4 __867 = make_float4(Y_local[__865.x],Y_local[__865.y],Y_local[__865.z],Y_local[__865.w]);
      float4 __868;
        float4 __869 = A_shared_dyn_local[0];
        float4 __870 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __868.x = (__869.x*__870.x);
        __868.y = (__869.y*__870.y);
        __868.z = (__869.z*__870.z);
        __868.w = (__869.w*__870.w);
      __866.x = (__867.x+__868.x);
      __866.y = (__867.y+__868.y);
      __866.z = (__867.z+__868.z);
      __866.w = (__867.w+__868.w);
    Y_local[__865.x] = __866.x;
    Y_local[__865.y] = __866.y;
    Y_local[__865.z] = __866.z;
    Y_local[__865.w] = __866.w;
    int4 __871 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __872;
      float4 __873 = make_float4(Y_local[__871.x],Y_local[__871.y],Y_local[__871.z],Y_local[__871.w]);
      float4 __874;
        float4 __875 = A_shared_dyn_local[1];
        float4 __876 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __874.x = (__875.x*__876.x);
        __874.y = (__875.y*__876.y);
        __874.z = (__875.z*__876.z);
        __874.w = (__875.w*__876.w);
      __872.x = (__873.x+__874.x);
      __872.y = (__873.y+__874.y);
      __872.z = (__873.z+__874.z);
      __872.w = (__873.w+__874.w);
    Y_local[__871.x] = __872.x;
    Y_local[__871.y] = __872.y;
    Y_local[__871.z] = __872.z;
    Y_local[__871.w] = __872.w;
    int4 __877 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __878;
      float4 __879 = make_float4(Y_local[__877.x],Y_local[__877.y],Y_local[__877.z],Y_local[__877.w]);
      float4 __880;
        float4 __881 = A_shared_dyn_local[0];
        float4 __882 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __880.x = (__881.x*__882.x);
        __880.y = (__881.y*__882.y);
        __880.z = (__881.z*__882.z);
        __880.w = (__881.w*__882.w);
      __878.x = (__879.x+__880.x);
      __878.y = (__879.y+__880.y);
      __878.z = (__879.z+__880.z);
      __878.w = (__879.w+__880.w);
    Y_local[__877.x] = __878.x;
    Y_local[__877.y] = __878.y;
    Y_local[__877.z] = __878.z;
    Y_local[__877.w] = __878.w;
    int4 __883 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __884;
      float4 __885 = make_float4(Y_local[__883.x],Y_local[__883.y],Y_local[__883.z],Y_local[__883.w]);
      float4 __886;
        float4 __887 = A_shared_dyn_local[1];
        float4 __888 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __886.x = (__887.x*__888.x);
        __886.y = (__887.y*__888.y);
        __886.z = (__887.z*__888.z);
        __886.w = (__887.w*__888.w);
      __884.x = (__885.x+__886.x);
      __884.y = (__885.y+__886.y);
      __884.z = (__885.z+__886.z);
      __884.w = (__885.w+__886.w);
    Y_local[__883.x] = __884.x;
    Y_local[__883.y] = __884.y;
    Y_local[__883.z] = __884.z;
    Y_local[__883.w] = __884.w;
    int4 __889 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __890;
      float4 __891 = make_float4(Y_local[__889.x],Y_local[__889.y],Y_local[__889.z],Y_local[__889.w]);
      float4 __892;
        float4 __893 = A_shared_dyn_local[0];
        float4 __894 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __892.x = (__893.x*__894.x);
        __892.y = (__893.y*__894.y);
        __892.z = (__893.z*__894.z);
        __892.w = (__893.w*__894.w);
      __890.x = (__891.x+__892.x);
      __890.y = (__891.y+__892.y);
      __890.z = (__891.z+__892.z);
      __890.w = (__891.w+__892.w);
    Y_local[__889.x] = __890.x;
    Y_local[__889.y] = __890.y;
    Y_local[__889.z] = __890.z;
    Y_local[__889.w] = __890.w;
    int4 __895 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __896;
      float4 __897 = make_float4(Y_local[__895.x],Y_local[__895.y],Y_local[__895.z],Y_local[__895.w]);
      float4 __898;
        float4 __899 = A_shared_dyn_local[1];
        float4 __900 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __898.x = (__899.x*__900.x);
        __898.y = (__899.y*__900.y);
        __898.z = (__899.z*__900.z);
        __898.w = (__899.w*__900.w);
      __896.x = (__897.x+__898.x);
      __896.y = (__897.y+__898.y);
      __896.z = (__897.z+__898.z);
      __896.w = (__897.w+__898.w);
    Y_local[__895.x] = __896.x;
    Y_local[__895.y] = __896.y;
    Y_local[__895.z] = __896.z;
    Y_local[__895.w] = __896.w;
    int4 __901 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __902;
      float4 __903 = make_float4(Y_local[__901.x],Y_local[__901.y],Y_local[__901.z],Y_local[__901.w]);
      float4 __904;
        float4 __905 = A_shared_dyn_local[0];
        float4 __906 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __904.x = (__905.x*__906.x);
        __904.y = (__905.y*__906.y);
        __904.z = (__905.z*__906.z);
        __904.w = (__905.w*__906.w);
      __902.x = (__903.x+__904.x);
      __902.y = (__903.y+__904.y);
      __902.z = (__903.z+__904.z);
      __902.w = (__903.w+__904.w);
    Y_local[__901.x] = __902.x;
    Y_local[__901.y] = __902.y;
    Y_local[__901.z] = __902.z;
    Y_local[__901.w] = __902.w;
    int4 __907 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __908;
      float4 __909 = make_float4(Y_local[__907.x],Y_local[__907.y],Y_local[__907.z],Y_local[__907.w]);
      float4 __910;
        float4 __911 = A_shared_dyn_local[1];
        float4 __912 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __910.x = (__911.x*__912.x);
        __910.y = (__911.y*__912.y);
        __910.z = (__911.z*__912.z);
        __910.w = (__911.w*__912.w);
      __908.x = (__909.x+__910.x);
      __908.y = (__909.y+__910.y);
      __908.z = (__909.z+__910.z);
      __908.w = (__909.w+__910.w);
    Y_local[__907.x] = __908.x;
    Y_local[__907.y] = __908.y;
    Y_local[__907.z] = __908.z;
    Y_local[__907.w] = __908.w;
  for (int ax0_0_20 = 0; ax0_0_20 < 2; ++ax0_0_20) {
    A_shared_dyn_local[ax0_0_20] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_20 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2304));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 7168) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __913 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __914;
      float4 __915 = make_float4(Y_local[__913.x],Y_local[__913.y],Y_local[__913.z],Y_local[__913.w]);
      float4 __916;
        float4 __917 = A_shared_dyn_local[2];
        float4 __918 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __916.x = (__917.x*__918.x);
        __916.y = (__917.y*__918.y);
        __916.z = (__917.z*__918.z);
        __916.w = (__917.w*__918.w);
      __914.x = (__915.x+__916.x);
      __914.y = (__915.y+__916.y);
      __914.z = (__915.z+__916.z);
      __914.w = (__915.w+__916.w);
    Y_local[__913.x] = __914.x;
    Y_local[__913.y] = __914.y;
    Y_local[__913.z] = __914.z;
    Y_local[__913.w] = __914.w;
    int4 __919 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __920;
      float4 __921 = make_float4(Y_local[__919.x],Y_local[__919.y],Y_local[__919.z],Y_local[__919.w]);
      float4 __922;
        float4 __923 = A_shared_dyn_local[3];
        float4 __924 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __922.x = (__923.x*__924.x);
        __922.y = (__923.y*__924.y);
        __922.z = (__923.z*__924.z);
        __922.w = (__923.w*__924.w);
      __920.x = (__921.x+__922.x);
      __920.y = (__921.y+__922.y);
      __920.z = (__921.z+__922.z);
      __920.w = (__921.w+__922.w);
    Y_local[__919.x] = __920.x;
    Y_local[__919.y] = __920.y;
    Y_local[__919.z] = __920.z;
    Y_local[__919.w] = __920.w;
    int4 __925 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __926;
      float4 __927 = make_float4(Y_local[__925.x],Y_local[__925.y],Y_local[__925.z],Y_local[__925.w]);
      float4 __928;
        float4 __929 = A_shared_dyn_local[2];
        float4 __930 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __928.x = (__929.x*__930.x);
        __928.y = (__929.y*__930.y);
        __928.z = (__929.z*__930.z);
        __928.w = (__929.w*__930.w);
      __926.x = (__927.x+__928.x);
      __926.y = (__927.y+__928.y);
      __926.z = (__927.z+__928.z);
      __926.w = (__927.w+__928.w);
    Y_local[__925.x] = __926.x;
    Y_local[__925.y] = __926.y;
    Y_local[__925.z] = __926.z;
    Y_local[__925.w] = __926.w;
    int4 __931 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __932;
      float4 __933 = make_float4(Y_local[__931.x],Y_local[__931.y],Y_local[__931.z],Y_local[__931.w]);
      float4 __934;
        float4 __935 = A_shared_dyn_local[3];
        float4 __936 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __934.x = (__935.x*__936.x);
        __934.y = (__935.y*__936.y);
        __934.z = (__935.z*__936.z);
        __934.w = (__935.w*__936.w);
      __932.x = (__933.x+__934.x);
      __932.y = (__933.y+__934.y);
      __932.z = (__933.z+__934.z);
      __932.w = (__933.w+__934.w);
    Y_local[__931.x] = __932.x;
    Y_local[__931.y] = __932.y;
    Y_local[__931.z] = __932.z;
    Y_local[__931.w] = __932.w;
    int4 __937 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __938;
      float4 __939 = make_float4(Y_local[__937.x],Y_local[__937.y],Y_local[__937.z],Y_local[__937.w]);
      float4 __940;
        float4 __941 = A_shared_dyn_local[2];
        float4 __942 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __940.x = (__941.x*__942.x);
        __940.y = (__941.y*__942.y);
        __940.z = (__941.z*__942.z);
        __940.w = (__941.w*__942.w);
      __938.x = (__939.x+__940.x);
      __938.y = (__939.y+__940.y);
      __938.z = (__939.z+__940.z);
      __938.w = (__939.w+__940.w);
    Y_local[__937.x] = __938.x;
    Y_local[__937.y] = __938.y;
    Y_local[__937.z] = __938.z;
    Y_local[__937.w] = __938.w;
    int4 __943 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __944;
      float4 __945 = make_float4(Y_local[__943.x],Y_local[__943.y],Y_local[__943.z],Y_local[__943.w]);
      float4 __946;
        float4 __947 = A_shared_dyn_local[3];
        float4 __948 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __946.x = (__947.x*__948.x);
        __946.y = (__947.y*__948.y);
        __946.z = (__947.z*__948.z);
        __946.w = (__947.w*__948.w);
      __944.x = (__945.x+__946.x);
      __944.y = (__945.y+__946.y);
      __944.z = (__945.z+__946.z);
      __944.w = (__945.w+__946.w);
    Y_local[__943.x] = __944.x;
    Y_local[__943.y] = __944.y;
    Y_local[__943.z] = __944.z;
    Y_local[__943.w] = __944.w;
    int4 __949 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __950;
      float4 __951 = make_float4(Y_local[__949.x],Y_local[__949.y],Y_local[__949.z],Y_local[__949.w]);
      float4 __952;
        float4 __953 = A_shared_dyn_local[2];
        float4 __954 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __952.x = (__953.x*__954.x);
        __952.y = (__953.y*__954.y);
        __952.z = (__953.z*__954.z);
        __952.w = (__953.w*__954.w);
      __950.x = (__951.x+__952.x);
      __950.y = (__951.y+__952.y);
      __950.z = (__951.z+__952.z);
      __950.w = (__951.w+__952.w);
    Y_local[__949.x] = __950.x;
    Y_local[__949.y] = __950.y;
    Y_local[__949.z] = __950.z;
    Y_local[__949.w] = __950.w;
    int4 __955 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __956;
      float4 __957 = make_float4(Y_local[__955.x],Y_local[__955.y],Y_local[__955.z],Y_local[__955.w]);
      float4 __958;
        float4 __959 = A_shared_dyn_local[3];
        float4 __960 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __958.x = (__959.x*__960.x);
        __958.y = (__959.y*__960.y);
        __958.z = (__959.z*__960.z);
        __958.w = (__959.w*__960.w);
      __956.x = (__957.x+__958.x);
      __956.y = (__957.y+__958.y);
      __956.z = (__957.z+__958.z);
      __956.w = (__957.w+__958.w);
    Y_local[__955.x] = __956.x;
    Y_local[__955.y] = __956.y;
    Y_local[__955.z] = __956.z;
    Y_local[__955.w] = __956.w;
  for (int ax0_0_21 = 0; ax0_0_21 < 2; ++ax0_0_21) {
    A_shared_dyn_local[(ax0_0_21 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_21 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2368));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 7296) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __961 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __962;
      float4 __963 = make_float4(Y_local[__961.x],Y_local[__961.y],Y_local[__961.z],Y_local[__961.w]);
      float4 __964;
        float4 __965 = A_shared_dyn_local[0];
        float4 __966 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __964.x = (__965.x*__966.x);
        __964.y = (__965.y*__966.y);
        __964.z = (__965.z*__966.z);
        __964.w = (__965.w*__966.w);
      __962.x = (__963.x+__964.x);
      __962.y = (__963.y+__964.y);
      __962.z = (__963.z+__964.z);
      __962.w = (__963.w+__964.w);
    Y_local[__961.x] = __962.x;
    Y_local[__961.y] = __962.y;
    Y_local[__961.z] = __962.z;
    Y_local[__961.w] = __962.w;
    int4 __967 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __968;
      float4 __969 = make_float4(Y_local[__967.x],Y_local[__967.y],Y_local[__967.z],Y_local[__967.w]);
      float4 __970;
        float4 __971 = A_shared_dyn_local[1];
        float4 __972 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __970.x = (__971.x*__972.x);
        __970.y = (__971.y*__972.y);
        __970.z = (__971.z*__972.z);
        __970.w = (__971.w*__972.w);
      __968.x = (__969.x+__970.x);
      __968.y = (__969.y+__970.y);
      __968.z = (__969.z+__970.z);
      __968.w = (__969.w+__970.w);
    Y_local[__967.x] = __968.x;
    Y_local[__967.y] = __968.y;
    Y_local[__967.z] = __968.z;
    Y_local[__967.w] = __968.w;
    int4 __973 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __974;
      float4 __975 = make_float4(Y_local[__973.x],Y_local[__973.y],Y_local[__973.z],Y_local[__973.w]);
      float4 __976;
        float4 __977 = A_shared_dyn_local[0];
        float4 __978 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __976.x = (__977.x*__978.x);
        __976.y = (__977.y*__978.y);
        __976.z = (__977.z*__978.z);
        __976.w = (__977.w*__978.w);
      __974.x = (__975.x+__976.x);
      __974.y = (__975.y+__976.y);
      __974.z = (__975.z+__976.z);
      __974.w = (__975.w+__976.w);
    Y_local[__973.x] = __974.x;
    Y_local[__973.y] = __974.y;
    Y_local[__973.z] = __974.z;
    Y_local[__973.w] = __974.w;
    int4 __979 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __980;
      float4 __981 = make_float4(Y_local[__979.x],Y_local[__979.y],Y_local[__979.z],Y_local[__979.w]);
      float4 __982;
        float4 __983 = A_shared_dyn_local[1];
        float4 __984 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __982.x = (__983.x*__984.x);
        __982.y = (__983.y*__984.y);
        __982.z = (__983.z*__984.z);
        __982.w = (__983.w*__984.w);
      __980.x = (__981.x+__982.x);
      __980.y = (__981.y+__982.y);
      __980.z = (__981.z+__982.z);
      __980.w = (__981.w+__982.w);
    Y_local[__979.x] = __980.x;
    Y_local[__979.y] = __980.y;
    Y_local[__979.z] = __980.z;
    Y_local[__979.w] = __980.w;
    int4 __985 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __986;
      float4 __987 = make_float4(Y_local[__985.x],Y_local[__985.y],Y_local[__985.z],Y_local[__985.w]);
      float4 __988;
        float4 __989 = A_shared_dyn_local[0];
        float4 __990 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __988.x = (__989.x*__990.x);
        __988.y = (__989.y*__990.y);
        __988.z = (__989.z*__990.z);
        __988.w = (__989.w*__990.w);
      __986.x = (__987.x+__988.x);
      __986.y = (__987.y+__988.y);
      __986.z = (__987.z+__988.z);
      __986.w = (__987.w+__988.w);
    Y_local[__985.x] = __986.x;
    Y_local[__985.y] = __986.y;
    Y_local[__985.z] = __986.z;
    Y_local[__985.w] = __986.w;
    int4 __991 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __992;
      float4 __993 = make_float4(Y_local[__991.x],Y_local[__991.y],Y_local[__991.z],Y_local[__991.w]);
      float4 __994;
        float4 __995 = A_shared_dyn_local[1];
        float4 __996 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __994.x = (__995.x*__996.x);
        __994.y = (__995.y*__996.y);
        __994.z = (__995.z*__996.z);
        __994.w = (__995.w*__996.w);
      __992.x = (__993.x+__994.x);
      __992.y = (__993.y+__994.y);
      __992.z = (__993.z+__994.z);
      __992.w = (__993.w+__994.w);
    Y_local[__991.x] = __992.x;
    Y_local[__991.y] = __992.y;
    Y_local[__991.z] = __992.z;
    Y_local[__991.w] = __992.w;
    int4 __997 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __998;
      float4 __999 = make_float4(Y_local[__997.x],Y_local[__997.y],Y_local[__997.z],Y_local[__997.w]);
      float4 __1000;
        float4 __1001 = A_shared_dyn_local[0];
        float4 __1002 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1000.x = (__1001.x*__1002.x);
        __1000.y = (__1001.y*__1002.y);
        __1000.z = (__1001.z*__1002.z);
        __1000.w = (__1001.w*__1002.w);
      __998.x = (__999.x+__1000.x);
      __998.y = (__999.y+__1000.y);
      __998.z = (__999.z+__1000.z);
      __998.w = (__999.w+__1000.w);
    Y_local[__997.x] = __998.x;
    Y_local[__997.y] = __998.y;
    Y_local[__997.z] = __998.z;
    Y_local[__997.w] = __998.w;
    int4 __1003 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1004;
      float4 __1005 = make_float4(Y_local[__1003.x],Y_local[__1003.y],Y_local[__1003.z],Y_local[__1003.w]);
      float4 __1006;
        float4 __1007 = A_shared_dyn_local[1];
        float4 __1008 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1006.x = (__1007.x*__1008.x);
        __1006.y = (__1007.y*__1008.y);
        __1006.z = (__1007.z*__1008.z);
        __1006.w = (__1007.w*__1008.w);
      __1004.x = (__1005.x+__1006.x);
      __1004.y = (__1005.y+__1006.y);
      __1004.z = (__1005.z+__1006.z);
      __1004.w = (__1005.w+__1006.w);
    Y_local[__1003.x] = __1004.x;
    Y_local[__1003.y] = __1004.y;
    Y_local[__1003.z] = __1004.z;
    Y_local[__1003.w] = __1004.w;
  for (int ax0_0_22 = 0; ax0_0_22 < 2; ++ax0_0_22) {
    A_shared_dyn_local[ax0_0_22] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_22 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2432));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 7424) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1009 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1010;
      float4 __1011 = make_float4(Y_local[__1009.x],Y_local[__1009.y],Y_local[__1009.z],Y_local[__1009.w]);
      float4 __1012;
        float4 __1013 = A_shared_dyn_local[2];
        float4 __1014 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1012.x = (__1013.x*__1014.x);
        __1012.y = (__1013.y*__1014.y);
        __1012.z = (__1013.z*__1014.z);
        __1012.w = (__1013.w*__1014.w);
      __1010.x = (__1011.x+__1012.x);
      __1010.y = (__1011.y+__1012.y);
      __1010.z = (__1011.z+__1012.z);
      __1010.w = (__1011.w+__1012.w);
    Y_local[__1009.x] = __1010.x;
    Y_local[__1009.y] = __1010.y;
    Y_local[__1009.z] = __1010.z;
    Y_local[__1009.w] = __1010.w;
    int4 __1015 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1016;
      float4 __1017 = make_float4(Y_local[__1015.x],Y_local[__1015.y],Y_local[__1015.z],Y_local[__1015.w]);
      float4 __1018;
        float4 __1019 = A_shared_dyn_local[3];
        float4 __1020 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1018.x = (__1019.x*__1020.x);
        __1018.y = (__1019.y*__1020.y);
        __1018.z = (__1019.z*__1020.z);
        __1018.w = (__1019.w*__1020.w);
      __1016.x = (__1017.x+__1018.x);
      __1016.y = (__1017.y+__1018.y);
      __1016.z = (__1017.z+__1018.z);
      __1016.w = (__1017.w+__1018.w);
    Y_local[__1015.x] = __1016.x;
    Y_local[__1015.y] = __1016.y;
    Y_local[__1015.z] = __1016.z;
    Y_local[__1015.w] = __1016.w;
    int4 __1021 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1022;
      float4 __1023 = make_float4(Y_local[__1021.x],Y_local[__1021.y],Y_local[__1021.z],Y_local[__1021.w]);
      float4 __1024;
        float4 __1025 = A_shared_dyn_local[2];
        float4 __1026 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1024.x = (__1025.x*__1026.x);
        __1024.y = (__1025.y*__1026.y);
        __1024.z = (__1025.z*__1026.z);
        __1024.w = (__1025.w*__1026.w);
      __1022.x = (__1023.x+__1024.x);
      __1022.y = (__1023.y+__1024.y);
      __1022.z = (__1023.z+__1024.z);
      __1022.w = (__1023.w+__1024.w);
    Y_local[__1021.x] = __1022.x;
    Y_local[__1021.y] = __1022.y;
    Y_local[__1021.z] = __1022.z;
    Y_local[__1021.w] = __1022.w;
    int4 __1027 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1028;
      float4 __1029 = make_float4(Y_local[__1027.x],Y_local[__1027.y],Y_local[__1027.z],Y_local[__1027.w]);
      float4 __1030;
        float4 __1031 = A_shared_dyn_local[3];
        float4 __1032 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1030.x = (__1031.x*__1032.x);
        __1030.y = (__1031.y*__1032.y);
        __1030.z = (__1031.z*__1032.z);
        __1030.w = (__1031.w*__1032.w);
      __1028.x = (__1029.x+__1030.x);
      __1028.y = (__1029.y+__1030.y);
      __1028.z = (__1029.z+__1030.z);
      __1028.w = (__1029.w+__1030.w);
    Y_local[__1027.x] = __1028.x;
    Y_local[__1027.y] = __1028.y;
    Y_local[__1027.z] = __1028.z;
    Y_local[__1027.w] = __1028.w;
    int4 __1033 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1034;
      float4 __1035 = make_float4(Y_local[__1033.x],Y_local[__1033.y],Y_local[__1033.z],Y_local[__1033.w]);
      float4 __1036;
        float4 __1037 = A_shared_dyn_local[2];
        float4 __1038 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1036.x = (__1037.x*__1038.x);
        __1036.y = (__1037.y*__1038.y);
        __1036.z = (__1037.z*__1038.z);
        __1036.w = (__1037.w*__1038.w);
      __1034.x = (__1035.x+__1036.x);
      __1034.y = (__1035.y+__1036.y);
      __1034.z = (__1035.z+__1036.z);
      __1034.w = (__1035.w+__1036.w);
    Y_local[__1033.x] = __1034.x;
    Y_local[__1033.y] = __1034.y;
    Y_local[__1033.z] = __1034.z;
    Y_local[__1033.w] = __1034.w;
    int4 __1039 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1040;
      float4 __1041 = make_float4(Y_local[__1039.x],Y_local[__1039.y],Y_local[__1039.z],Y_local[__1039.w]);
      float4 __1042;
        float4 __1043 = A_shared_dyn_local[3];
        float4 __1044 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1042.x = (__1043.x*__1044.x);
        __1042.y = (__1043.y*__1044.y);
        __1042.z = (__1043.z*__1044.z);
        __1042.w = (__1043.w*__1044.w);
      __1040.x = (__1041.x+__1042.x);
      __1040.y = (__1041.y+__1042.y);
      __1040.z = (__1041.z+__1042.z);
      __1040.w = (__1041.w+__1042.w);
    Y_local[__1039.x] = __1040.x;
    Y_local[__1039.y] = __1040.y;
    Y_local[__1039.z] = __1040.z;
    Y_local[__1039.w] = __1040.w;
    int4 __1045 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1046;
      float4 __1047 = make_float4(Y_local[__1045.x],Y_local[__1045.y],Y_local[__1045.z],Y_local[__1045.w]);
      float4 __1048;
        float4 __1049 = A_shared_dyn_local[2];
        float4 __1050 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1048.x = (__1049.x*__1050.x);
        __1048.y = (__1049.y*__1050.y);
        __1048.z = (__1049.z*__1050.z);
        __1048.w = (__1049.w*__1050.w);
      __1046.x = (__1047.x+__1048.x);
      __1046.y = (__1047.y+__1048.y);
      __1046.z = (__1047.z+__1048.z);
      __1046.w = (__1047.w+__1048.w);
    Y_local[__1045.x] = __1046.x;
    Y_local[__1045.y] = __1046.y;
    Y_local[__1045.z] = __1046.z;
    Y_local[__1045.w] = __1046.w;
    int4 __1051 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1052;
      float4 __1053 = make_float4(Y_local[__1051.x],Y_local[__1051.y],Y_local[__1051.z],Y_local[__1051.w]);
      float4 __1054;
        float4 __1055 = A_shared_dyn_local[3];
        float4 __1056 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1054.x = (__1055.x*__1056.x);
        __1054.y = (__1055.y*__1056.y);
        __1054.z = (__1055.z*__1056.z);
        __1054.w = (__1055.w*__1056.w);
      __1052.x = (__1053.x+__1054.x);
      __1052.y = (__1053.y+__1054.y);
      __1052.z = (__1053.z+__1054.z);
      __1052.w = (__1053.w+__1054.w);
    Y_local[__1051.x] = __1052.x;
    Y_local[__1051.y] = __1052.y;
    Y_local[__1051.z] = __1052.z;
    Y_local[__1051.w] = __1052.w;
  for (int ax0_0_23 = 0; ax0_0_23 < 2; ++ax0_0_23) {
    A_shared_dyn_local[(ax0_0_23 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_23 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 2496));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 7552) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1057 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1058;
      float4 __1059 = make_float4(Y_local[__1057.x],Y_local[__1057.y],Y_local[__1057.z],Y_local[__1057.w]);
      float4 __1060;
        float4 __1061 = A_shared_dyn_local[0];
        float4 __1062 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1060.x = (__1061.x*__1062.x);
        __1060.y = (__1061.y*__1062.y);
        __1060.z = (__1061.z*__1062.z);
        __1060.w = (__1061.w*__1062.w);
      __1058.x = (__1059.x+__1060.x);
      __1058.y = (__1059.y+__1060.y);
      __1058.z = (__1059.z+__1060.z);
      __1058.w = (__1059.w+__1060.w);
    Y_local[__1057.x] = __1058.x;
    Y_local[__1057.y] = __1058.y;
    Y_local[__1057.z] = __1058.z;
    Y_local[__1057.w] = __1058.w;
    int4 __1063 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1064;
      float4 __1065 = make_float4(Y_local[__1063.x],Y_local[__1063.y],Y_local[__1063.z],Y_local[__1063.w]);
      float4 __1066;
        float4 __1067 = A_shared_dyn_local[1];
        float4 __1068 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1066.x = (__1067.x*__1068.x);
        __1066.y = (__1067.y*__1068.y);
        __1066.z = (__1067.z*__1068.z);
        __1066.w = (__1067.w*__1068.w);
      __1064.x = (__1065.x+__1066.x);
      __1064.y = (__1065.y+__1066.y);
      __1064.z = (__1065.z+__1066.z);
      __1064.w = (__1065.w+__1066.w);
    Y_local[__1063.x] = __1064.x;
    Y_local[__1063.y] = __1064.y;
    Y_local[__1063.z] = __1064.z;
    Y_local[__1063.w] = __1064.w;
    int4 __1069 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1070;
      float4 __1071 = make_float4(Y_local[__1069.x],Y_local[__1069.y],Y_local[__1069.z],Y_local[__1069.w]);
      float4 __1072;
        float4 __1073 = A_shared_dyn_local[0];
        float4 __1074 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1072.x = (__1073.x*__1074.x);
        __1072.y = (__1073.y*__1074.y);
        __1072.z = (__1073.z*__1074.z);
        __1072.w = (__1073.w*__1074.w);
      __1070.x = (__1071.x+__1072.x);
      __1070.y = (__1071.y+__1072.y);
      __1070.z = (__1071.z+__1072.z);
      __1070.w = (__1071.w+__1072.w);
    Y_local[__1069.x] = __1070.x;
    Y_local[__1069.y] = __1070.y;
    Y_local[__1069.z] = __1070.z;
    Y_local[__1069.w] = __1070.w;
    int4 __1075 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1076;
      float4 __1077 = make_float4(Y_local[__1075.x],Y_local[__1075.y],Y_local[__1075.z],Y_local[__1075.w]);
      float4 __1078;
        float4 __1079 = A_shared_dyn_local[1];
        float4 __1080 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1078.x = (__1079.x*__1080.x);
        __1078.y = (__1079.y*__1080.y);
        __1078.z = (__1079.z*__1080.z);
        __1078.w = (__1079.w*__1080.w);
      __1076.x = (__1077.x+__1078.x);
      __1076.y = (__1077.y+__1078.y);
      __1076.z = (__1077.z+__1078.z);
      __1076.w = (__1077.w+__1078.w);
    Y_local[__1075.x] = __1076.x;
    Y_local[__1075.y] = __1076.y;
    Y_local[__1075.z] = __1076.z;
    Y_local[__1075.w] = __1076.w;
    int4 __1081 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1082;
      float4 __1083 = make_float4(Y_local[__1081.x],Y_local[__1081.y],Y_local[__1081.z],Y_local[__1081.w]);
      float4 __1084;
        float4 __1085 = A_shared_dyn_local[0];
        float4 __1086 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1084.x = (__1085.x*__1086.x);
        __1084.y = (__1085.y*__1086.y);
        __1084.z = (__1085.z*__1086.z);
        __1084.w = (__1085.w*__1086.w);
      __1082.x = (__1083.x+__1084.x);
      __1082.y = (__1083.y+__1084.y);
      __1082.z = (__1083.z+__1084.z);
      __1082.w = (__1083.w+__1084.w);
    Y_local[__1081.x] = __1082.x;
    Y_local[__1081.y] = __1082.y;
    Y_local[__1081.z] = __1082.z;
    Y_local[__1081.w] = __1082.w;
    int4 __1087 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1088;
      float4 __1089 = make_float4(Y_local[__1087.x],Y_local[__1087.y],Y_local[__1087.z],Y_local[__1087.w]);
      float4 __1090;
        float4 __1091 = A_shared_dyn_local[1];
        float4 __1092 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1090.x = (__1091.x*__1092.x);
        __1090.y = (__1091.y*__1092.y);
        __1090.z = (__1091.z*__1092.z);
        __1090.w = (__1091.w*__1092.w);
      __1088.x = (__1089.x+__1090.x);
      __1088.y = (__1089.y+__1090.y);
      __1088.z = (__1089.z+__1090.z);
      __1088.w = (__1089.w+__1090.w);
    Y_local[__1087.x] = __1088.x;
    Y_local[__1087.y] = __1088.y;
    Y_local[__1087.z] = __1088.z;
    Y_local[__1087.w] = __1088.w;
    int4 __1093 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1094;
      float4 __1095 = make_float4(Y_local[__1093.x],Y_local[__1093.y],Y_local[__1093.z],Y_local[__1093.w]);
      float4 __1096;
        float4 __1097 = A_shared_dyn_local[0];
        float4 __1098 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1096.x = (__1097.x*__1098.x);
        __1096.y = (__1097.y*__1098.y);
        __1096.z = (__1097.z*__1098.z);
        __1096.w = (__1097.w*__1098.w);
      __1094.x = (__1095.x+__1096.x);
      __1094.y = (__1095.y+__1096.y);
      __1094.z = (__1095.z+__1096.z);
      __1094.w = (__1095.w+__1096.w);
    Y_local[__1093.x] = __1094.x;
    Y_local[__1093.y] = __1094.y;
    Y_local[__1093.z] = __1094.z;
    Y_local[__1093.w] = __1094.w;
    int4 __1099 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1100;
      float4 __1101 = make_float4(Y_local[__1099.x],Y_local[__1099.y],Y_local[__1099.z],Y_local[__1099.w]);
      float4 __1102;
        float4 __1103 = A_shared_dyn_local[1];
        float4 __1104 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1102.x = (__1103.x*__1104.x);
        __1102.y = (__1103.y*__1104.y);
        __1102.z = (__1103.z*__1104.z);
        __1102.w = (__1103.w*__1104.w);
      __1100.x = (__1101.x+__1102.x);
      __1100.y = (__1101.y+__1102.y);
      __1100.z = (__1101.z+__1102.z);
      __1100.w = (__1101.w+__1102.w);
    Y_local[__1099.x] = __1100.x;
    Y_local[__1099.y] = __1100.y;
    Y_local[__1099.z] = __1100.z;
    Y_local[__1099.w] = __1100.w;
  for (int ax0_0_24 = 0; ax0_0_24 < 2; ++ax0_0_24) {
    A_shared_dyn_local[ax0_0_24] = *(float4*)(((float*)buf_dyn_shmem) + (((((((int)threadIdx.x) / 48) * 32) + (ax0_0_24 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2560) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1105 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1106;
      float4 __1107 = make_float4(Y_local[__1105.x],Y_local[__1105.y],Y_local[__1105.z],Y_local[__1105.w]);
      float4 __1108;
        float4 __1109 = A_shared_dyn_local[2];
        float4 __1110 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1108.x = (__1109.x*__1110.x);
        __1108.y = (__1109.y*__1110.y);
        __1108.z = (__1109.z*__1110.z);
        __1108.w = (__1109.w*__1110.w);
      __1106.x = (__1107.x+__1108.x);
      __1106.y = (__1107.y+__1108.y);
      __1106.z = (__1107.z+__1108.z);
      __1106.w = (__1107.w+__1108.w);
    Y_local[__1105.x] = __1106.x;
    Y_local[__1105.y] = __1106.y;
    Y_local[__1105.z] = __1106.z;
    Y_local[__1105.w] = __1106.w;
    int4 __1111 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1112;
      float4 __1113 = make_float4(Y_local[__1111.x],Y_local[__1111.y],Y_local[__1111.z],Y_local[__1111.w]);
      float4 __1114;
        float4 __1115 = A_shared_dyn_local[3];
        float4 __1116 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1114.x = (__1115.x*__1116.x);
        __1114.y = (__1115.y*__1116.y);
        __1114.z = (__1115.z*__1116.z);
        __1114.w = (__1115.w*__1116.w);
      __1112.x = (__1113.x+__1114.x);
      __1112.y = (__1113.y+__1114.y);
      __1112.z = (__1113.z+__1114.z);
      __1112.w = (__1113.w+__1114.w);
    Y_local[__1111.x] = __1112.x;
    Y_local[__1111.y] = __1112.y;
    Y_local[__1111.z] = __1112.z;
    Y_local[__1111.w] = __1112.w;
    int4 __1117 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1118;
      float4 __1119 = make_float4(Y_local[__1117.x],Y_local[__1117.y],Y_local[__1117.z],Y_local[__1117.w]);
      float4 __1120;
        float4 __1121 = A_shared_dyn_local[2];
        float4 __1122 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1120.x = (__1121.x*__1122.x);
        __1120.y = (__1121.y*__1122.y);
        __1120.z = (__1121.z*__1122.z);
        __1120.w = (__1121.w*__1122.w);
      __1118.x = (__1119.x+__1120.x);
      __1118.y = (__1119.y+__1120.y);
      __1118.z = (__1119.z+__1120.z);
      __1118.w = (__1119.w+__1120.w);
    Y_local[__1117.x] = __1118.x;
    Y_local[__1117.y] = __1118.y;
    Y_local[__1117.z] = __1118.z;
    Y_local[__1117.w] = __1118.w;
    int4 __1123 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1124;
      float4 __1125 = make_float4(Y_local[__1123.x],Y_local[__1123.y],Y_local[__1123.z],Y_local[__1123.w]);
      float4 __1126;
        float4 __1127 = A_shared_dyn_local[3];
        float4 __1128 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1126.x = (__1127.x*__1128.x);
        __1126.y = (__1127.y*__1128.y);
        __1126.z = (__1127.z*__1128.z);
        __1126.w = (__1127.w*__1128.w);
      __1124.x = (__1125.x+__1126.x);
      __1124.y = (__1125.y+__1126.y);
      __1124.z = (__1125.z+__1126.z);
      __1124.w = (__1125.w+__1126.w);
    Y_local[__1123.x] = __1124.x;
    Y_local[__1123.y] = __1124.y;
    Y_local[__1123.z] = __1124.z;
    Y_local[__1123.w] = __1124.w;
    int4 __1129 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1130;
      float4 __1131 = make_float4(Y_local[__1129.x],Y_local[__1129.y],Y_local[__1129.z],Y_local[__1129.w]);
      float4 __1132;
        float4 __1133 = A_shared_dyn_local[2];
        float4 __1134 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1132.x = (__1133.x*__1134.x);
        __1132.y = (__1133.y*__1134.y);
        __1132.z = (__1133.z*__1134.z);
        __1132.w = (__1133.w*__1134.w);
      __1130.x = (__1131.x+__1132.x);
      __1130.y = (__1131.y+__1132.y);
      __1130.z = (__1131.z+__1132.z);
      __1130.w = (__1131.w+__1132.w);
    Y_local[__1129.x] = __1130.x;
    Y_local[__1129.y] = __1130.y;
    Y_local[__1129.z] = __1130.z;
    Y_local[__1129.w] = __1130.w;
    int4 __1135 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1136;
      float4 __1137 = make_float4(Y_local[__1135.x],Y_local[__1135.y],Y_local[__1135.z],Y_local[__1135.w]);
      float4 __1138;
        float4 __1139 = A_shared_dyn_local[3];
        float4 __1140 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1138.x = (__1139.x*__1140.x);
        __1138.y = (__1139.y*__1140.y);
        __1138.z = (__1139.z*__1140.z);
        __1138.w = (__1139.w*__1140.w);
      __1136.x = (__1137.x+__1138.x);
      __1136.y = (__1137.y+__1138.y);
      __1136.z = (__1137.z+__1138.z);
      __1136.w = (__1137.w+__1138.w);
    Y_local[__1135.x] = __1136.x;
    Y_local[__1135.y] = __1136.y;
    Y_local[__1135.z] = __1136.z;
    Y_local[__1135.w] = __1136.w;
    int4 __1141 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1142;
      float4 __1143 = make_float4(Y_local[__1141.x],Y_local[__1141.y],Y_local[__1141.z],Y_local[__1141.w]);
      float4 __1144;
        float4 __1145 = A_shared_dyn_local[2];
        float4 __1146 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1144.x = (__1145.x*__1146.x);
        __1144.y = (__1145.y*__1146.y);
        __1144.z = (__1145.z*__1146.z);
        __1144.w = (__1145.w*__1146.w);
      __1142.x = (__1143.x+__1144.x);
      __1142.y = (__1143.y+__1144.y);
      __1142.z = (__1143.z+__1144.z);
      __1142.w = (__1143.w+__1144.w);
    Y_local[__1141.x] = __1142.x;
    Y_local[__1141.y] = __1142.y;
    Y_local[__1141.z] = __1142.z;
    Y_local[__1141.w] = __1142.w;
    int4 __1147 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1148;
      float4 __1149 = make_float4(Y_local[__1147.x],Y_local[__1147.y],Y_local[__1147.z],Y_local[__1147.w]);
      float4 __1150;
        float4 __1151 = A_shared_dyn_local[3];
        float4 __1152 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1150.x = (__1151.x*__1152.x);
        __1150.y = (__1151.y*__1152.y);
        __1150.z = (__1151.z*__1152.z);
        __1150.w = (__1151.w*__1152.w);
      __1148.x = (__1149.x+__1150.x);
      __1148.y = (__1149.y+__1150.y);
      __1148.z = (__1149.z+__1150.z);
      __1148.w = (__1149.w+__1150.w);
    Y_local[__1147.x] = __1148.x;
    Y_local[__1147.y] = __1148.y;
    Y_local[__1147.z] = __1148.z;
    Y_local[__1147.w] = __1148.w;
__asm__ __volatile__("cp.async.wait_group 0;");

  __syncthreads();
  for (int ax0_0_25 = 0; ax0_0_25 < 2; ++ax0_0_25) {
    A_shared_dyn_local[(ax0_0_25 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_25 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 64));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2688) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1153 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1154;
      float4 __1155 = make_float4(Y_local[__1153.x],Y_local[__1153.y],Y_local[__1153.z],Y_local[__1153.w]);
      float4 __1156;
        float4 __1157 = A_shared_dyn_local[0];
        float4 __1158 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1156.x = (__1157.x*__1158.x);
        __1156.y = (__1157.y*__1158.y);
        __1156.z = (__1157.z*__1158.z);
        __1156.w = (__1157.w*__1158.w);
      __1154.x = (__1155.x+__1156.x);
      __1154.y = (__1155.y+__1156.y);
      __1154.z = (__1155.z+__1156.z);
      __1154.w = (__1155.w+__1156.w);
    Y_local[__1153.x] = __1154.x;
    Y_local[__1153.y] = __1154.y;
    Y_local[__1153.z] = __1154.z;
    Y_local[__1153.w] = __1154.w;
    int4 __1159 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1160;
      float4 __1161 = make_float4(Y_local[__1159.x],Y_local[__1159.y],Y_local[__1159.z],Y_local[__1159.w]);
      float4 __1162;
        float4 __1163 = A_shared_dyn_local[1];
        float4 __1164 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1162.x = (__1163.x*__1164.x);
        __1162.y = (__1163.y*__1164.y);
        __1162.z = (__1163.z*__1164.z);
        __1162.w = (__1163.w*__1164.w);
      __1160.x = (__1161.x+__1162.x);
      __1160.y = (__1161.y+__1162.y);
      __1160.z = (__1161.z+__1162.z);
      __1160.w = (__1161.w+__1162.w);
    Y_local[__1159.x] = __1160.x;
    Y_local[__1159.y] = __1160.y;
    Y_local[__1159.z] = __1160.z;
    Y_local[__1159.w] = __1160.w;
    int4 __1165 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1166;
      float4 __1167 = make_float4(Y_local[__1165.x],Y_local[__1165.y],Y_local[__1165.z],Y_local[__1165.w]);
      float4 __1168;
        float4 __1169 = A_shared_dyn_local[0];
        float4 __1170 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1168.x = (__1169.x*__1170.x);
        __1168.y = (__1169.y*__1170.y);
        __1168.z = (__1169.z*__1170.z);
        __1168.w = (__1169.w*__1170.w);
      __1166.x = (__1167.x+__1168.x);
      __1166.y = (__1167.y+__1168.y);
      __1166.z = (__1167.z+__1168.z);
      __1166.w = (__1167.w+__1168.w);
    Y_local[__1165.x] = __1166.x;
    Y_local[__1165.y] = __1166.y;
    Y_local[__1165.z] = __1166.z;
    Y_local[__1165.w] = __1166.w;
    int4 __1171 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1172;
      float4 __1173 = make_float4(Y_local[__1171.x],Y_local[__1171.y],Y_local[__1171.z],Y_local[__1171.w]);
      float4 __1174;
        float4 __1175 = A_shared_dyn_local[1];
        float4 __1176 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1174.x = (__1175.x*__1176.x);
        __1174.y = (__1175.y*__1176.y);
        __1174.z = (__1175.z*__1176.z);
        __1174.w = (__1175.w*__1176.w);
      __1172.x = (__1173.x+__1174.x);
      __1172.y = (__1173.y+__1174.y);
      __1172.z = (__1173.z+__1174.z);
      __1172.w = (__1173.w+__1174.w);
    Y_local[__1171.x] = __1172.x;
    Y_local[__1171.y] = __1172.y;
    Y_local[__1171.z] = __1172.z;
    Y_local[__1171.w] = __1172.w;
    int4 __1177 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1178;
      float4 __1179 = make_float4(Y_local[__1177.x],Y_local[__1177.y],Y_local[__1177.z],Y_local[__1177.w]);
      float4 __1180;
        float4 __1181 = A_shared_dyn_local[0];
        float4 __1182 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1180.x = (__1181.x*__1182.x);
        __1180.y = (__1181.y*__1182.y);
        __1180.z = (__1181.z*__1182.z);
        __1180.w = (__1181.w*__1182.w);
      __1178.x = (__1179.x+__1180.x);
      __1178.y = (__1179.y+__1180.y);
      __1178.z = (__1179.z+__1180.z);
      __1178.w = (__1179.w+__1180.w);
    Y_local[__1177.x] = __1178.x;
    Y_local[__1177.y] = __1178.y;
    Y_local[__1177.z] = __1178.z;
    Y_local[__1177.w] = __1178.w;
    int4 __1183 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1184;
      float4 __1185 = make_float4(Y_local[__1183.x],Y_local[__1183.y],Y_local[__1183.z],Y_local[__1183.w]);
      float4 __1186;
        float4 __1187 = A_shared_dyn_local[1];
        float4 __1188 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1186.x = (__1187.x*__1188.x);
        __1186.y = (__1187.y*__1188.y);
        __1186.z = (__1187.z*__1188.z);
        __1186.w = (__1187.w*__1188.w);
      __1184.x = (__1185.x+__1186.x);
      __1184.y = (__1185.y+__1186.y);
      __1184.z = (__1185.z+__1186.z);
      __1184.w = (__1185.w+__1186.w);
    Y_local[__1183.x] = __1184.x;
    Y_local[__1183.y] = __1184.y;
    Y_local[__1183.z] = __1184.z;
    Y_local[__1183.w] = __1184.w;
    int4 __1189 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1190;
      float4 __1191 = make_float4(Y_local[__1189.x],Y_local[__1189.y],Y_local[__1189.z],Y_local[__1189.w]);
      float4 __1192;
        float4 __1193 = A_shared_dyn_local[0];
        float4 __1194 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1192.x = (__1193.x*__1194.x);
        __1192.y = (__1193.y*__1194.y);
        __1192.z = (__1193.z*__1194.z);
        __1192.w = (__1193.w*__1194.w);
      __1190.x = (__1191.x+__1192.x);
      __1190.y = (__1191.y+__1192.y);
      __1190.z = (__1191.z+__1192.z);
      __1190.w = (__1191.w+__1192.w);
    Y_local[__1189.x] = __1190.x;
    Y_local[__1189.y] = __1190.y;
    Y_local[__1189.z] = __1190.z;
    Y_local[__1189.w] = __1190.w;
    int4 __1195 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1196;
      float4 __1197 = make_float4(Y_local[__1195.x],Y_local[__1195.y],Y_local[__1195.z],Y_local[__1195.w]);
      float4 __1198;
        float4 __1199 = A_shared_dyn_local[1];
        float4 __1200 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1198.x = (__1199.x*__1200.x);
        __1198.y = (__1199.y*__1200.y);
        __1198.z = (__1199.z*__1200.z);
        __1198.w = (__1199.w*__1200.w);
      __1196.x = (__1197.x+__1198.x);
      __1196.y = (__1197.y+__1198.y);
      __1196.z = (__1197.z+__1198.z);
      __1196.w = (__1197.w+__1198.w);
    Y_local[__1195.x] = __1196.x;
    Y_local[__1195.y] = __1196.y;
    Y_local[__1195.z] = __1196.z;
    Y_local[__1195.w] = __1196.w;
  for (int ax0_0_26 = 0; ax0_0_26 < 2; ++ax0_0_26) {
    A_shared_dyn_local[ax0_0_26] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_26 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 128));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2816) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1201 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1202;
      float4 __1203 = make_float4(Y_local[__1201.x],Y_local[__1201.y],Y_local[__1201.z],Y_local[__1201.w]);
      float4 __1204;
        float4 __1205 = A_shared_dyn_local[2];
        float4 __1206 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1204.x = (__1205.x*__1206.x);
        __1204.y = (__1205.y*__1206.y);
        __1204.z = (__1205.z*__1206.z);
        __1204.w = (__1205.w*__1206.w);
      __1202.x = (__1203.x+__1204.x);
      __1202.y = (__1203.y+__1204.y);
      __1202.z = (__1203.z+__1204.z);
      __1202.w = (__1203.w+__1204.w);
    Y_local[__1201.x] = __1202.x;
    Y_local[__1201.y] = __1202.y;
    Y_local[__1201.z] = __1202.z;
    Y_local[__1201.w] = __1202.w;
    int4 __1207 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1208;
      float4 __1209 = make_float4(Y_local[__1207.x],Y_local[__1207.y],Y_local[__1207.z],Y_local[__1207.w]);
      float4 __1210;
        float4 __1211 = A_shared_dyn_local[3];
        float4 __1212 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1210.x = (__1211.x*__1212.x);
        __1210.y = (__1211.y*__1212.y);
        __1210.z = (__1211.z*__1212.z);
        __1210.w = (__1211.w*__1212.w);
      __1208.x = (__1209.x+__1210.x);
      __1208.y = (__1209.y+__1210.y);
      __1208.z = (__1209.z+__1210.z);
      __1208.w = (__1209.w+__1210.w);
    Y_local[__1207.x] = __1208.x;
    Y_local[__1207.y] = __1208.y;
    Y_local[__1207.z] = __1208.z;
    Y_local[__1207.w] = __1208.w;
    int4 __1213 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1214;
      float4 __1215 = make_float4(Y_local[__1213.x],Y_local[__1213.y],Y_local[__1213.z],Y_local[__1213.w]);
      float4 __1216;
        float4 __1217 = A_shared_dyn_local[2];
        float4 __1218 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1216.x = (__1217.x*__1218.x);
        __1216.y = (__1217.y*__1218.y);
        __1216.z = (__1217.z*__1218.z);
        __1216.w = (__1217.w*__1218.w);
      __1214.x = (__1215.x+__1216.x);
      __1214.y = (__1215.y+__1216.y);
      __1214.z = (__1215.z+__1216.z);
      __1214.w = (__1215.w+__1216.w);
    Y_local[__1213.x] = __1214.x;
    Y_local[__1213.y] = __1214.y;
    Y_local[__1213.z] = __1214.z;
    Y_local[__1213.w] = __1214.w;
    int4 __1219 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1220;
      float4 __1221 = make_float4(Y_local[__1219.x],Y_local[__1219.y],Y_local[__1219.z],Y_local[__1219.w]);
      float4 __1222;
        float4 __1223 = A_shared_dyn_local[3];
        float4 __1224 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1222.x = (__1223.x*__1224.x);
        __1222.y = (__1223.y*__1224.y);
        __1222.z = (__1223.z*__1224.z);
        __1222.w = (__1223.w*__1224.w);
      __1220.x = (__1221.x+__1222.x);
      __1220.y = (__1221.y+__1222.y);
      __1220.z = (__1221.z+__1222.z);
      __1220.w = (__1221.w+__1222.w);
    Y_local[__1219.x] = __1220.x;
    Y_local[__1219.y] = __1220.y;
    Y_local[__1219.z] = __1220.z;
    Y_local[__1219.w] = __1220.w;
    int4 __1225 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1226;
      float4 __1227 = make_float4(Y_local[__1225.x],Y_local[__1225.y],Y_local[__1225.z],Y_local[__1225.w]);
      float4 __1228;
        float4 __1229 = A_shared_dyn_local[2];
        float4 __1230 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1228.x = (__1229.x*__1230.x);
        __1228.y = (__1229.y*__1230.y);
        __1228.z = (__1229.z*__1230.z);
        __1228.w = (__1229.w*__1230.w);
      __1226.x = (__1227.x+__1228.x);
      __1226.y = (__1227.y+__1228.y);
      __1226.z = (__1227.z+__1228.z);
      __1226.w = (__1227.w+__1228.w);
    Y_local[__1225.x] = __1226.x;
    Y_local[__1225.y] = __1226.y;
    Y_local[__1225.z] = __1226.z;
    Y_local[__1225.w] = __1226.w;
    int4 __1231 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1232;
      float4 __1233 = make_float4(Y_local[__1231.x],Y_local[__1231.y],Y_local[__1231.z],Y_local[__1231.w]);
      float4 __1234;
        float4 __1235 = A_shared_dyn_local[3];
        float4 __1236 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1234.x = (__1235.x*__1236.x);
        __1234.y = (__1235.y*__1236.y);
        __1234.z = (__1235.z*__1236.z);
        __1234.w = (__1235.w*__1236.w);
      __1232.x = (__1233.x+__1234.x);
      __1232.y = (__1233.y+__1234.y);
      __1232.z = (__1233.z+__1234.z);
      __1232.w = (__1233.w+__1234.w);
    Y_local[__1231.x] = __1232.x;
    Y_local[__1231.y] = __1232.y;
    Y_local[__1231.z] = __1232.z;
    Y_local[__1231.w] = __1232.w;
    int4 __1237 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1238;
      float4 __1239 = make_float4(Y_local[__1237.x],Y_local[__1237.y],Y_local[__1237.z],Y_local[__1237.w]);
      float4 __1240;
        float4 __1241 = A_shared_dyn_local[2];
        float4 __1242 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1240.x = (__1241.x*__1242.x);
        __1240.y = (__1241.y*__1242.y);
        __1240.z = (__1241.z*__1242.z);
        __1240.w = (__1241.w*__1242.w);
      __1238.x = (__1239.x+__1240.x);
      __1238.y = (__1239.y+__1240.y);
      __1238.z = (__1239.z+__1240.z);
      __1238.w = (__1239.w+__1240.w);
    Y_local[__1237.x] = __1238.x;
    Y_local[__1237.y] = __1238.y;
    Y_local[__1237.z] = __1238.z;
    Y_local[__1237.w] = __1238.w;
    int4 __1243 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1244;
      float4 __1245 = make_float4(Y_local[__1243.x],Y_local[__1243.y],Y_local[__1243.z],Y_local[__1243.w]);
      float4 __1246;
        float4 __1247 = A_shared_dyn_local[3];
        float4 __1248 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1246.x = (__1247.x*__1248.x);
        __1246.y = (__1247.y*__1248.y);
        __1246.z = (__1247.z*__1248.z);
        __1246.w = (__1247.w*__1248.w);
      __1244.x = (__1245.x+__1246.x);
      __1244.y = (__1245.y+__1246.y);
      __1244.z = (__1245.z+__1246.z);
      __1244.w = (__1245.w+__1246.w);
    Y_local[__1243.x] = __1244.x;
    Y_local[__1243.y] = __1244.y;
    Y_local[__1243.z] = __1244.z;
    Y_local[__1243.w] = __1244.w;
  for (int ax0_0_27 = 0; ax0_0_27 < 2; ++ax0_0_27) {
    A_shared_dyn_local[(ax0_0_27 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_27 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 192));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 2944) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1249 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1250;
      float4 __1251 = make_float4(Y_local[__1249.x],Y_local[__1249.y],Y_local[__1249.z],Y_local[__1249.w]);
      float4 __1252;
        float4 __1253 = A_shared_dyn_local[0];
        float4 __1254 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1252.x = (__1253.x*__1254.x);
        __1252.y = (__1253.y*__1254.y);
        __1252.z = (__1253.z*__1254.z);
        __1252.w = (__1253.w*__1254.w);
      __1250.x = (__1251.x+__1252.x);
      __1250.y = (__1251.y+__1252.y);
      __1250.z = (__1251.z+__1252.z);
      __1250.w = (__1251.w+__1252.w);
    Y_local[__1249.x] = __1250.x;
    Y_local[__1249.y] = __1250.y;
    Y_local[__1249.z] = __1250.z;
    Y_local[__1249.w] = __1250.w;
    int4 __1255 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1256;
      float4 __1257 = make_float4(Y_local[__1255.x],Y_local[__1255.y],Y_local[__1255.z],Y_local[__1255.w]);
      float4 __1258;
        float4 __1259 = A_shared_dyn_local[1];
        float4 __1260 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1258.x = (__1259.x*__1260.x);
        __1258.y = (__1259.y*__1260.y);
        __1258.z = (__1259.z*__1260.z);
        __1258.w = (__1259.w*__1260.w);
      __1256.x = (__1257.x+__1258.x);
      __1256.y = (__1257.y+__1258.y);
      __1256.z = (__1257.z+__1258.z);
      __1256.w = (__1257.w+__1258.w);
    Y_local[__1255.x] = __1256.x;
    Y_local[__1255.y] = __1256.y;
    Y_local[__1255.z] = __1256.z;
    Y_local[__1255.w] = __1256.w;
    int4 __1261 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1262;
      float4 __1263 = make_float4(Y_local[__1261.x],Y_local[__1261.y],Y_local[__1261.z],Y_local[__1261.w]);
      float4 __1264;
        float4 __1265 = A_shared_dyn_local[0];
        float4 __1266 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1264.x = (__1265.x*__1266.x);
        __1264.y = (__1265.y*__1266.y);
        __1264.z = (__1265.z*__1266.z);
        __1264.w = (__1265.w*__1266.w);
      __1262.x = (__1263.x+__1264.x);
      __1262.y = (__1263.y+__1264.y);
      __1262.z = (__1263.z+__1264.z);
      __1262.w = (__1263.w+__1264.w);
    Y_local[__1261.x] = __1262.x;
    Y_local[__1261.y] = __1262.y;
    Y_local[__1261.z] = __1262.z;
    Y_local[__1261.w] = __1262.w;
    int4 __1267 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1268;
      float4 __1269 = make_float4(Y_local[__1267.x],Y_local[__1267.y],Y_local[__1267.z],Y_local[__1267.w]);
      float4 __1270;
        float4 __1271 = A_shared_dyn_local[1];
        float4 __1272 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1270.x = (__1271.x*__1272.x);
        __1270.y = (__1271.y*__1272.y);
        __1270.z = (__1271.z*__1272.z);
        __1270.w = (__1271.w*__1272.w);
      __1268.x = (__1269.x+__1270.x);
      __1268.y = (__1269.y+__1270.y);
      __1268.z = (__1269.z+__1270.z);
      __1268.w = (__1269.w+__1270.w);
    Y_local[__1267.x] = __1268.x;
    Y_local[__1267.y] = __1268.y;
    Y_local[__1267.z] = __1268.z;
    Y_local[__1267.w] = __1268.w;
    int4 __1273 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1274;
      float4 __1275 = make_float4(Y_local[__1273.x],Y_local[__1273.y],Y_local[__1273.z],Y_local[__1273.w]);
      float4 __1276;
        float4 __1277 = A_shared_dyn_local[0];
        float4 __1278 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1276.x = (__1277.x*__1278.x);
        __1276.y = (__1277.y*__1278.y);
        __1276.z = (__1277.z*__1278.z);
        __1276.w = (__1277.w*__1278.w);
      __1274.x = (__1275.x+__1276.x);
      __1274.y = (__1275.y+__1276.y);
      __1274.z = (__1275.z+__1276.z);
      __1274.w = (__1275.w+__1276.w);
    Y_local[__1273.x] = __1274.x;
    Y_local[__1273.y] = __1274.y;
    Y_local[__1273.z] = __1274.z;
    Y_local[__1273.w] = __1274.w;
    int4 __1279 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1280;
      float4 __1281 = make_float4(Y_local[__1279.x],Y_local[__1279.y],Y_local[__1279.z],Y_local[__1279.w]);
      float4 __1282;
        float4 __1283 = A_shared_dyn_local[1];
        float4 __1284 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1282.x = (__1283.x*__1284.x);
        __1282.y = (__1283.y*__1284.y);
        __1282.z = (__1283.z*__1284.z);
        __1282.w = (__1283.w*__1284.w);
      __1280.x = (__1281.x+__1282.x);
      __1280.y = (__1281.y+__1282.y);
      __1280.z = (__1281.z+__1282.z);
      __1280.w = (__1281.w+__1282.w);
    Y_local[__1279.x] = __1280.x;
    Y_local[__1279.y] = __1280.y;
    Y_local[__1279.z] = __1280.z;
    Y_local[__1279.w] = __1280.w;
    int4 __1285 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1286;
      float4 __1287 = make_float4(Y_local[__1285.x],Y_local[__1285.y],Y_local[__1285.z],Y_local[__1285.w]);
      float4 __1288;
        float4 __1289 = A_shared_dyn_local[0];
        float4 __1290 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1288.x = (__1289.x*__1290.x);
        __1288.y = (__1289.y*__1290.y);
        __1288.z = (__1289.z*__1290.z);
        __1288.w = (__1289.w*__1290.w);
      __1286.x = (__1287.x+__1288.x);
      __1286.y = (__1287.y+__1288.y);
      __1286.z = (__1287.z+__1288.z);
      __1286.w = (__1287.w+__1288.w);
    Y_local[__1285.x] = __1286.x;
    Y_local[__1285.y] = __1286.y;
    Y_local[__1285.z] = __1286.z;
    Y_local[__1285.w] = __1286.w;
    int4 __1291 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1292;
      float4 __1293 = make_float4(Y_local[__1291.x],Y_local[__1291.y],Y_local[__1291.z],Y_local[__1291.w]);
      float4 __1294;
        float4 __1295 = A_shared_dyn_local[1];
        float4 __1296 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1294.x = (__1295.x*__1296.x);
        __1294.y = (__1295.y*__1296.y);
        __1294.z = (__1295.z*__1296.z);
        __1294.w = (__1295.w*__1296.w);
      __1292.x = (__1293.x+__1294.x);
      __1292.y = (__1293.y+__1294.y);
      __1292.z = (__1293.z+__1294.z);
      __1292.w = (__1293.w+__1294.w);
    Y_local[__1291.x] = __1292.x;
    Y_local[__1291.y] = __1292.y;
    Y_local[__1291.z] = __1292.z;
    Y_local[__1291.w] = __1292.w;
  for (int ax0_0_28 = 0; ax0_0_28 < 2; ++ax0_0_28) {
    A_shared_dyn_local[ax0_0_28] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_28 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 256));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3072) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1297 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1298;
      float4 __1299 = make_float4(Y_local[__1297.x],Y_local[__1297.y],Y_local[__1297.z],Y_local[__1297.w]);
      float4 __1300;
        float4 __1301 = A_shared_dyn_local[2];
        float4 __1302 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1300.x = (__1301.x*__1302.x);
        __1300.y = (__1301.y*__1302.y);
        __1300.z = (__1301.z*__1302.z);
        __1300.w = (__1301.w*__1302.w);
      __1298.x = (__1299.x+__1300.x);
      __1298.y = (__1299.y+__1300.y);
      __1298.z = (__1299.z+__1300.z);
      __1298.w = (__1299.w+__1300.w);
    Y_local[__1297.x] = __1298.x;
    Y_local[__1297.y] = __1298.y;
    Y_local[__1297.z] = __1298.z;
    Y_local[__1297.w] = __1298.w;
    int4 __1303 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1304;
      float4 __1305 = make_float4(Y_local[__1303.x],Y_local[__1303.y],Y_local[__1303.z],Y_local[__1303.w]);
      float4 __1306;
        float4 __1307 = A_shared_dyn_local[3];
        float4 __1308 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1306.x = (__1307.x*__1308.x);
        __1306.y = (__1307.y*__1308.y);
        __1306.z = (__1307.z*__1308.z);
        __1306.w = (__1307.w*__1308.w);
      __1304.x = (__1305.x+__1306.x);
      __1304.y = (__1305.y+__1306.y);
      __1304.z = (__1305.z+__1306.z);
      __1304.w = (__1305.w+__1306.w);
    Y_local[__1303.x] = __1304.x;
    Y_local[__1303.y] = __1304.y;
    Y_local[__1303.z] = __1304.z;
    Y_local[__1303.w] = __1304.w;
    int4 __1309 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1310;
      float4 __1311 = make_float4(Y_local[__1309.x],Y_local[__1309.y],Y_local[__1309.z],Y_local[__1309.w]);
      float4 __1312;
        float4 __1313 = A_shared_dyn_local[2];
        float4 __1314 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1312.x = (__1313.x*__1314.x);
        __1312.y = (__1313.y*__1314.y);
        __1312.z = (__1313.z*__1314.z);
        __1312.w = (__1313.w*__1314.w);
      __1310.x = (__1311.x+__1312.x);
      __1310.y = (__1311.y+__1312.y);
      __1310.z = (__1311.z+__1312.z);
      __1310.w = (__1311.w+__1312.w);
    Y_local[__1309.x] = __1310.x;
    Y_local[__1309.y] = __1310.y;
    Y_local[__1309.z] = __1310.z;
    Y_local[__1309.w] = __1310.w;
    int4 __1315 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1316;
      float4 __1317 = make_float4(Y_local[__1315.x],Y_local[__1315.y],Y_local[__1315.z],Y_local[__1315.w]);
      float4 __1318;
        float4 __1319 = A_shared_dyn_local[3];
        float4 __1320 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1318.x = (__1319.x*__1320.x);
        __1318.y = (__1319.y*__1320.y);
        __1318.z = (__1319.z*__1320.z);
        __1318.w = (__1319.w*__1320.w);
      __1316.x = (__1317.x+__1318.x);
      __1316.y = (__1317.y+__1318.y);
      __1316.z = (__1317.z+__1318.z);
      __1316.w = (__1317.w+__1318.w);
    Y_local[__1315.x] = __1316.x;
    Y_local[__1315.y] = __1316.y;
    Y_local[__1315.z] = __1316.z;
    Y_local[__1315.w] = __1316.w;
    int4 __1321 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1322;
      float4 __1323 = make_float4(Y_local[__1321.x],Y_local[__1321.y],Y_local[__1321.z],Y_local[__1321.w]);
      float4 __1324;
        float4 __1325 = A_shared_dyn_local[2];
        float4 __1326 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1324.x = (__1325.x*__1326.x);
        __1324.y = (__1325.y*__1326.y);
        __1324.z = (__1325.z*__1326.z);
        __1324.w = (__1325.w*__1326.w);
      __1322.x = (__1323.x+__1324.x);
      __1322.y = (__1323.y+__1324.y);
      __1322.z = (__1323.z+__1324.z);
      __1322.w = (__1323.w+__1324.w);
    Y_local[__1321.x] = __1322.x;
    Y_local[__1321.y] = __1322.y;
    Y_local[__1321.z] = __1322.z;
    Y_local[__1321.w] = __1322.w;
    int4 __1327 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1328;
      float4 __1329 = make_float4(Y_local[__1327.x],Y_local[__1327.y],Y_local[__1327.z],Y_local[__1327.w]);
      float4 __1330;
        float4 __1331 = A_shared_dyn_local[3];
        float4 __1332 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1330.x = (__1331.x*__1332.x);
        __1330.y = (__1331.y*__1332.y);
        __1330.z = (__1331.z*__1332.z);
        __1330.w = (__1331.w*__1332.w);
      __1328.x = (__1329.x+__1330.x);
      __1328.y = (__1329.y+__1330.y);
      __1328.z = (__1329.z+__1330.z);
      __1328.w = (__1329.w+__1330.w);
    Y_local[__1327.x] = __1328.x;
    Y_local[__1327.y] = __1328.y;
    Y_local[__1327.z] = __1328.z;
    Y_local[__1327.w] = __1328.w;
    int4 __1333 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1334;
      float4 __1335 = make_float4(Y_local[__1333.x],Y_local[__1333.y],Y_local[__1333.z],Y_local[__1333.w]);
      float4 __1336;
        float4 __1337 = A_shared_dyn_local[2];
        float4 __1338 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1336.x = (__1337.x*__1338.x);
        __1336.y = (__1337.y*__1338.y);
        __1336.z = (__1337.z*__1338.z);
        __1336.w = (__1337.w*__1338.w);
      __1334.x = (__1335.x+__1336.x);
      __1334.y = (__1335.y+__1336.y);
      __1334.z = (__1335.z+__1336.z);
      __1334.w = (__1335.w+__1336.w);
    Y_local[__1333.x] = __1334.x;
    Y_local[__1333.y] = __1334.y;
    Y_local[__1333.z] = __1334.z;
    Y_local[__1333.w] = __1334.w;
    int4 __1339 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1340;
      float4 __1341 = make_float4(Y_local[__1339.x],Y_local[__1339.y],Y_local[__1339.z],Y_local[__1339.w]);
      float4 __1342;
        float4 __1343 = A_shared_dyn_local[3];
        float4 __1344 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1342.x = (__1343.x*__1344.x);
        __1342.y = (__1343.y*__1344.y);
        __1342.z = (__1343.z*__1344.z);
        __1342.w = (__1343.w*__1344.w);
      __1340.x = (__1341.x+__1342.x);
      __1340.y = (__1341.y+__1342.y);
      __1340.z = (__1341.z+__1342.z);
      __1340.w = (__1341.w+__1342.w);
    Y_local[__1339.x] = __1340.x;
    Y_local[__1339.y] = __1340.y;
    Y_local[__1339.z] = __1340.z;
    Y_local[__1339.w] = __1340.w;
  for (int ax0_0_29 = 0; ax0_0_29 < 2; ++ax0_0_29) {
    A_shared_dyn_local[(ax0_0_29 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_29 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 320));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3200) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1345 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1346;
      float4 __1347 = make_float4(Y_local[__1345.x],Y_local[__1345.y],Y_local[__1345.z],Y_local[__1345.w]);
      float4 __1348;
        float4 __1349 = A_shared_dyn_local[0];
        float4 __1350 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1348.x = (__1349.x*__1350.x);
        __1348.y = (__1349.y*__1350.y);
        __1348.z = (__1349.z*__1350.z);
        __1348.w = (__1349.w*__1350.w);
      __1346.x = (__1347.x+__1348.x);
      __1346.y = (__1347.y+__1348.y);
      __1346.z = (__1347.z+__1348.z);
      __1346.w = (__1347.w+__1348.w);
    Y_local[__1345.x] = __1346.x;
    Y_local[__1345.y] = __1346.y;
    Y_local[__1345.z] = __1346.z;
    Y_local[__1345.w] = __1346.w;
    int4 __1351 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1352;
      float4 __1353 = make_float4(Y_local[__1351.x],Y_local[__1351.y],Y_local[__1351.z],Y_local[__1351.w]);
      float4 __1354;
        float4 __1355 = A_shared_dyn_local[1];
        float4 __1356 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1354.x = (__1355.x*__1356.x);
        __1354.y = (__1355.y*__1356.y);
        __1354.z = (__1355.z*__1356.z);
        __1354.w = (__1355.w*__1356.w);
      __1352.x = (__1353.x+__1354.x);
      __1352.y = (__1353.y+__1354.y);
      __1352.z = (__1353.z+__1354.z);
      __1352.w = (__1353.w+__1354.w);
    Y_local[__1351.x] = __1352.x;
    Y_local[__1351.y] = __1352.y;
    Y_local[__1351.z] = __1352.z;
    Y_local[__1351.w] = __1352.w;
    int4 __1357 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1358;
      float4 __1359 = make_float4(Y_local[__1357.x],Y_local[__1357.y],Y_local[__1357.z],Y_local[__1357.w]);
      float4 __1360;
        float4 __1361 = A_shared_dyn_local[0];
        float4 __1362 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1360.x = (__1361.x*__1362.x);
        __1360.y = (__1361.y*__1362.y);
        __1360.z = (__1361.z*__1362.z);
        __1360.w = (__1361.w*__1362.w);
      __1358.x = (__1359.x+__1360.x);
      __1358.y = (__1359.y+__1360.y);
      __1358.z = (__1359.z+__1360.z);
      __1358.w = (__1359.w+__1360.w);
    Y_local[__1357.x] = __1358.x;
    Y_local[__1357.y] = __1358.y;
    Y_local[__1357.z] = __1358.z;
    Y_local[__1357.w] = __1358.w;
    int4 __1363 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1364;
      float4 __1365 = make_float4(Y_local[__1363.x],Y_local[__1363.y],Y_local[__1363.z],Y_local[__1363.w]);
      float4 __1366;
        float4 __1367 = A_shared_dyn_local[1];
        float4 __1368 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1366.x = (__1367.x*__1368.x);
        __1366.y = (__1367.y*__1368.y);
        __1366.z = (__1367.z*__1368.z);
        __1366.w = (__1367.w*__1368.w);
      __1364.x = (__1365.x+__1366.x);
      __1364.y = (__1365.y+__1366.y);
      __1364.z = (__1365.z+__1366.z);
      __1364.w = (__1365.w+__1366.w);
    Y_local[__1363.x] = __1364.x;
    Y_local[__1363.y] = __1364.y;
    Y_local[__1363.z] = __1364.z;
    Y_local[__1363.w] = __1364.w;
    int4 __1369 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1370;
      float4 __1371 = make_float4(Y_local[__1369.x],Y_local[__1369.y],Y_local[__1369.z],Y_local[__1369.w]);
      float4 __1372;
        float4 __1373 = A_shared_dyn_local[0];
        float4 __1374 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1372.x = (__1373.x*__1374.x);
        __1372.y = (__1373.y*__1374.y);
        __1372.z = (__1373.z*__1374.z);
        __1372.w = (__1373.w*__1374.w);
      __1370.x = (__1371.x+__1372.x);
      __1370.y = (__1371.y+__1372.y);
      __1370.z = (__1371.z+__1372.z);
      __1370.w = (__1371.w+__1372.w);
    Y_local[__1369.x] = __1370.x;
    Y_local[__1369.y] = __1370.y;
    Y_local[__1369.z] = __1370.z;
    Y_local[__1369.w] = __1370.w;
    int4 __1375 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1376;
      float4 __1377 = make_float4(Y_local[__1375.x],Y_local[__1375.y],Y_local[__1375.z],Y_local[__1375.w]);
      float4 __1378;
        float4 __1379 = A_shared_dyn_local[1];
        float4 __1380 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1378.x = (__1379.x*__1380.x);
        __1378.y = (__1379.y*__1380.y);
        __1378.z = (__1379.z*__1380.z);
        __1378.w = (__1379.w*__1380.w);
      __1376.x = (__1377.x+__1378.x);
      __1376.y = (__1377.y+__1378.y);
      __1376.z = (__1377.z+__1378.z);
      __1376.w = (__1377.w+__1378.w);
    Y_local[__1375.x] = __1376.x;
    Y_local[__1375.y] = __1376.y;
    Y_local[__1375.z] = __1376.z;
    Y_local[__1375.w] = __1376.w;
    int4 __1381 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1382;
      float4 __1383 = make_float4(Y_local[__1381.x],Y_local[__1381.y],Y_local[__1381.z],Y_local[__1381.w]);
      float4 __1384;
        float4 __1385 = A_shared_dyn_local[0];
        float4 __1386 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1384.x = (__1385.x*__1386.x);
        __1384.y = (__1385.y*__1386.y);
        __1384.z = (__1385.z*__1386.z);
        __1384.w = (__1385.w*__1386.w);
      __1382.x = (__1383.x+__1384.x);
      __1382.y = (__1383.y+__1384.y);
      __1382.z = (__1383.z+__1384.z);
      __1382.w = (__1383.w+__1384.w);
    Y_local[__1381.x] = __1382.x;
    Y_local[__1381.y] = __1382.y;
    Y_local[__1381.z] = __1382.z;
    Y_local[__1381.w] = __1382.w;
    int4 __1387 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1388;
      float4 __1389 = make_float4(Y_local[__1387.x],Y_local[__1387.y],Y_local[__1387.z],Y_local[__1387.w]);
      float4 __1390;
        float4 __1391 = A_shared_dyn_local[1];
        float4 __1392 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1390.x = (__1391.x*__1392.x);
        __1390.y = (__1391.y*__1392.y);
        __1390.z = (__1391.z*__1392.z);
        __1390.w = (__1391.w*__1392.w);
      __1388.x = (__1389.x+__1390.x);
      __1388.y = (__1389.y+__1390.y);
      __1388.z = (__1389.z+__1390.z);
      __1388.w = (__1389.w+__1390.w);
    Y_local[__1387.x] = __1388.x;
    Y_local[__1387.y] = __1388.y;
    Y_local[__1387.z] = __1388.z;
    Y_local[__1387.w] = __1388.w;
  for (int ax0_0_30 = 0; ax0_0_30 < 2; ++ax0_0_30) {
    A_shared_dyn_local[ax0_0_30] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_30 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 384));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3328) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1393 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1394;
      float4 __1395 = make_float4(Y_local[__1393.x],Y_local[__1393.y],Y_local[__1393.z],Y_local[__1393.w]);
      float4 __1396;
        float4 __1397 = A_shared_dyn_local[2];
        float4 __1398 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1396.x = (__1397.x*__1398.x);
        __1396.y = (__1397.y*__1398.y);
        __1396.z = (__1397.z*__1398.z);
        __1396.w = (__1397.w*__1398.w);
      __1394.x = (__1395.x+__1396.x);
      __1394.y = (__1395.y+__1396.y);
      __1394.z = (__1395.z+__1396.z);
      __1394.w = (__1395.w+__1396.w);
    Y_local[__1393.x] = __1394.x;
    Y_local[__1393.y] = __1394.y;
    Y_local[__1393.z] = __1394.z;
    Y_local[__1393.w] = __1394.w;
    int4 __1399 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1400;
      float4 __1401 = make_float4(Y_local[__1399.x],Y_local[__1399.y],Y_local[__1399.z],Y_local[__1399.w]);
      float4 __1402;
        float4 __1403 = A_shared_dyn_local[3];
        float4 __1404 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1402.x = (__1403.x*__1404.x);
        __1402.y = (__1403.y*__1404.y);
        __1402.z = (__1403.z*__1404.z);
        __1402.w = (__1403.w*__1404.w);
      __1400.x = (__1401.x+__1402.x);
      __1400.y = (__1401.y+__1402.y);
      __1400.z = (__1401.z+__1402.z);
      __1400.w = (__1401.w+__1402.w);
    Y_local[__1399.x] = __1400.x;
    Y_local[__1399.y] = __1400.y;
    Y_local[__1399.z] = __1400.z;
    Y_local[__1399.w] = __1400.w;
    int4 __1405 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1406;
      float4 __1407 = make_float4(Y_local[__1405.x],Y_local[__1405.y],Y_local[__1405.z],Y_local[__1405.w]);
      float4 __1408;
        float4 __1409 = A_shared_dyn_local[2];
        float4 __1410 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1408.x = (__1409.x*__1410.x);
        __1408.y = (__1409.y*__1410.y);
        __1408.z = (__1409.z*__1410.z);
        __1408.w = (__1409.w*__1410.w);
      __1406.x = (__1407.x+__1408.x);
      __1406.y = (__1407.y+__1408.y);
      __1406.z = (__1407.z+__1408.z);
      __1406.w = (__1407.w+__1408.w);
    Y_local[__1405.x] = __1406.x;
    Y_local[__1405.y] = __1406.y;
    Y_local[__1405.z] = __1406.z;
    Y_local[__1405.w] = __1406.w;
    int4 __1411 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1412;
      float4 __1413 = make_float4(Y_local[__1411.x],Y_local[__1411.y],Y_local[__1411.z],Y_local[__1411.w]);
      float4 __1414;
        float4 __1415 = A_shared_dyn_local[3];
        float4 __1416 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1414.x = (__1415.x*__1416.x);
        __1414.y = (__1415.y*__1416.y);
        __1414.z = (__1415.z*__1416.z);
        __1414.w = (__1415.w*__1416.w);
      __1412.x = (__1413.x+__1414.x);
      __1412.y = (__1413.y+__1414.y);
      __1412.z = (__1413.z+__1414.z);
      __1412.w = (__1413.w+__1414.w);
    Y_local[__1411.x] = __1412.x;
    Y_local[__1411.y] = __1412.y;
    Y_local[__1411.z] = __1412.z;
    Y_local[__1411.w] = __1412.w;
    int4 __1417 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1418;
      float4 __1419 = make_float4(Y_local[__1417.x],Y_local[__1417.y],Y_local[__1417.z],Y_local[__1417.w]);
      float4 __1420;
        float4 __1421 = A_shared_dyn_local[2];
        float4 __1422 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1420.x = (__1421.x*__1422.x);
        __1420.y = (__1421.y*__1422.y);
        __1420.z = (__1421.z*__1422.z);
        __1420.w = (__1421.w*__1422.w);
      __1418.x = (__1419.x+__1420.x);
      __1418.y = (__1419.y+__1420.y);
      __1418.z = (__1419.z+__1420.z);
      __1418.w = (__1419.w+__1420.w);
    Y_local[__1417.x] = __1418.x;
    Y_local[__1417.y] = __1418.y;
    Y_local[__1417.z] = __1418.z;
    Y_local[__1417.w] = __1418.w;
    int4 __1423 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1424;
      float4 __1425 = make_float4(Y_local[__1423.x],Y_local[__1423.y],Y_local[__1423.z],Y_local[__1423.w]);
      float4 __1426;
        float4 __1427 = A_shared_dyn_local[3];
        float4 __1428 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1426.x = (__1427.x*__1428.x);
        __1426.y = (__1427.y*__1428.y);
        __1426.z = (__1427.z*__1428.z);
        __1426.w = (__1427.w*__1428.w);
      __1424.x = (__1425.x+__1426.x);
      __1424.y = (__1425.y+__1426.y);
      __1424.z = (__1425.z+__1426.z);
      __1424.w = (__1425.w+__1426.w);
    Y_local[__1423.x] = __1424.x;
    Y_local[__1423.y] = __1424.y;
    Y_local[__1423.z] = __1424.z;
    Y_local[__1423.w] = __1424.w;
    int4 __1429 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1430;
      float4 __1431 = make_float4(Y_local[__1429.x],Y_local[__1429.y],Y_local[__1429.z],Y_local[__1429.w]);
      float4 __1432;
        float4 __1433 = A_shared_dyn_local[2];
        float4 __1434 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1432.x = (__1433.x*__1434.x);
        __1432.y = (__1433.y*__1434.y);
        __1432.z = (__1433.z*__1434.z);
        __1432.w = (__1433.w*__1434.w);
      __1430.x = (__1431.x+__1432.x);
      __1430.y = (__1431.y+__1432.y);
      __1430.z = (__1431.z+__1432.z);
      __1430.w = (__1431.w+__1432.w);
    Y_local[__1429.x] = __1430.x;
    Y_local[__1429.y] = __1430.y;
    Y_local[__1429.z] = __1430.z;
    Y_local[__1429.w] = __1430.w;
    int4 __1435 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1436;
      float4 __1437 = make_float4(Y_local[__1435.x],Y_local[__1435.y],Y_local[__1435.z],Y_local[__1435.w]);
      float4 __1438;
        float4 __1439 = A_shared_dyn_local[3];
        float4 __1440 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1438.x = (__1439.x*__1440.x);
        __1438.y = (__1439.y*__1440.y);
        __1438.z = (__1439.z*__1440.z);
        __1438.w = (__1439.w*__1440.w);
      __1436.x = (__1437.x+__1438.x);
      __1436.y = (__1437.y+__1438.y);
      __1436.z = (__1437.z+__1438.z);
      __1436.w = (__1437.w+__1438.w);
    Y_local[__1435.x] = __1436.x;
    Y_local[__1435.y] = __1436.y;
    Y_local[__1435.z] = __1436.z;
    Y_local[__1435.w] = __1436.w;
  for (int ax0_0_31 = 0; ax0_0_31 < 2; ++ax0_0_31) {
    A_shared_dyn_local[(ax0_0_31 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_31 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 448));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3456) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1441 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1442;
      float4 __1443 = make_float4(Y_local[__1441.x],Y_local[__1441.y],Y_local[__1441.z],Y_local[__1441.w]);
      float4 __1444;
        float4 __1445 = A_shared_dyn_local[0];
        float4 __1446 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1444.x = (__1445.x*__1446.x);
        __1444.y = (__1445.y*__1446.y);
        __1444.z = (__1445.z*__1446.z);
        __1444.w = (__1445.w*__1446.w);
      __1442.x = (__1443.x+__1444.x);
      __1442.y = (__1443.y+__1444.y);
      __1442.z = (__1443.z+__1444.z);
      __1442.w = (__1443.w+__1444.w);
    Y_local[__1441.x] = __1442.x;
    Y_local[__1441.y] = __1442.y;
    Y_local[__1441.z] = __1442.z;
    Y_local[__1441.w] = __1442.w;
    int4 __1447 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1448;
      float4 __1449 = make_float4(Y_local[__1447.x],Y_local[__1447.y],Y_local[__1447.z],Y_local[__1447.w]);
      float4 __1450;
        float4 __1451 = A_shared_dyn_local[1];
        float4 __1452 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1450.x = (__1451.x*__1452.x);
        __1450.y = (__1451.y*__1452.y);
        __1450.z = (__1451.z*__1452.z);
        __1450.w = (__1451.w*__1452.w);
      __1448.x = (__1449.x+__1450.x);
      __1448.y = (__1449.y+__1450.y);
      __1448.z = (__1449.z+__1450.z);
      __1448.w = (__1449.w+__1450.w);
    Y_local[__1447.x] = __1448.x;
    Y_local[__1447.y] = __1448.y;
    Y_local[__1447.z] = __1448.z;
    Y_local[__1447.w] = __1448.w;
    int4 __1453 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1454;
      float4 __1455 = make_float4(Y_local[__1453.x],Y_local[__1453.y],Y_local[__1453.z],Y_local[__1453.w]);
      float4 __1456;
        float4 __1457 = A_shared_dyn_local[0];
        float4 __1458 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1456.x = (__1457.x*__1458.x);
        __1456.y = (__1457.y*__1458.y);
        __1456.z = (__1457.z*__1458.z);
        __1456.w = (__1457.w*__1458.w);
      __1454.x = (__1455.x+__1456.x);
      __1454.y = (__1455.y+__1456.y);
      __1454.z = (__1455.z+__1456.z);
      __1454.w = (__1455.w+__1456.w);
    Y_local[__1453.x] = __1454.x;
    Y_local[__1453.y] = __1454.y;
    Y_local[__1453.z] = __1454.z;
    Y_local[__1453.w] = __1454.w;
    int4 __1459 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1460;
      float4 __1461 = make_float4(Y_local[__1459.x],Y_local[__1459.y],Y_local[__1459.z],Y_local[__1459.w]);
      float4 __1462;
        float4 __1463 = A_shared_dyn_local[1];
        float4 __1464 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1462.x = (__1463.x*__1464.x);
        __1462.y = (__1463.y*__1464.y);
        __1462.z = (__1463.z*__1464.z);
        __1462.w = (__1463.w*__1464.w);
      __1460.x = (__1461.x+__1462.x);
      __1460.y = (__1461.y+__1462.y);
      __1460.z = (__1461.z+__1462.z);
      __1460.w = (__1461.w+__1462.w);
    Y_local[__1459.x] = __1460.x;
    Y_local[__1459.y] = __1460.y;
    Y_local[__1459.z] = __1460.z;
    Y_local[__1459.w] = __1460.w;
    int4 __1465 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1466;
      float4 __1467 = make_float4(Y_local[__1465.x],Y_local[__1465.y],Y_local[__1465.z],Y_local[__1465.w]);
      float4 __1468;
        float4 __1469 = A_shared_dyn_local[0];
        float4 __1470 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1468.x = (__1469.x*__1470.x);
        __1468.y = (__1469.y*__1470.y);
        __1468.z = (__1469.z*__1470.z);
        __1468.w = (__1469.w*__1470.w);
      __1466.x = (__1467.x+__1468.x);
      __1466.y = (__1467.y+__1468.y);
      __1466.z = (__1467.z+__1468.z);
      __1466.w = (__1467.w+__1468.w);
    Y_local[__1465.x] = __1466.x;
    Y_local[__1465.y] = __1466.y;
    Y_local[__1465.z] = __1466.z;
    Y_local[__1465.w] = __1466.w;
    int4 __1471 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1472;
      float4 __1473 = make_float4(Y_local[__1471.x],Y_local[__1471.y],Y_local[__1471.z],Y_local[__1471.w]);
      float4 __1474;
        float4 __1475 = A_shared_dyn_local[1];
        float4 __1476 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1474.x = (__1475.x*__1476.x);
        __1474.y = (__1475.y*__1476.y);
        __1474.z = (__1475.z*__1476.z);
        __1474.w = (__1475.w*__1476.w);
      __1472.x = (__1473.x+__1474.x);
      __1472.y = (__1473.y+__1474.y);
      __1472.z = (__1473.z+__1474.z);
      __1472.w = (__1473.w+__1474.w);
    Y_local[__1471.x] = __1472.x;
    Y_local[__1471.y] = __1472.y;
    Y_local[__1471.z] = __1472.z;
    Y_local[__1471.w] = __1472.w;
    int4 __1477 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1478;
      float4 __1479 = make_float4(Y_local[__1477.x],Y_local[__1477.y],Y_local[__1477.z],Y_local[__1477.w]);
      float4 __1480;
        float4 __1481 = A_shared_dyn_local[0];
        float4 __1482 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1480.x = (__1481.x*__1482.x);
        __1480.y = (__1481.y*__1482.y);
        __1480.z = (__1481.z*__1482.z);
        __1480.w = (__1481.w*__1482.w);
      __1478.x = (__1479.x+__1480.x);
      __1478.y = (__1479.y+__1480.y);
      __1478.z = (__1479.z+__1480.z);
      __1478.w = (__1479.w+__1480.w);
    Y_local[__1477.x] = __1478.x;
    Y_local[__1477.y] = __1478.y;
    Y_local[__1477.z] = __1478.z;
    Y_local[__1477.w] = __1478.w;
    int4 __1483 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1484;
      float4 __1485 = make_float4(Y_local[__1483.x],Y_local[__1483.y],Y_local[__1483.z],Y_local[__1483.w]);
      float4 __1486;
        float4 __1487 = A_shared_dyn_local[1];
        float4 __1488 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1486.x = (__1487.x*__1488.x);
        __1486.y = (__1487.y*__1488.y);
        __1486.z = (__1487.z*__1488.z);
        __1486.w = (__1487.w*__1488.w);
      __1484.x = (__1485.x+__1486.x);
      __1484.y = (__1485.y+__1486.y);
      __1484.z = (__1485.z+__1486.z);
      __1484.w = (__1485.w+__1486.w);
    Y_local[__1483.x] = __1484.x;
    Y_local[__1483.y] = __1484.y;
    Y_local[__1483.z] = __1484.z;
    Y_local[__1483.w] = __1484.w;
  for (int ax0_0_32 = 0; ax0_0_32 < 2; ++ax0_0_32) {
    A_shared_dyn_local[ax0_0_32] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_32 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 512));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3584) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1489 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1490;
      float4 __1491 = make_float4(Y_local[__1489.x],Y_local[__1489.y],Y_local[__1489.z],Y_local[__1489.w]);
      float4 __1492;
        float4 __1493 = A_shared_dyn_local[2];
        float4 __1494 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1492.x = (__1493.x*__1494.x);
        __1492.y = (__1493.y*__1494.y);
        __1492.z = (__1493.z*__1494.z);
        __1492.w = (__1493.w*__1494.w);
      __1490.x = (__1491.x+__1492.x);
      __1490.y = (__1491.y+__1492.y);
      __1490.z = (__1491.z+__1492.z);
      __1490.w = (__1491.w+__1492.w);
    Y_local[__1489.x] = __1490.x;
    Y_local[__1489.y] = __1490.y;
    Y_local[__1489.z] = __1490.z;
    Y_local[__1489.w] = __1490.w;
    int4 __1495 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1496;
      float4 __1497 = make_float4(Y_local[__1495.x],Y_local[__1495.y],Y_local[__1495.z],Y_local[__1495.w]);
      float4 __1498;
        float4 __1499 = A_shared_dyn_local[3];
        float4 __1500 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1498.x = (__1499.x*__1500.x);
        __1498.y = (__1499.y*__1500.y);
        __1498.z = (__1499.z*__1500.z);
        __1498.w = (__1499.w*__1500.w);
      __1496.x = (__1497.x+__1498.x);
      __1496.y = (__1497.y+__1498.y);
      __1496.z = (__1497.z+__1498.z);
      __1496.w = (__1497.w+__1498.w);
    Y_local[__1495.x] = __1496.x;
    Y_local[__1495.y] = __1496.y;
    Y_local[__1495.z] = __1496.z;
    Y_local[__1495.w] = __1496.w;
    int4 __1501 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1502;
      float4 __1503 = make_float4(Y_local[__1501.x],Y_local[__1501.y],Y_local[__1501.z],Y_local[__1501.w]);
      float4 __1504;
        float4 __1505 = A_shared_dyn_local[2];
        float4 __1506 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1504.x = (__1505.x*__1506.x);
        __1504.y = (__1505.y*__1506.y);
        __1504.z = (__1505.z*__1506.z);
        __1504.w = (__1505.w*__1506.w);
      __1502.x = (__1503.x+__1504.x);
      __1502.y = (__1503.y+__1504.y);
      __1502.z = (__1503.z+__1504.z);
      __1502.w = (__1503.w+__1504.w);
    Y_local[__1501.x] = __1502.x;
    Y_local[__1501.y] = __1502.y;
    Y_local[__1501.z] = __1502.z;
    Y_local[__1501.w] = __1502.w;
    int4 __1507 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1508;
      float4 __1509 = make_float4(Y_local[__1507.x],Y_local[__1507.y],Y_local[__1507.z],Y_local[__1507.w]);
      float4 __1510;
        float4 __1511 = A_shared_dyn_local[3];
        float4 __1512 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1510.x = (__1511.x*__1512.x);
        __1510.y = (__1511.y*__1512.y);
        __1510.z = (__1511.z*__1512.z);
        __1510.w = (__1511.w*__1512.w);
      __1508.x = (__1509.x+__1510.x);
      __1508.y = (__1509.y+__1510.y);
      __1508.z = (__1509.z+__1510.z);
      __1508.w = (__1509.w+__1510.w);
    Y_local[__1507.x] = __1508.x;
    Y_local[__1507.y] = __1508.y;
    Y_local[__1507.z] = __1508.z;
    Y_local[__1507.w] = __1508.w;
    int4 __1513 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1514;
      float4 __1515 = make_float4(Y_local[__1513.x],Y_local[__1513.y],Y_local[__1513.z],Y_local[__1513.w]);
      float4 __1516;
        float4 __1517 = A_shared_dyn_local[2];
        float4 __1518 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1516.x = (__1517.x*__1518.x);
        __1516.y = (__1517.y*__1518.y);
        __1516.z = (__1517.z*__1518.z);
        __1516.w = (__1517.w*__1518.w);
      __1514.x = (__1515.x+__1516.x);
      __1514.y = (__1515.y+__1516.y);
      __1514.z = (__1515.z+__1516.z);
      __1514.w = (__1515.w+__1516.w);
    Y_local[__1513.x] = __1514.x;
    Y_local[__1513.y] = __1514.y;
    Y_local[__1513.z] = __1514.z;
    Y_local[__1513.w] = __1514.w;
    int4 __1519 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1520;
      float4 __1521 = make_float4(Y_local[__1519.x],Y_local[__1519.y],Y_local[__1519.z],Y_local[__1519.w]);
      float4 __1522;
        float4 __1523 = A_shared_dyn_local[3];
        float4 __1524 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1522.x = (__1523.x*__1524.x);
        __1522.y = (__1523.y*__1524.y);
        __1522.z = (__1523.z*__1524.z);
        __1522.w = (__1523.w*__1524.w);
      __1520.x = (__1521.x+__1522.x);
      __1520.y = (__1521.y+__1522.y);
      __1520.z = (__1521.z+__1522.z);
      __1520.w = (__1521.w+__1522.w);
    Y_local[__1519.x] = __1520.x;
    Y_local[__1519.y] = __1520.y;
    Y_local[__1519.z] = __1520.z;
    Y_local[__1519.w] = __1520.w;
    int4 __1525 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1526;
      float4 __1527 = make_float4(Y_local[__1525.x],Y_local[__1525.y],Y_local[__1525.z],Y_local[__1525.w]);
      float4 __1528;
        float4 __1529 = A_shared_dyn_local[2];
        float4 __1530 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1528.x = (__1529.x*__1530.x);
        __1528.y = (__1529.y*__1530.y);
        __1528.z = (__1529.z*__1530.z);
        __1528.w = (__1529.w*__1530.w);
      __1526.x = (__1527.x+__1528.x);
      __1526.y = (__1527.y+__1528.y);
      __1526.z = (__1527.z+__1528.z);
      __1526.w = (__1527.w+__1528.w);
    Y_local[__1525.x] = __1526.x;
    Y_local[__1525.y] = __1526.y;
    Y_local[__1525.z] = __1526.z;
    Y_local[__1525.w] = __1526.w;
    int4 __1531 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1532;
      float4 __1533 = make_float4(Y_local[__1531.x],Y_local[__1531.y],Y_local[__1531.z],Y_local[__1531.w]);
      float4 __1534;
        float4 __1535 = A_shared_dyn_local[3];
        float4 __1536 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1534.x = (__1535.x*__1536.x);
        __1534.y = (__1535.y*__1536.y);
        __1534.z = (__1535.z*__1536.z);
        __1534.w = (__1535.w*__1536.w);
      __1532.x = (__1533.x+__1534.x);
      __1532.y = (__1533.y+__1534.y);
      __1532.z = (__1533.z+__1534.z);
      __1532.w = (__1533.w+__1534.w);
    Y_local[__1531.x] = __1532.x;
    Y_local[__1531.y] = __1532.y;
    Y_local[__1531.z] = __1532.z;
    Y_local[__1531.w] = __1532.w;
  for (int ax0_0_33 = 0; ax0_0_33 < 2; ++ax0_0_33) {
    A_shared_dyn_local[(ax0_0_33 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_33 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 576));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3712) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1537 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1538;
      float4 __1539 = make_float4(Y_local[__1537.x],Y_local[__1537.y],Y_local[__1537.z],Y_local[__1537.w]);
      float4 __1540;
        float4 __1541 = A_shared_dyn_local[0];
        float4 __1542 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1540.x = (__1541.x*__1542.x);
        __1540.y = (__1541.y*__1542.y);
        __1540.z = (__1541.z*__1542.z);
        __1540.w = (__1541.w*__1542.w);
      __1538.x = (__1539.x+__1540.x);
      __1538.y = (__1539.y+__1540.y);
      __1538.z = (__1539.z+__1540.z);
      __1538.w = (__1539.w+__1540.w);
    Y_local[__1537.x] = __1538.x;
    Y_local[__1537.y] = __1538.y;
    Y_local[__1537.z] = __1538.z;
    Y_local[__1537.w] = __1538.w;
    int4 __1543 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1544;
      float4 __1545 = make_float4(Y_local[__1543.x],Y_local[__1543.y],Y_local[__1543.z],Y_local[__1543.w]);
      float4 __1546;
        float4 __1547 = A_shared_dyn_local[1];
        float4 __1548 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1546.x = (__1547.x*__1548.x);
        __1546.y = (__1547.y*__1548.y);
        __1546.z = (__1547.z*__1548.z);
        __1546.w = (__1547.w*__1548.w);
      __1544.x = (__1545.x+__1546.x);
      __1544.y = (__1545.y+__1546.y);
      __1544.z = (__1545.z+__1546.z);
      __1544.w = (__1545.w+__1546.w);
    Y_local[__1543.x] = __1544.x;
    Y_local[__1543.y] = __1544.y;
    Y_local[__1543.z] = __1544.z;
    Y_local[__1543.w] = __1544.w;
    int4 __1549 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1550;
      float4 __1551 = make_float4(Y_local[__1549.x],Y_local[__1549.y],Y_local[__1549.z],Y_local[__1549.w]);
      float4 __1552;
        float4 __1553 = A_shared_dyn_local[0];
        float4 __1554 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1552.x = (__1553.x*__1554.x);
        __1552.y = (__1553.y*__1554.y);
        __1552.z = (__1553.z*__1554.z);
        __1552.w = (__1553.w*__1554.w);
      __1550.x = (__1551.x+__1552.x);
      __1550.y = (__1551.y+__1552.y);
      __1550.z = (__1551.z+__1552.z);
      __1550.w = (__1551.w+__1552.w);
    Y_local[__1549.x] = __1550.x;
    Y_local[__1549.y] = __1550.y;
    Y_local[__1549.z] = __1550.z;
    Y_local[__1549.w] = __1550.w;
    int4 __1555 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1556;
      float4 __1557 = make_float4(Y_local[__1555.x],Y_local[__1555.y],Y_local[__1555.z],Y_local[__1555.w]);
      float4 __1558;
        float4 __1559 = A_shared_dyn_local[1];
        float4 __1560 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1558.x = (__1559.x*__1560.x);
        __1558.y = (__1559.y*__1560.y);
        __1558.z = (__1559.z*__1560.z);
        __1558.w = (__1559.w*__1560.w);
      __1556.x = (__1557.x+__1558.x);
      __1556.y = (__1557.y+__1558.y);
      __1556.z = (__1557.z+__1558.z);
      __1556.w = (__1557.w+__1558.w);
    Y_local[__1555.x] = __1556.x;
    Y_local[__1555.y] = __1556.y;
    Y_local[__1555.z] = __1556.z;
    Y_local[__1555.w] = __1556.w;
    int4 __1561 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1562;
      float4 __1563 = make_float4(Y_local[__1561.x],Y_local[__1561.y],Y_local[__1561.z],Y_local[__1561.w]);
      float4 __1564;
        float4 __1565 = A_shared_dyn_local[0];
        float4 __1566 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1564.x = (__1565.x*__1566.x);
        __1564.y = (__1565.y*__1566.y);
        __1564.z = (__1565.z*__1566.z);
        __1564.w = (__1565.w*__1566.w);
      __1562.x = (__1563.x+__1564.x);
      __1562.y = (__1563.y+__1564.y);
      __1562.z = (__1563.z+__1564.z);
      __1562.w = (__1563.w+__1564.w);
    Y_local[__1561.x] = __1562.x;
    Y_local[__1561.y] = __1562.y;
    Y_local[__1561.z] = __1562.z;
    Y_local[__1561.w] = __1562.w;
    int4 __1567 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1568;
      float4 __1569 = make_float4(Y_local[__1567.x],Y_local[__1567.y],Y_local[__1567.z],Y_local[__1567.w]);
      float4 __1570;
        float4 __1571 = A_shared_dyn_local[1];
        float4 __1572 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1570.x = (__1571.x*__1572.x);
        __1570.y = (__1571.y*__1572.y);
        __1570.z = (__1571.z*__1572.z);
        __1570.w = (__1571.w*__1572.w);
      __1568.x = (__1569.x+__1570.x);
      __1568.y = (__1569.y+__1570.y);
      __1568.z = (__1569.z+__1570.z);
      __1568.w = (__1569.w+__1570.w);
    Y_local[__1567.x] = __1568.x;
    Y_local[__1567.y] = __1568.y;
    Y_local[__1567.z] = __1568.z;
    Y_local[__1567.w] = __1568.w;
    int4 __1573 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1574;
      float4 __1575 = make_float4(Y_local[__1573.x],Y_local[__1573.y],Y_local[__1573.z],Y_local[__1573.w]);
      float4 __1576;
        float4 __1577 = A_shared_dyn_local[0];
        float4 __1578 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1576.x = (__1577.x*__1578.x);
        __1576.y = (__1577.y*__1578.y);
        __1576.z = (__1577.z*__1578.z);
        __1576.w = (__1577.w*__1578.w);
      __1574.x = (__1575.x+__1576.x);
      __1574.y = (__1575.y+__1576.y);
      __1574.z = (__1575.z+__1576.z);
      __1574.w = (__1575.w+__1576.w);
    Y_local[__1573.x] = __1574.x;
    Y_local[__1573.y] = __1574.y;
    Y_local[__1573.z] = __1574.z;
    Y_local[__1573.w] = __1574.w;
    int4 __1579 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1580;
      float4 __1581 = make_float4(Y_local[__1579.x],Y_local[__1579.y],Y_local[__1579.z],Y_local[__1579.w]);
      float4 __1582;
        float4 __1583 = A_shared_dyn_local[1];
        float4 __1584 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1582.x = (__1583.x*__1584.x);
        __1582.y = (__1583.y*__1584.y);
        __1582.z = (__1583.z*__1584.z);
        __1582.w = (__1583.w*__1584.w);
      __1580.x = (__1581.x+__1582.x);
      __1580.y = (__1581.y+__1582.y);
      __1580.z = (__1581.z+__1582.z);
      __1580.w = (__1581.w+__1582.w);
    Y_local[__1579.x] = __1580.x;
    Y_local[__1579.y] = __1580.y;
    Y_local[__1579.z] = __1580.z;
    Y_local[__1579.w] = __1580.w;
  for (int ax0_0_34 = 0; ax0_0_34 < 2; ++ax0_0_34) {
    A_shared_dyn_local[ax0_0_34] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_34 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 640));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3840) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1585 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1586;
      float4 __1587 = make_float4(Y_local[__1585.x],Y_local[__1585.y],Y_local[__1585.z],Y_local[__1585.w]);
      float4 __1588;
        float4 __1589 = A_shared_dyn_local[2];
        float4 __1590 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1588.x = (__1589.x*__1590.x);
        __1588.y = (__1589.y*__1590.y);
        __1588.z = (__1589.z*__1590.z);
        __1588.w = (__1589.w*__1590.w);
      __1586.x = (__1587.x+__1588.x);
      __1586.y = (__1587.y+__1588.y);
      __1586.z = (__1587.z+__1588.z);
      __1586.w = (__1587.w+__1588.w);
    Y_local[__1585.x] = __1586.x;
    Y_local[__1585.y] = __1586.y;
    Y_local[__1585.z] = __1586.z;
    Y_local[__1585.w] = __1586.w;
    int4 __1591 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1592;
      float4 __1593 = make_float4(Y_local[__1591.x],Y_local[__1591.y],Y_local[__1591.z],Y_local[__1591.w]);
      float4 __1594;
        float4 __1595 = A_shared_dyn_local[3];
        float4 __1596 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1594.x = (__1595.x*__1596.x);
        __1594.y = (__1595.y*__1596.y);
        __1594.z = (__1595.z*__1596.z);
        __1594.w = (__1595.w*__1596.w);
      __1592.x = (__1593.x+__1594.x);
      __1592.y = (__1593.y+__1594.y);
      __1592.z = (__1593.z+__1594.z);
      __1592.w = (__1593.w+__1594.w);
    Y_local[__1591.x] = __1592.x;
    Y_local[__1591.y] = __1592.y;
    Y_local[__1591.z] = __1592.z;
    Y_local[__1591.w] = __1592.w;
    int4 __1597 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1598;
      float4 __1599 = make_float4(Y_local[__1597.x],Y_local[__1597.y],Y_local[__1597.z],Y_local[__1597.w]);
      float4 __1600;
        float4 __1601 = A_shared_dyn_local[2];
        float4 __1602 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1600.x = (__1601.x*__1602.x);
        __1600.y = (__1601.y*__1602.y);
        __1600.z = (__1601.z*__1602.z);
        __1600.w = (__1601.w*__1602.w);
      __1598.x = (__1599.x+__1600.x);
      __1598.y = (__1599.y+__1600.y);
      __1598.z = (__1599.z+__1600.z);
      __1598.w = (__1599.w+__1600.w);
    Y_local[__1597.x] = __1598.x;
    Y_local[__1597.y] = __1598.y;
    Y_local[__1597.z] = __1598.z;
    Y_local[__1597.w] = __1598.w;
    int4 __1603 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1604;
      float4 __1605 = make_float4(Y_local[__1603.x],Y_local[__1603.y],Y_local[__1603.z],Y_local[__1603.w]);
      float4 __1606;
        float4 __1607 = A_shared_dyn_local[3];
        float4 __1608 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1606.x = (__1607.x*__1608.x);
        __1606.y = (__1607.y*__1608.y);
        __1606.z = (__1607.z*__1608.z);
        __1606.w = (__1607.w*__1608.w);
      __1604.x = (__1605.x+__1606.x);
      __1604.y = (__1605.y+__1606.y);
      __1604.z = (__1605.z+__1606.z);
      __1604.w = (__1605.w+__1606.w);
    Y_local[__1603.x] = __1604.x;
    Y_local[__1603.y] = __1604.y;
    Y_local[__1603.z] = __1604.z;
    Y_local[__1603.w] = __1604.w;
    int4 __1609 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1610;
      float4 __1611 = make_float4(Y_local[__1609.x],Y_local[__1609.y],Y_local[__1609.z],Y_local[__1609.w]);
      float4 __1612;
        float4 __1613 = A_shared_dyn_local[2];
        float4 __1614 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1612.x = (__1613.x*__1614.x);
        __1612.y = (__1613.y*__1614.y);
        __1612.z = (__1613.z*__1614.z);
        __1612.w = (__1613.w*__1614.w);
      __1610.x = (__1611.x+__1612.x);
      __1610.y = (__1611.y+__1612.y);
      __1610.z = (__1611.z+__1612.z);
      __1610.w = (__1611.w+__1612.w);
    Y_local[__1609.x] = __1610.x;
    Y_local[__1609.y] = __1610.y;
    Y_local[__1609.z] = __1610.z;
    Y_local[__1609.w] = __1610.w;
    int4 __1615 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1616;
      float4 __1617 = make_float4(Y_local[__1615.x],Y_local[__1615.y],Y_local[__1615.z],Y_local[__1615.w]);
      float4 __1618;
        float4 __1619 = A_shared_dyn_local[3];
        float4 __1620 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1618.x = (__1619.x*__1620.x);
        __1618.y = (__1619.y*__1620.y);
        __1618.z = (__1619.z*__1620.z);
        __1618.w = (__1619.w*__1620.w);
      __1616.x = (__1617.x+__1618.x);
      __1616.y = (__1617.y+__1618.y);
      __1616.z = (__1617.z+__1618.z);
      __1616.w = (__1617.w+__1618.w);
    Y_local[__1615.x] = __1616.x;
    Y_local[__1615.y] = __1616.y;
    Y_local[__1615.z] = __1616.z;
    Y_local[__1615.w] = __1616.w;
    int4 __1621 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1622;
      float4 __1623 = make_float4(Y_local[__1621.x],Y_local[__1621.y],Y_local[__1621.z],Y_local[__1621.w]);
      float4 __1624;
        float4 __1625 = A_shared_dyn_local[2];
        float4 __1626 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1624.x = (__1625.x*__1626.x);
        __1624.y = (__1625.y*__1626.y);
        __1624.z = (__1625.z*__1626.z);
        __1624.w = (__1625.w*__1626.w);
      __1622.x = (__1623.x+__1624.x);
      __1622.y = (__1623.y+__1624.y);
      __1622.z = (__1623.z+__1624.z);
      __1622.w = (__1623.w+__1624.w);
    Y_local[__1621.x] = __1622.x;
    Y_local[__1621.y] = __1622.y;
    Y_local[__1621.z] = __1622.z;
    Y_local[__1621.w] = __1622.w;
    int4 __1627 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1628;
      float4 __1629 = make_float4(Y_local[__1627.x],Y_local[__1627.y],Y_local[__1627.z],Y_local[__1627.w]);
      float4 __1630;
        float4 __1631 = A_shared_dyn_local[3];
        float4 __1632 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1630.x = (__1631.x*__1632.x);
        __1630.y = (__1631.y*__1632.y);
        __1630.z = (__1631.z*__1632.z);
        __1630.w = (__1631.w*__1632.w);
      __1628.x = (__1629.x+__1630.x);
      __1628.y = (__1629.y+__1630.y);
      __1628.z = (__1629.z+__1630.z);
      __1628.w = (__1629.w+__1630.w);
    Y_local[__1627.x] = __1628.x;
    Y_local[__1627.y] = __1628.y;
    Y_local[__1627.z] = __1628.z;
    Y_local[__1627.w] = __1628.w;
  for (int ax0_0_35 = 0; ax0_0_35 < 2; ++ax0_0_35) {
    A_shared_dyn_local[(ax0_0_35 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_35 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 704));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 3968) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1633 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1634;
      float4 __1635 = make_float4(Y_local[__1633.x],Y_local[__1633.y],Y_local[__1633.z],Y_local[__1633.w]);
      float4 __1636;
        float4 __1637 = A_shared_dyn_local[0];
        float4 __1638 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1636.x = (__1637.x*__1638.x);
        __1636.y = (__1637.y*__1638.y);
        __1636.z = (__1637.z*__1638.z);
        __1636.w = (__1637.w*__1638.w);
      __1634.x = (__1635.x+__1636.x);
      __1634.y = (__1635.y+__1636.y);
      __1634.z = (__1635.z+__1636.z);
      __1634.w = (__1635.w+__1636.w);
    Y_local[__1633.x] = __1634.x;
    Y_local[__1633.y] = __1634.y;
    Y_local[__1633.z] = __1634.z;
    Y_local[__1633.w] = __1634.w;
    int4 __1639 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1640;
      float4 __1641 = make_float4(Y_local[__1639.x],Y_local[__1639.y],Y_local[__1639.z],Y_local[__1639.w]);
      float4 __1642;
        float4 __1643 = A_shared_dyn_local[1];
        float4 __1644 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1642.x = (__1643.x*__1644.x);
        __1642.y = (__1643.y*__1644.y);
        __1642.z = (__1643.z*__1644.z);
        __1642.w = (__1643.w*__1644.w);
      __1640.x = (__1641.x+__1642.x);
      __1640.y = (__1641.y+__1642.y);
      __1640.z = (__1641.z+__1642.z);
      __1640.w = (__1641.w+__1642.w);
    Y_local[__1639.x] = __1640.x;
    Y_local[__1639.y] = __1640.y;
    Y_local[__1639.z] = __1640.z;
    Y_local[__1639.w] = __1640.w;
    int4 __1645 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1646;
      float4 __1647 = make_float4(Y_local[__1645.x],Y_local[__1645.y],Y_local[__1645.z],Y_local[__1645.w]);
      float4 __1648;
        float4 __1649 = A_shared_dyn_local[0];
        float4 __1650 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1648.x = (__1649.x*__1650.x);
        __1648.y = (__1649.y*__1650.y);
        __1648.z = (__1649.z*__1650.z);
        __1648.w = (__1649.w*__1650.w);
      __1646.x = (__1647.x+__1648.x);
      __1646.y = (__1647.y+__1648.y);
      __1646.z = (__1647.z+__1648.z);
      __1646.w = (__1647.w+__1648.w);
    Y_local[__1645.x] = __1646.x;
    Y_local[__1645.y] = __1646.y;
    Y_local[__1645.z] = __1646.z;
    Y_local[__1645.w] = __1646.w;
    int4 __1651 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1652;
      float4 __1653 = make_float4(Y_local[__1651.x],Y_local[__1651.y],Y_local[__1651.z],Y_local[__1651.w]);
      float4 __1654;
        float4 __1655 = A_shared_dyn_local[1];
        float4 __1656 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1654.x = (__1655.x*__1656.x);
        __1654.y = (__1655.y*__1656.y);
        __1654.z = (__1655.z*__1656.z);
        __1654.w = (__1655.w*__1656.w);
      __1652.x = (__1653.x+__1654.x);
      __1652.y = (__1653.y+__1654.y);
      __1652.z = (__1653.z+__1654.z);
      __1652.w = (__1653.w+__1654.w);
    Y_local[__1651.x] = __1652.x;
    Y_local[__1651.y] = __1652.y;
    Y_local[__1651.z] = __1652.z;
    Y_local[__1651.w] = __1652.w;
    int4 __1657 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1658;
      float4 __1659 = make_float4(Y_local[__1657.x],Y_local[__1657.y],Y_local[__1657.z],Y_local[__1657.w]);
      float4 __1660;
        float4 __1661 = A_shared_dyn_local[0];
        float4 __1662 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1660.x = (__1661.x*__1662.x);
        __1660.y = (__1661.y*__1662.y);
        __1660.z = (__1661.z*__1662.z);
        __1660.w = (__1661.w*__1662.w);
      __1658.x = (__1659.x+__1660.x);
      __1658.y = (__1659.y+__1660.y);
      __1658.z = (__1659.z+__1660.z);
      __1658.w = (__1659.w+__1660.w);
    Y_local[__1657.x] = __1658.x;
    Y_local[__1657.y] = __1658.y;
    Y_local[__1657.z] = __1658.z;
    Y_local[__1657.w] = __1658.w;
    int4 __1663 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1664;
      float4 __1665 = make_float4(Y_local[__1663.x],Y_local[__1663.y],Y_local[__1663.z],Y_local[__1663.w]);
      float4 __1666;
        float4 __1667 = A_shared_dyn_local[1];
        float4 __1668 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1666.x = (__1667.x*__1668.x);
        __1666.y = (__1667.y*__1668.y);
        __1666.z = (__1667.z*__1668.z);
        __1666.w = (__1667.w*__1668.w);
      __1664.x = (__1665.x+__1666.x);
      __1664.y = (__1665.y+__1666.y);
      __1664.z = (__1665.z+__1666.z);
      __1664.w = (__1665.w+__1666.w);
    Y_local[__1663.x] = __1664.x;
    Y_local[__1663.y] = __1664.y;
    Y_local[__1663.z] = __1664.z;
    Y_local[__1663.w] = __1664.w;
    int4 __1669 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1670;
      float4 __1671 = make_float4(Y_local[__1669.x],Y_local[__1669.y],Y_local[__1669.z],Y_local[__1669.w]);
      float4 __1672;
        float4 __1673 = A_shared_dyn_local[0];
        float4 __1674 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1672.x = (__1673.x*__1674.x);
        __1672.y = (__1673.y*__1674.y);
        __1672.z = (__1673.z*__1674.z);
        __1672.w = (__1673.w*__1674.w);
      __1670.x = (__1671.x+__1672.x);
      __1670.y = (__1671.y+__1672.y);
      __1670.z = (__1671.z+__1672.z);
      __1670.w = (__1671.w+__1672.w);
    Y_local[__1669.x] = __1670.x;
    Y_local[__1669.y] = __1670.y;
    Y_local[__1669.z] = __1670.z;
    Y_local[__1669.w] = __1670.w;
    int4 __1675 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1676;
      float4 __1677 = make_float4(Y_local[__1675.x],Y_local[__1675.y],Y_local[__1675.z],Y_local[__1675.w]);
      float4 __1678;
        float4 __1679 = A_shared_dyn_local[1];
        float4 __1680 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1678.x = (__1679.x*__1680.x);
        __1678.y = (__1679.y*__1680.y);
        __1678.z = (__1679.z*__1680.z);
        __1678.w = (__1679.w*__1680.w);
      __1676.x = (__1677.x+__1678.x);
      __1676.y = (__1677.y+__1678.y);
      __1676.z = (__1677.z+__1678.z);
      __1676.w = (__1677.w+__1678.w);
    Y_local[__1675.x] = __1676.x;
    Y_local[__1675.y] = __1676.y;
    Y_local[__1675.z] = __1676.z;
    Y_local[__1675.w] = __1676.w;
  for (int ax0_0_36 = 0; ax0_0_36 < 2; ++ax0_0_36) {
    A_shared_dyn_local[ax0_0_36] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_36 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 768));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 4096) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1681 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1682;
      float4 __1683 = make_float4(Y_local[__1681.x],Y_local[__1681.y],Y_local[__1681.z],Y_local[__1681.w]);
      float4 __1684;
        float4 __1685 = A_shared_dyn_local[2];
        float4 __1686 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1684.x = (__1685.x*__1686.x);
        __1684.y = (__1685.y*__1686.y);
        __1684.z = (__1685.z*__1686.z);
        __1684.w = (__1685.w*__1686.w);
      __1682.x = (__1683.x+__1684.x);
      __1682.y = (__1683.y+__1684.y);
      __1682.z = (__1683.z+__1684.z);
      __1682.w = (__1683.w+__1684.w);
    Y_local[__1681.x] = __1682.x;
    Y_local[__1681.y] = __1682.y;
    Y_local[__1681.z] = __1682.z;
    Y_local[__1681.w] = __1682.w;
    int4 __1687 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1688;
      float4 __1689 = make_float4(Y_local[__1687.x],Y_local[__1687.y],Y_local[__1687.z],Y_local[__1687.w]);
      float4 __1690;
        float4 __1691 = A_shared_dyn_local[3];
        float4 __1692 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1690.x = (__1691.x*__1692.x);
        __1690.y = (__1691.y*__1692.y);
        __1690.z = (__1691.z*__1692.z);
        __1690.w = (__1691.w*__1692.w);
      __1688.x = (__1689.x+__1690.x);
      __1688.y = (__1689.y+__1690.y);
      __1688.z = (__1689.z+__1690.z);
      __1688.w = (__1689.w+__1690.w);
    Y_local[__1687.x] = __1688.x;
    Y_local[__1687.y] = __1688.y;
    Y_local[__1687.z] = __1688.z;
    Y_local[__1687.w] = __1688.w;
    int4 __1693 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1694;
      float4 __1695 = make_float4(Y_local[__1693.x],Y_local[__1693.y],Y_local[__1693.z],Y_local[__1693.w]);
      float4 __1696;
        float4 __1697 = A_shared_dyn_local[2];
        float4 __1698 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1696.x = (__1697.x*__1698.x);
        __1696.y = (__1697.y*__1698.y);
        __1696.z = (__1697.z*__1698.z);
        __1696.w = (__1697.w*__1698.w);
      __1694.x = (__1695.x+__1696.x);
      __1694.y = (__1695.y+__1696.y);
      __1694.z = (__1695.z+__1696.z);
      __1694.w = (__1695.w+__1696.w);
    Y_local[__1693.x] = __1694.x;
    Y_local[__1693.y] = __1694.y;
    Y_local[__1693.z] = __1694.z;
    Y_local[__1693.w] = __1694.w;
    int4 __1699 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1700;
      float4 __1701 = make_float4(Y_local[__1699.x],Y_local[__1699.y],Y_local[__1699.z],Y_local[__1699.w]);
      float4 __1702;
        float4 __1703 = A_shared_dyn_local[3];
        float4 __1704 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1702.x = (__1703.x*__1704.x);
        __1702.y = (__1703.y*__1704.y);
        __1702.z = (__1703.z*__1704.z);
        __1702.w = (__1703.w*__1704.w);
      __1700.x = (__1701.x+__1702.x);
      __1700.y = (__1701.y+__1702.y);
      __1700.z = (__1701.z+__1702.z);
      __1700.w = (__1701.w+__1702.w);
    Y_local[__1699.x] = __1700.x;
    Y_local[__1699.y] = __1700.y;
    Y_local[__1699.z] = __1700.z;
    Y_local[__1699.w] = __1700.w;
    int4 __1705 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1706;
      float4 __1707 = make_float4(Y_local[__1705.x],Y_local[__1705.y],Y_local[__1705.z],Y_local[__1705.w]);
      float4 __1708;
        float4 __1709 = A_shared_dyn_local[2];
        float4 __1710 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1708.x = (__1709.x*__1710.x);
        __1708.y = (__1709.y*__1710.y);
        __1708.z = (__1709.z*__1710.z);
        __1708.w = (__1709.w*__1710.w);
      __1706.x = (__1707.x+__1708.x);
      __1706.y = (__1707.y+__1708.y);
      __1706.z = (__1707.z+__1708.z);
      __1706.w = (__1707.w+__1708.w);
    Y_local[__1705.x] = __1706.x;
    Y_local[__1705.y] = __1706.y;
    Y_local[__1705.z] = __1706.z;
    Y_local[__1705.w] = __1706.w;
    int4 __1711 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1712;
      float4 __1713 = make_float4(Y_local[__1711.x],Y_local[__1711.y],Y_local[__1711.z],Y_local[__1711.w]);
      float4 __1714;
        float4 __1715 = A_shared_dyn_local[3];
        float4 __1716 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1714.x = (__1715.x*__1716.x);
        __1714.y = (__1715.y*__1716.y);
        __1714.z = (__1715.z*__1716.z);
        __1714.w = (__1715.w*__1716.w);
      __1712.x = (__1713.x+__1714.x);
      __1712.y = (__1713.y+__1714.y);
      __1712.z = (__1713.z+__1714.z);
      __1712.w = (__1713.w+__1714.w);
    Y_local[__1711.x] = __1712.x;
    Y_local[__1711.y] = __1712.y;
    Y_local[__1711.z] = __1712.z;
    Y_local[__1711.w] = __1712.w;
    int4 __1717 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1718;
      float4 __1719 = make_float4(Y_local[__1717.x],Y_local[__1717.y],Y_local[__1717.z],Y_local[__1717.w]);
      float4 __1720;
        float4 __1721 = A_shared_dyn_local[2];
        float4 __1722 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1720.x = (__1721.x*__1722.x);
        __1720.y = (__1721.y*__1722.y);
        __1720.z = (__1721.z*__1722.z);
        __1720.w = (__1721.w*__1722.w);
      __1718.x = (__1719.x+__1720.x);
      __1718.y = (__1719.y+__1720.y);
      __1718.z = (__1719.z+__1720.z);
      __1718.w = (__1719.w+__1720.w);
    Y_local[__1717.x] = __1718.x;
    Y_local[__1717.y] = __1718.y;
    Y_local[__1717.z] = __1718.z;
    Y_local[__1717.w] = __1718.w;
    int4 __1723 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1724;
      float4 __1725 = make_float4(Y_local[__1723.x],Y_local[__1723.y],Y_local[__1723.z],Y_local[__1723.w]);
      float4 __1726;
        float4 __1727 = A_shared_dyn_local[3];
        float4 __1728 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1726.x = (__1727.x*__1728.x);
        __1726.y = (__1727.y*__1728.y);
        __1726.z = (__1727.z*__1728.z);
        __1726.w = (__1727.w*__1728.w);
      __1724.x = (__1725.x+__1726.x);
      __1724.y = (__1725.y+__1726.y);
      __1724.z = (__1725.z+__1726.z);
      __1724.w = (__1725.w+__1726.w);
    Y_local[__1723.x] = __1724.x;
    Y_local[__1723.y] = __1724.y;
    Y_local[__1723.z] = __1724.z;
    Y_local[__1723.w] = __1724.w;
  for (int ax0_0_37 = 0; ax0_0_37 < 2; ++ax0_0_37) {
    A_shared_dyn_local[(ax0_0_37 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_37 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 832));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 4224) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1729 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1730;
      float4 __1731 = make_float4(Y_local[__1729.x],Y_local[__1729.y],Y_local[__1729.z],Y_local[__1729.w]);
      float4 __1732;
        float4 __1733 = A_shared_dyn_local[0];
        float4 __1734 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1732.x = (__1733.x*__1734.x);
        __1732.y = (__1733.y*__1734.y);
        __1732.z = (__1733.z*__1734.z);
        __1732.w = (__1733.w*__1734.w);
      __1730.x = (__1731.x+__1732.x);
      __1730.y = (__1731.y+__1732.y);
      __1730.z = (__1731.z+__1732.z);
      __1730.w = (__1731.w+__1732.w);
    Y_local[__1729.x] = __1730.x;
    Y_local[__1729.y] = __1730.y;
    Y_local[__1729.z] = __1730.z;
    Y_local[__1729.w] = __1730.w;
    int4 __1735 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1736;
      float4 __1737 = make_float4(Y_local[__1735.x],Y_local[__1735.y],Y_local[__1735.z],Y_local[__1735.w]);
      float4 __1738;
        float4 __1739 = A_shared_dyn_local[1];
        float4 __1740 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1738.x = (__1739.x*__1740.x);
        __1738.y = (__1739.y*__1740.y);
        __1738.z = (__1739.z*__1740.z);
        __1738.w = (__1739.w*__1740.w);
      __1736.x = (__1737.x+__1738.x);
      __1736.y = (__1737.y+__1738.y);
      __1736.z = (__1737.z+__1738.z);
      __1736.w = (__1737.w+__1738.w);
    Y_local[__1735.x] = __1736.x;
    Y_local[__1735.y] = __1736.y;
    Y_local[__1735.z] = __1736.z;
    Y_local[__1735.w] = __1736.w;
    int4 __1741 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1742;
      float4 __1743 = make_float4(Y_local[__1741.x],Y_local[__1741.y],Y_local[__1741.z],Y_local[__1741.w]);
      float4 __1744;
        float4 __1745 = A_shared_dyn_local[0];
        float4 __1746 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1744.x = (__1745.x*__1746.x);
        __1744.y = (__1745.y*__1746.y);
        __1744.z = (__1745.z*__1746.z);
        __1744.w = (__1745.w*__1746.w);
      __1742.x = (__1743.x+__1744.x);
      __1742.y = (__1743.y+__1744.y);
      __1742.z = (__1743.z+__1744.z);
      __1742.w = (__1743.w+__1744.w);
    Y_local[__1741.x] = __1742.x;
    Y_local[__1741.y] = __1742.y;
    Y_local[__1741.z] = __1742.z;
    Y_local[__1741.w] = __1742.w;
    int4 __1747 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1748;
      float4 __1749 = make_float4(Y_local[__1747.x],Y_local[__1747.y],Y_local[__1747.z],Y_local[__1747.w]);
      float4 __1750;
        float4 __1751 = A_shared_dyn_local[1];
        float4 __1752 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1750.x = (__1751.x*__1752.x);
        __1750.y = (__1751.y*__1752.y);
        __1750.z = (__1751.z*__1752.z);
        __1750.w = (__1751.w*__1752.w);
      __1748.x = (__1749.x+__1750.x);
      __1748.y = (__1749.y+__1750.y);
      __1748.z = (__1749.z+__1750.z);
      __1748.w = (__1749.w+__1750.w);
    Y_local[__1747.x] = __1748.x;
    Y_local[__1747.y] = __1748.y;
    Y_local[__1747.z] = __1748.z;
    Y_local[__1747.w] = __1748.w;
    int4 __1753 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1754;
      float4 __1755 = make_float4(Y_local[__1753.x],Y_local[__1753.y],Y_local[__1753.z],Y_local[__1753.w]);
      float4 __1756;
        float4 __1757 = A_shared_dyn_local[0];
        float4 __1758 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1756.x = (__1757.x*__1758.x);
        __1756.y = (__1757.y*__1758.y);
        __1756.z = (__1757.z*__1758.z);
        __1756.w = (__1757.w*__1758.w);
      __1754.x = (__1755.x+__1756.x);
      __1754.y = (__1755.y+__1756.y);
      __1754.z = (__1755.z+__1756.z);
      __1754.w = (__1755.w+__1756.w);
    Y_local[__1753.x] = __1754.x;
    Y_local[__1753.y] = __1754.y;
    Y_local[__1753.z] = __1754.z;
    Y_local[__1753.w] = __1754.w;
    int4 __1759 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1760;
      float4 __1761 = make_float4(Y_local[__1759.x],Y_local[__1759.y],Y_local[__1759.z],Y_local[__1759.w]);
      float4 __1762;
        float4 __1763 = A_shared_dyn_local[1];
        float4 __1764 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1762.x = (__1763.x*__1764.x);
        __1762.y = (__1763.y*__1764.y);
        __1762.z = (__1763.z*__1764.z);
        __1762.w = (__1763.w*__1764.w);
      __1760.x = (__1761.x+__1762.x);
      __1760.y = (__1761.y+__1762.y);
      __1760.z = (__1761.z+__1762.z);
      __1760.w = (__1761.w+__1762.w);
    Y_local[__1759.x] = __1760.x;
    Y_local[__1759.y] = __1760.y;
    Y_local[__1759.z] = __1760.z;
    Y_local[__1759.w] = __1760.w;
    int4 __1765 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1766;
      float4 __1767 = make_float4(Y_local[__1765.x],Y_local[__1765.y],Y_local[__1765.z],Y_local[__1765.w]);
      float4 __1768;
        float4 __1769 = A_shared_dyn_local[0];
        float4 __1770 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1768.x = (__1769.x*__1770.x);
        __1768.y = (__1769.y*__1770.y);
        __1768.z = (__1769.z*__1770.z);
        __1768.w = (__1769.w*__1770.w);
      __1766.x = (__1767.x+__1768.x);
      __1766.y = (__1767.y+__1768.y);
      __1766.z = (__1767.z+__1768.z);
      __1766.w = (__1767.w+__1768.w);
    Y_local[__1765.x] = __1766.x;
    Y_local[__1765.y] = __1766.y;
    Y_local[__1765.z] = __1766.z;
    Y_local[__1765.w] = __1766.w;
    int4 __1771 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1772;
      float4 __1773 = make_float4(Y_local[__1771.x],Y_local[__1771.y],Y_local[__1771.z],Y_local[__1771.w]);
      float4 __1774;
        float4 __1775 = A_shared_dyn_local[1];
        float4 __1776 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1774.x = (__1775.x*__1776.x);
        __1774.y = (__1775.y*__1776.y);
        __1774.z = (__1775.z*__1776.z);
        __1774.w = (__1775.w*__1776.w);
      __1772.x = (__1773.x+__1774.x);
      __1772.y = (__1773.y+__1774.y);
      __1772.z = (__1773.z+__1774.z);
      __1772.w = (__1773.w+__1774.w);
    Y_local[__1771.x] = __1772.x;
    Y_local[__1771.y] = __1772.y;
    Y_local[__1771.z] = __1772.z;
    Y_local[__1771.w] = __1772.w;
  for (int ax0_0_38 = 0; ax0_0_38 < 2; ++ax0_0_38) {
    A_shared_dyn_local[ax0_0_38] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_38 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 896));
  }
  *(float4*)(B_shared_dyn_local + 0) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 4352) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1777 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1778;
      float4 __1779 = make_float4(Y_local[__1777.x],Y_local[__1777.y],Y_local[__1777.z],Y_local[__1777.w]);
      float4 __1780;
        float4 __1781 = A_shared_dyn_local[2];
        float4 __1782 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1780.x = (__1781.x*__1782.x);
        __1780.y = (__1781.y*__1782.y);
        __1780.z = (__1781.z*__1782.z);
        __1780.w = (__1781.w*__1782.w);
      __1778.x = (__1779.x+__1780.x);
      __1778.y = (__1779.y+__1780.y);
      __1778.z = (__1779.z+__1780.z);
      __1778.w = (__1779.w+__1780.w);
    Y_local[__1777.x] = __1778.x;
    Y_local[__1777.y] = __1778.y;
    Y_local[__1777.z] = __1778.z;
    Y_local[__1777.w] = __1778.w;
    int4 __1783 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1784;
      float4 __1785 = make_float4(Y_local[__1783.x],Y_local[__1783.y],Y_local[__1783.z],Y_local[__1783.w]);
      float4 __1786;
        float4 __1787 = A_shared_dyn_local[3];
        float4 __1788 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1786.x = (__1787.x*__1788.x);
        __1786.y = (__1787.y*__1788.y);
        __1786.z = (__1787.z*__1788.z);
        __1786.w = (__1787.w*__1788.w);
      __1784.x = (__1785.x+__1786.x);
      __1784.y = (__1785.y+__1786.y);
      __1784.z = (__1785.z+__1786.z);
      __1784.w = (__1785.w+__1786.w);
    Y_local[__1783.x] = __1784.x;
    Y_local[__1783.y] = __1784.y;
    Y_local[__1783.z] = __1784.z;
    Y_local[__1783.w] = __1784.w;
    int4 __1789 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1790;
      float4 __1791 = make_float4(Y_local[__1789.x],Y_local[__1789.y],Y_local[__1789.z],Y_local[__1789.w]);
      float4 __1792;
        float4 __1793 = A_shared_dyn_local[2];
        float4 __1794 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1792.x = (__1793.x*__1794.x);
        __1792.y = (__1793.y*__1794.y);
        __1792.z = (__1793.z*__1794.z);
        __1792.w = (__1793.w*__1794.w);
      __1790.x = (__1791.x+__1792.x);
      __1790.y = (__1791.y+__1792.y);
      __1790.z = (__1791.z+__1792.z);
      __1790.w = (__1791.w+__1792.w);
    Y_local[__1789.x] = __1790.x;
    Y_local[__1789.y] = __1790.y;
    Y_local[__1789.z] = __1790.z;
    Y_local[__1789.w] = __1790.w;
    int4 __1795 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1796;
      float4 __1797 = make_float4(Y_local[__1795.x],Y_local[__1795.y],Y_local[__1795.z],Y_local[__1795.w]);
      float4 __1798;
        float4 __1799 = A_shared_dyn_local[3];
        float4 __1800 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1798.x = (__1799.x*__1800.x);
        __1798.y = (__1799.y*__1800.y);
        __1798.z = (__1799.z*__1800.z);
        __1798.w = (__1799.w*__1800.w);
      __1796.x = (__1797.x+__1798.x);
      __1796.y = (__1797.y+__1798.y);
      __1796.z = (__1797.z+__1798.z);
      __1796.w = (__1797.w+__1798.w);
    Y_local[__1795.x] = __1796.x;
    Y_local[__1795.y] = __1796.y;
    Y_local[__1795.z] = __1796.z;
    Y_local[__1795.w] = __1796.w;
    int4 __1801 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1802;
      float4 __1803 = make_float4(Y_local[__1801.x],Y_local[__1801.y],Y_local[__1801.z],Y_local[__1801.w]);
      float4 __1804;
        float4 __1805 = A_shared_dyn_local[2];
        float4 __1806 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1804.x = (__1805.x*__1806.x);
        __1804.y = (__1805.y*__1806.y);
        __1804.z = (__1805.z*__1806.z);
        __1804.w = (__1805.w*__1806.w);
      __1802.x = (__1803.x+__1804.x);
      __1802.y = (__1803.y+__1804.y);
      __1802.z = (__1803.z+__1804.z);
      __1802.w = (__1803.w+__1804.w);
    Y_local[__1801.x] = __1802.x;
    Y_local[__1801.y] = __1802.y;
    Y_local[__1801.z] = __1802.z;
    Y_local[__1801.w] = __1802.w;
    int4 __1807 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1808;
      float4 __1809 = make_float4(Y_local[__1807.x],Y_local[__1807.y],Y_local[__1807.z],Y_local[__1807.w]);
      float4 __1810;
        float4 __1811 = A_shared_dyn_local[3];
        float4 __1812 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1810.x = (__1811.x*__1812.x);
        __1810.y = (__1811.y*__1812.y);
        __1810.z = (__1811.z*__1812.z);
        __1810.w = (__1811.w*__1812.w);
      __1808.x = (__1809.x+__1810.x);
      __1808.y = (__1809.y+__1810.y);
      __1808.z = (__1809.z+__1810.z);
      __1808.w = (__1809.w+__1810.w);
    Y_local[__1807.x] = __1808.x;
    Y_local[__1807.y] = __1808.y;
    Y_local[__1807.z] = __1808.z;
    Y_local[__1807.w] = __1808.w;
    int4 __1813 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1814;
      float4 __1815 = make_float4(Y_local[__1813.x],Y_local[__1813.y],Y_local[__1813.z],Y_local[__1813.w]);
      float4 __1816;
        float4 __1817 = A_shared_dyn_local[2];
        float4 __1818 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1816.x = (__1817.x*__1818.x);
        __1816.y = (__1817.y*__1818.y);
        __1816.z = (__1817.z*__1818.z);
        __1816.w = (__1817.w*__1818.w);
      __1814.x = (__1815.x+__1816.x);
      __1814.y = (__1815.y+__1816.y);
      __1814.z = (__1815.z+__1816.z);
      __1814.w = (__1815.w+__1816.w);
    Y_local[__1813.x] = __1814.x;
    Y_local[__1813.y] = __1814.y;
    Y_local[__1813.z] = __1814.z;
    Y_local[__1813.w] = __1814.w;
    int4 __1819 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1820;
      float4 __1821 = make_float4(Y_local[__1819.x],Y_local[__1819.y],Y_local[__1819.z],Y_local[__1819.w]);
      float4 __1822;
        float4 __1823 = A_shared_dyn_local[3];
        float4 __1824 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1822.x = (__1823.x*__1824.x);
        __1822.y = (__1823.y*__1824.y);
        __1822.z = (__1823.z*__1824.z);
        __1822.w = (__1823.w*__1824.w);
      __1820.x = (__1821.x+__1822.x);
      __1820.y = (__1821.y+__1822.y);
      __1820.z = (__1821.z+__1822.z);
      __1820.w = (__1821.w+__1822.w);
    Y_local[__1819.x] = __1820.x;
    Y_local[__1819.y] = __1820.y;
    Y_local[__1819.z] = __1820.z;
    Y_local[__1819.w] = __1820.w;
  for (int ax0_0_39 = 0; ax0_0_39 < 2; ++ax0_0_39) {
    A_shared_dyn_local[(ax0_0_39 + 2)] = *(float4*)(((float*)buf_dyn_shmem) + ((((((((int)threadIdx.x) / 48) * 32) + (ax0_0_39 * 16)) + (((((int)threadIdx.x) % 48) / 24) * 8)) + ((((int)threadIdx.x) & 1) * 4)) + 960));
  }
  *(float4*)(B_shared_dyn_local + 4) = *(float4*)(((float*)buf_dyn_shmem) + (((((((((((int)blockIdx.x) & 7) * 48) + (((((int)threadIdx.x) % 24) >> 1) * 4)) >> 6) * 64) + (((((int)threadIdx.x) & 3) >> 1) * 32)) + (((((((int)blockIdx.x) & 7) * 6) + ((((int)threadIdx.x) % 24) >> 2)) & 7) * 4)) + 4480) - ((((((int)blockIdx.x) & 7) * 48) >> 6) * 64)));
    int4 __1825 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1826;
      float4 __1827 = make_float4(Y_local[__1825.x],Y_local[__1825.y],Y_local[__1825.z],Y_local[__1825.w]);
      float4 __1828;
        float4 __1829 = A_shared_dyn_local[0];
        float4 __1830 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1828.x = (__1829.x*__1830.x);
        __1828.y = (__1829.y*__1830.y);
        __1828.z = (__1829.z*__1830.z);
        __1828.w = (__1829.w*__1830.w);
      __1826.x = (__1827.x+__1828.x);
      __1826.y = (__1827.y+__1828.y);
      __1826.z = (__1827.z+__1828.z);
      __1826.w = (__1827.w+__1828.w);
    Y_local[__1825.x] = __1826.x;
    Y_local[__1825.y] = __1826.y;
    Y_local[__1825.z] = __1826.z;
    Y_local[__1825.w] = __1826.w;
    int4 __1831 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1832;
      float4 __1833 = make_float4(Y_local[__1831.x],Y_local[__1831.y],Y_local[__1831.z],Y_local[__1831.w]);
      float4 __1834;
        float4 __1835 = A_shared_dyn_local[1];
        float4 __1836 = make_float4(B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0], B_shared_dyn_local[0]);
        __1834.x = (__1835.x*__1836.x);
        __1834.y = (__1835.y*__1836.y);
        __1834.z = (__1835.z*__1836.z);
        __1834.w = (__1835.w*__1836.w);
      __1832.x = (__1833.x+__1834.x);
      __1832.y = (__1833.y+__1834.y);
      __1832.z = (__1833.z+__1834.z);
      __1832.w = (__1833.w+__1834.w);
    Y_local[__1831.x] = __1832.x;
    Y_local[__1831.y] = __1832.y;
    Y_local[__1831.z] = __1832.z;
    Y_local[__1831.w] = __1832.w;
    int4 __1837 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1838;
      float4 __1839 = make_float4(Y_local[__1837.x],Y_local[__1837.y],Y_local[__1837.z],Y_local[__1837.w]);
      float4 __1840;
        float4 __1841 = A_shared_dyn_local[0];
        float4 __1842 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1840.x = (__1841.x*__1842.x);
        __1840.y = (__1841.y*__1842.y);
        __1840.z = (__1841.z*__1842.z);
        __1840.w = (__1841.w*__1842.w);
      __1838.x = (__1839.x+__1840.x);
      __1838.y = (__1839.y+__1840.y);
      __1838.z = (__1839.z+__1840.z);
      __1838.w = (__1839.w+__1840.w);
    Y_local[__1837.x] = __1838.x;
    Y_local[__1837.y] = __1838.y;
    Y_local[__1837.z] = __1838.z;
    Y_local[__1837.w] = __1838.w;
    int4 __1843 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1844;
      float4 __1845 = make_float4(Y_local[__1843.x],Y_local[__1843.y],Y_local[__1843.z],Y_local[__1843.w]);
      float4 __1846;
        float4 __1847 = A_shared_dyn_local[1];
        float4 __1848 = make_float4(B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1], B_shared_dyn_local[1]);
        __1846.x = (__1847.x*__1848.x);
        __1846.y = (__1847.y*__1848.y);
        __1846.z = (__1847.z*__1848.z);
        __1846.w = (__1847.w*__1848.w);
      __1844.x = (__1845.x+__1846.x);
      __1844.y = (__1845.y+__1846.y);
      __1844.z = (__1845.z+__1846.z);
      __1844.w = (__1845.w+__1846.w);
    Y_local[__1843.x] = __1844.x;
    Y_local[__1843.y] = __1844.y;
    Y_local[__1843.z] = __1844.z;
    Y_local[__1843.w] = __1844.w;
    int4 __1849 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1850;
      float4 __1851 = make_float4(Y_local[__1849.x],Y_local[__1849.y],Y_local[__1849.z],Y_local[__1849.w]);
      float4 __1852;
        float4 __1853 = A_shared_dyn_local[0];
        float4 __1854 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1852.x = (__1853.x*__1854.x);
        __1852.y = (__1853.y*__1854.y);
        __1852.z = (__1853.z*__1854.z);
        __1852.w = (__1853.w*__1854.w);
      __1850.x = (__1851.x+__1852.x);
      __1850.y = (__1851.y+__1852.y);
      __1850.z = (__1851.z+__1852.z);
      __1850.w = (__1851.w+__1852.w);
    Y_local[__1849.x] = __1850.x;
    Y_local[__1849.y] = __1850.y;
    Y_local[__1849.z] = __1850.z;
    Y_local[__1849.w] = __1850.w;
    int4 __1855 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1856;
      float4 __1857 = make_float4(Y_local[__1855.x],Y_local[__1855.y],Y_local[__1855.z],Y_local[__1855.w]);
      float4 __1858;
        float4 __1859 = A_shared_dyn_local[1];
        float4 __1860 = make_float4(B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2], B_shared_dyn_local[2]);
        __1858.x = (__1859.x*__1860.x);
        __1858.y = (__1859.y*__1860.y);
        __1858.z = (__1859.z*__1860.z);
        __1858.w = (__1859.w*__1860.w);
      __1856.x = (__1857.x+__1858.x);
      __1856.y = (__1857.y+__1858.y);
      __1856.z = (__1857.z+__1858.z);
      __1856.w = (__1857.w+__1858.w);
    Y_local[__1855.x] = __1856.x;
    Y_local[__1855.y] = __1856.y;
    Y_local[__1855.z] = __1856.z;
    Y_local[__1855.w] = __1856.w;
    int4 __1861 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1862;
      float4 __1863 = make_float4(Y_local[__1861.x],Y_local[__1861.y],Y_local[__1861.z],Y_local[__1861.w]);
      float4 __1864;
        float4 __1865 = A_shared_dyn_local[0];
        float4 __1866 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1864.x = (__1865.x*__1866.x);
        __1864.y = (__1865.y*__1866.y);
        __1864.z = (__1865.z*__1866.z);
        __1864.w = (__1865.w*__1866.w);
      __1862.x = (__1863.x+__1864.x);
      __1862.y = (__1863.y+__1864.y);
      __1862.z = (__1863.z+__1864.z);
      __1862.w = (__1863.w+__1864.w);
    Y_local[__1861.x] = __1862.x;
    Y_local[__1861.y] = __1862.y;
    Y_local[__1861.z] = __1862.z;
    Y_local[__1861.w] = __1862.w;
    int4 __1867 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1868;
      float4 __1869 = make_float4(Y_local[__1867.x],Y_local[__1867.y],Y_local[__1867.z],Y_local[__1867.w]);
      float4 __1870;
        float4 __1871 = A_shared_dyn_local[1];
        float4 __1872 = make_float4(B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3], B_shared_dyn_local[3]);
        __1870.x = (__1871.x*__1872.x);
        __1870.y = (__1871.y*__1872.y);
        __1870.z = (__1871.z*__1872.z);
        __1870.w = (__1871.w*__1872.w);
      __1868.x = (__1869.x+__1870.x);
      __1868.y = (__1869.y+__1870.y);
      __1868.z = (__1869.z+__1870.z);
      __1868.w = (__1869.w+__1870.w);
    Y_local[__1867.x] = __1868.x;
    Y_local[__1867.y] = __1868.y;
    Y_local[__1867.z] = __1868.z;
    Y_local[__1867.w] = __1868.w;
    int4 __1873 = make_int4((0)+(4*0), (0)+(4*1), (0)+(4*2), (0)+(4*3));
    float4 __1874;
      float4 __1875 = make_float4(Y_local[__1873.x],Y_local[__1873.y],Y_local[__1873.z],Y_local[__1873.w]);
      float4 __1876;
        float4 __1877 = A_shared_dyn_local[2];
        float4 __1878 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1876.x = (__1877.x*__1878.x);
        __1876.y = (__1877.y*__1878.y);
        __1876.z = (__1877.z*__1878.z);
        __1876.w = (__1877.w*__1878.w);
      __1874.x = (__1875.x+__1876.x);
      __1874.y = (__1875.y+__1876.y);
      __1874.z = (__1875.z+__1876.z);
      __1874.w = (__1875.w+__1876.w);
    Y_local[__1873.x] = __1874.x;
    Y_local[__1873.y] = __1874.y;
    Y_local[__1873.z] = __1874.z;
    Y_local[__1873.w] = __1874.w;
    int4 __1879 = make_int4((16)+(4*0), (16)+(4*1), (16)+(4*2), (16)+(4*3));
    float4 __1880;
      float4 __1881 = make_float4(Y_local[__1879.x],Y_local[__1879.y],Y_local[__1879.z],Y_local[__1879.w]);
      float4 __1882;
        float4 __1883 = A_shared_dyn_local[3];
        float4 __1884 = make_float4(B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4], B_shared_dyn_local[4]);
        __1882.x = (__1883.x*__1884.x);
        __1882.y = (__1883.y*__1884.y);
        __1882.z = (__1883.z*__1884.z);
        __1882.w = (__1883.w*__1884.w);
      __1880.x = (__1881.x+__1882.x);
      __1880.y = (__1881.y+__1882.y);
      __1880.z = (__1881.z+__1882.z);
      __1880.w = (__1881.w+__1882.w);
    Y_local[__1879.x] = __1880.x;
    Y_local[__1879.y] = __1880.y;
    Y_local[__1879.z] = __1880.z;
    Y_local[__1879.w] = __1880.w;
    int4 __1885 = make_int4((1)+(4*0), (1)+(4*1), (1)+(4*2), (1)+(4*3));
    float4 __1886;
      float4 __1887 = make_float4(Y_local[__1885.x],Y_local[__1885.y],Y_local[__1885.z],Y_local[__1885.w]);
      float4 __1888;
        float4 __1889 = A_shared_dyn_local[2];
        float4 __1890 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1888.x = (__1889.x*__1890.x);
        __1888.y = (__1889.y*__1890.y);
        __1888.z = (__1889.z*__1890.z);
        __1888.w = (__1889.w*__1890.w);
      __1886.x = (__1887.x+__1888.x);
      __1886.y = (__1887.y+__1888.y);
      __1886.z = (__1887.z+__1888.z);
      __1886.w = (__1887.w+__1888.w);
    Y_local[__1885.x] = __1886.x;
    Y_local[__1885.y] = __1886.y;
    Y_local[__1885.z] = __1886.z;
    Y_local[__1885.w] = __1886.w;
    int4 __1891 = make_int4((17)+(4*0), (17)+(4*1), (17)+(4*2), (17)+(4*3));
    float4 __1892;
      float4 __1893 = make_float4(Y_local[__1891.x],Y_local[__1891.y],Y_local[__1891.z],Y_local[__1891.w]);
      float4 __1894;
        float4 __1895 = A_shared_dyn_local[3];
        float4 __1896 = make_float4(B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5], B_shared_dyn_local[5]);
        __1894.x = (__1895.x*__1896.x);
        __1894.y = (__1895.y*__1896.y);
        __1894.z = (__1895.z*__1896.z);
        __1894.w = (__1895.w*__1896.w);
      __1892.x = (__1893.x+__1894.x);
      __1892.y = (__1893.y+__1894.y);
      __1892.z = (__1893.z+__1894.z);
      __1892.w = (__1893.w+__1894.w);
    Y_local[__1891.x] = __1892.x;
    Y_local[__1891.y] = __1892.y;
    Y_local[__1891.z] = __1892.z;
    Y_local[__1891.w] = __1892.w;
    int4 __1897 = make_int4((2)+(4*0), (2)+(4*1), (2)+(4*2), (2)+(4*3));
    float4 __1898;
      float4 __1899 = make_float4(Y_local[__1897.x],Y_local[__1897.y],Y_local[__1897.z],Y_local[__1897.w]);
      float4 __1900;
        float4 __1901 = A_shared_dyn_local[2];
        float4 __1902 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1900.x = (__1901.x*__1902.x);
        __1900.y = (__1901.y*__1902.y);
        __1900.z = (__1901.z*__1902.z);
        __1900.w = (__1901.w*__1902.w);
      __1898.x = (__1899.x+__1900.x);
      __1898.y = (__1899.y+__1900.y);
      __1898.z = (__1899.z+__1900.z);
      __1898.w = (__1899.w+__1900.w);
    Y_local[__1897.x] = __1898.x;
    Y_local[__1897.y] = __1898.y;
    Y_local[__1897.z] = __1898.z;
    Y_local[__1897.w] = __1898.w;
    int4 __1903 = make_int4((18)+(4*0), (18)+(4*1), (18)+(4*2), (18)+(4*3));
    float4 __1904;
      float4 __1905 = make_float4(Y_local[__1903.x],Y_local[__1903.y],Y_local[__1903.z],Y_local[__1903.w]);
      float4 __1906;
        float4 __1907 = A_shared_dyn_local[3];
        float4 __1908 = make_float4(B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6], B_shared_dyn_local[6]);
        __1906.x = (__1907.x*__1908.x);
        __1906.y = (__1907.y*__1908.y);
        __1906.z = (__1907.z*__1908.z);
        __1906.w = (__1907.w*__1908.w);
      __1904.x = (__1905.x+__1906.x);
      __1904.y = (__1905.y+__1906.y);
      __1904.z = (__1905.z+__1906.z);
      __1904.w = (__1905.w+__1906.w);
    Y_local[__1903.x] = __1904.x;
    Y_local[__1903.y] = __1904.y;
    Y_local[__1903.z] = __1904.z;
    Y_local[__1903.w] = __1904.w;
    int4 __1909 = make_int4((3)+(4*0), (3)+(4*1), (3)+(4*2), (3)+(4*3));
    float4 __1910;
      float4 __1911 = make_float4(Y_local[__1909.x],Y_local[__1909.y],Y_local[__1909.z],Y_local[__1909.w]);
      float4 __1912;
        float4 __1913 = A_shared_dyn_local[2];
        float4 __1914 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1912.x = (__1913.x*__1914.x);
        __1912.y = (__1913.y*__1914.y);
        __1912.z = (__1913.z*__1914.z);
        __1912.w = (__1913.w*__1914.w);
      __1910.x = (__1911.x+__1912.x);
      __1910.y = (__1911.y+__1912.y);
      __1910.z = (__1911.z+__1912.z);
      __1910.w = (__1911.w+__1912.w);
    Y_local[__1909.x] = __1910.x;
    Y_local[__1909.y] = __1910.y;
    Y_local[__1909.z] = __1910.z;
    Y_local[__1909.w] = __1910.w;
    int4 __1915 = make_int4((19)+(4*0), (19)+(4*1), (19)+(4*2), (19)+(4*3));
    float4 __1916;
      float4 __1917 = make_float4(Y_local[__1915.x],Y_local[__1915.y],Y_local[__1915.z],Y_local[__1915.w]);
      float4 __1918;
        float4 __1919 = A_shared_dyn_local[3];
        float4 __1920 = make_float4(B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7], B_shared_dyn_local[7]);
        __1918.x = (__1919.x*__1920.x);
        __1918.y = (__1919.y*__1920.y);
        __1918.z = (__1919.z*__1920.z);
        __1918.w = (__1919.w*__1920.w);
      __1916.x = (__1917.x+__1918.x);
      __1916.y = (__1917.y+__1918.y);
      __1916.z = (__1917.z+__1918.z);
      __1916.w = (__1917.w+__1918.w);
    Y_local[__1915.x] = __1916.x;
    Y_local[__1915.y] = __1916.y;
    Y_local[__1915.z] = __1916.z;
    Y_local[__1915.w] = __1916.w;
  *(float4*)(Y + ((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4))) = *(float4*)(Y_local + 0);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 384)) = *(float4*)(Y_local + 4);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 768)) = *(float4*)(Y_local + 8);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 1152)) = *(float4*)(Y_local + 12);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 1536)) = *(float4*)(Y_local + 16);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 1920)) = *(float4*)(Y_local + 20);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 2304)) = *(float4*)(Y_local + 24);
  *(float4*)(Y + (((((((((int)blockIdx.x) >> 3) * 24576) + ((((int)threadIdx.x) / 24) * 6144)) + ((((int)threadIdx.x) & 1) * 3072)) + ((((int)blockIdx.x) & 7) * 48)) + (((((int)threadIdx.x) % 24) >> 1) * 4)) + 2688)) = *(float4*)(Y_local + 28);
}


