# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((1536, 1536), "float16"), B: T.Buffer((1536, 1536), "float16"), Y: T.Buffer((1536, 1536), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        blockIdx_y = T.launch_thread("blockIdx.y", 4)
        Y_reindex_shared_dyn_wmma_accumulator = T.allocate([3072], "float16", "wmma.accumulator")
        A_reindex_shared_dyn = T.allocate([13824], "float16", "shared.dyn")
        B_reindex_shared_dyn = T.allocate([6656], "float16", "shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.allocate([1024], "float16", "wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.allocate([768], "float16", "wmma.matrix_b")
        blockIdx_x = T.launch_thread("blockIdx.x", 32)
        threadIdx_y = T.launch_thread("threadIdx.y", 6)
        threadIdx_x = T.launch_thread("threadIdx.x", 32)
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 0, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 1, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 2, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 3, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 4, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 5, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 6, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 7, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 8, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 9, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 10, T.float32(0))
        T.tvm_fill_fragment(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 11, T.float32(0))
        for ax2_0_0 in range(24):
            A_reindex_shared_dyn_1 = T.decl_buffer((192, 64), "float16", data=A_reindex_shared_dyn, strides=(72, 1), scope="shared.dyn")
            B_reindex_shared_dyn_1 = T.decl_buffer((64, 96), "float16", data=B_reindex_shared_dyn, strides=(104, 1), scope="shared.dyn")
            A_reindex_shared_dyn_2 = T.Buffer((13824,), "float16", data=A_reindex_shared_dyn, scope="shared.dyn")
            A_1 = T.Buffer((2359296,), "float16", data=A.data)
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2:threadIdx_y * 72 + threadIdx_x * 2 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 432:threadIdx_y * 72 + threadIdx_x * 2 + 432 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 9216:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 9216 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 864:threadIdx_y * 72 + threadIdx_x * 2 + 864 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 18432:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 18432 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 1296:threadIdx_y * 72 + threadIdx_x * 2 + 1296 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 27648:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 27648 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 1728:threadIdx_y * 72 + threadIdx_x * 2 + 1728 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 36864:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 36864 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 2160:threadIdx_y * 72 + threadIdx_x * 2 + 2160 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 46080:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 46080 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 2592:threadIdx_y * 72 + threadIdx_x * 2 + 2592 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 55296:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 55296 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 3024:threadIdx_y * 72 + threadIdx_x * 2 + 3024 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 64512:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 64512 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 3456:threadIdx_y * 72 + threadIdx_x * 2 + 3456 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 73728 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 3888:threadIdx_y * 72 + threadIdx_x * 2 + 3888 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 82944:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 82944 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 4320:threadIdx_y * 72 + threadIdx_x * 2 + 4320 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 92160:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 92160 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 4752:threadIdx_y * 72 + threadIdx_x * 2 + 4752 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 101376:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 101376 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 5184:threadIdx_y * 72 + threadIdx_x * 2 + 5184 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 110592:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 110592 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 5616:threadIdx_y * 72 + threadIdx_x * 2 + 5616 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 119808:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 119808 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 6048:threadIdx_y * 72 + threadIdx_x * 2 + 6048 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 129024:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 129024 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 6480:threadIdx_y * 72 + threadIdx_x * 2 + 6480 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 138240:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 138240 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 6912:threadIdx_y * 72 + threadIdx_x * 2 + 6912 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 147456:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 147456 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 7344:threadIdx_y * 72 + threadIdx_x * 2 + 7344 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 156672:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 156672 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 7776:threadIdx_y * 72 + threadIdx_x * 2 + 7776 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 165888:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 165888 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 8208:threadIdx_y * 72 + threadIdx_x * 2 + 8208 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 175104:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 175104 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 8640:threadIdx_y * 72 + threadIdx_x * 2 + 8640 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 184320:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 184320 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 9072:threadIdx_y * 72 + threadIdx_x * 2 + 9072 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 193536:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 193536 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 9504:threadIdx_y * 72 + threadIdx_x * 2 + 9504 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 202752:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 202752 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 9936:threadIdx_y * 72 + threadIdx_x * 2 + 9936 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 211968:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 211968 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 10368:threadIdx_y * 72 + threadIdx_x * 2 + 10368 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 221184:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 221184 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 10800:threadIdx_y * 72 + threadIdx_x * 2 + 10800 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 230400:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 230400 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 11232:threadIdx_y * 72 + threadIdx_x * 2 + 11232 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 239616:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 239616 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 11664:threadIdx_y * 72 + threadIdx_x * 2 + 11664 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 248832:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 248832 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 12096:threadIdx_y * 72 + threadIdx_x * 2 + 12096 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 258048:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 258048 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 12528:threadIdx_y * 72 + threadIdx_x * 2 + 12528 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 267264:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 267264 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 12960:threadIdx_y * 72 + threadIdx_x * 2 + 12960 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 276480:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 276480 + 2]
            A_reindex_shared_dyn_2[threadIdx_y * 72 + threadIdx_x * 2 + 13392:threadIdx_y * 72 + threadIdx_x * 2 + 13392 + 2] = A_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 285696:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y * 1536 + ax2_0_0 * 64 + threadIdx_x * 2 + 285696 + 2]
            B_reindex_shared_dyn_2 = T.Buffer((6656,), "float16", data=B_reindex_shared_dyn, scope="shared.dyn")
            B_1 = T.Buffer((2359296,), "float16", data=B.data)
            B_reindex_shared_dyn_2[(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96:(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 8] = B_1[ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96:ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 8]
            B_reindex_shared_dyn_2[(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 1664:(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 1664 + 8] = B_1[ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 24576:ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 24576 + 8]
            B_reindex_shared_dyn_2[(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 3328:(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 3328 + 8] = B_1[ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 49152:ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 49152 + 8]
            B_reindex_shared_dyn_2[(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 4992:(threadIdx_y * 256 + threadIdx_x * 8) // 96 * 104 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 4992 + 8] = B_1[ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 73728:ax2_0_0 * 98304 + (threadIdx_y * 256 + threadIdx_x * 8) // 96 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 8) % 96 + 73728 + 8]
            for ax2_0_1 in range(4):
                T.tvm_load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a, 16, 16, 16, 0, T.tvm_access_ptr(T.type_annotation("float16"), A_reindex_shared_dyn, threadIdx_y // 2 * 4608 + ax2_0_1 * 16, 1152, 1), 72, "row_major")
                T.tvm_load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a, 16, 16, 16, 1, T.tvm_access_ptr(T.type_annotation("float16"), A_reindex_shared_dyn, threadIdx_y // 2 * 4608 + ax2_0_1 * 16 + 1152, 1152, 1), 72, "row_major")
                T.tvm_load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a, 16, 16, 16, 2, T.tvm_access_ptr(T.type_annotation("float16"), A_reindex_shared_dyn, threadIdx_y // 2 * 4608 + ax2_0_1 * 16 + 2304, 1152, 1), 72, "row_major")
                T.tvm_load_matrix_sync(A_reindex_shared_dyn_wmma_matrix_a, 16, 16, 16, 3, T.tvm_access_ptr(T.type_annotation("float16"), A_reindex_shared_dyn, threadIdx_y // 2 * 4608 + ax2_0_1 * 16 + 3456, 1152, 1), 72, "row_major")
                T.tvm_load_matrix_sync(B_reindex_shared_dyn_wmma_matrix_b, 16, 16, 16, 0, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, ax2_0_1 * 1664 + threadIdx_y % 2 * 48, 1664, 1), 104, "row_major")
                T.tvm_load_matrix_sync(B_reindex_shared_dyn_wmma_matrix_b, 16, 16, 16, 1, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, ax2_0_1 * 1664 + threadIdx_y % 2 * 48 + 16, 1664, 1), 104, "row_major")
                T.tvm_load_matrix_sync(B_reindex_shared_dyn_wmma_matrix_b, 16, 16, 16, 2, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, ax2_0_1 * 1664 + threadIdx_y % 2 * 48 + 32, 1664, 1), 104, "row_major")
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 0, A_reindex_shared_dyn_wmma_matrix_a, 0, B_reindex_shared_dyn_wmma_matrix_b, 0, Y_reindex_shared_dyn_wmma_accumulator, 0)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 1, A_reindex_shared_dyn_wmma_matrix_a, 0, B_reindex_shared_dyn_wmma_matrix_b, 1, Y_reindex_shared_dyn_wmma_accumulator, 1)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 2, A_reindex_shared_dyn_wmma_matrix_a, 0, B_reindex_shared_dyn_wmma_matrix_b, 2, Y_reindex_shared_dyn_wmma_accumulator, 2)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 3, A_reindex_shared_dyn_wmma_matrix_a, 1, B_reindex_shared_dyn_wmma_matrix_b, 0, Y_reindex_shared_dyn_wmma_accumulator, 3)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 4, A_reindex_shared_dyn_wmma_matrix_a, 1, B_reindex_shared_dyn_wmma_matrix_b, 1, Y_reindex_shared_dyn_wmma_accumulator, 4)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 5, A_reindex_shared_dyn_wmma_matrix_a, 1, B_reindex_shared_dyn_wmma_matrix_b, 2, Y_reindex_shared_dyn_wmma_accumulator, 5)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 6, A_reindex_shared_dyn_wmma_matrix_a, 2, B_reindex_shared_dyn_wmma_matrix_b, 0, Y_reindex_shared_dyn_wmma_accumulator, 6)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 7, A_reindex_shared_dyn_wmma_matrix_a, 2, B_reindex_shared_dyn_wmma_matrix_b, 1, Y_reindex_shared_dyn_wmma_accumulator, 7)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 8, A_reindex_shared_dyn_wmma_matrix_a, 2, B_reindex_shared_dyn_wmma_matrix_b, 2, Y_reindex_shared_dyn_wmma_accumulator, 8)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 9, A_reindex_shared_dyn_wmma_matrix_a, 3, B_reindex_shared_dyn_wmma_matrix_b, 0, Y_reindex_shared_dyn_wmma_accumulator, 9)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 10, A_reindex_shared_dyn_wmma_matrix_a, 3, B_reindex_shared_dyn_wmma_matrix_b, 1, Y_reindex_shared_dyn_wmma_accumulator, 10)
                T.tvm_mma_sync(Y_reindex_shared_dyn_wmma_accumulator, 11, A_reindex_shared_dyn_wmma_matrix_a, 3, B_reindex_shared_dyn_wmma_matrix_b, 2, Y_reindex_shared_dyn_wmma_accumulator, 11)
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 0, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 1, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 256, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 2, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 512, 256, 2), 16, "row_major")
        Y_1 = T.Buffer((2359296,), "float16", data=Y.data)
        B_reindex_shared_dyn_1 = T.Buffer((4608,), "float16", data=B_reindex_shared_dyn, scope="shared.dyn")
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2:threadIdx_y * 64 + threadIdx_x * 2 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 384:threadIdx_y * 64 + threadIdx_x * 2 + 384 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 48:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 48 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 768:threadIdx_y * 64 + threadIdx_x * 2 + 768 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1152:threadIdx_y * 64 + threadIdx_x * 2 + 1152 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 98304:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 98304 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1536:threadIdx_y * 64 + threadIdx_x * 2 + 1536 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1920:threadIdx_y * 64 + threadIdx_x * 2 + 1920 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 48:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 48 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2304:threadIdx_y * 64 + threadIdx_x * 2 + 2304 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2688:threadIdx_y * 64 + threadIdx_x * 2 + 2688 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 196608:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 196608 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3072:threadIdx_y * 64 + threadIdx_x * 2 + 3072 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3456:threadIdx_y * 64 + threadIdx_x * 2 + 3456 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 48:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 48 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3840:threadIdx_y * 64 + threadIdx_x * 2 + 3840 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 4224:threadIdx_y * 64 + threadIdx_x * 2 + 4224 + 2]
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 3, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 4, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 256, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 5, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 512, 256, 2), 16, "row_major")
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2:threadIdx_y * 64 + threadIdx_x * 2 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 384:threadIdx_y * 64 + threadIdx_x * 2 + 384 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24624:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24624 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 768:threadIdx_y * 64 + threadIdx_x * 2 + 768 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1152:threadIdx_y * 64 + threadIdx_x * 2 + 1152 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 122880:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 122880 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1536:threadIdx_y * 64 + threadIdx_x * 2 + 1536 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1920:threadIdx_y * 64 + threadIdx_x * 2 + 1920 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24624:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24624 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2304:threadIdx_y * 64 + threadIdx_x * 2 + 2304 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2688:threadIdx_y * 64 + threadIdx_x * 2 + 2688 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 221184:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 221184 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3072:threadIdx_y * 64 + threadIdx_x * 2 + 3072 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3456:threadIdx_y * 64 + threadIdx_x * 2 + 3456 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24624:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 24624 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3840:threadIdx_y * 64 + threadIdx_x * 2 + 3840 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 24576:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 24576 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 4224:threadIdx_y * 64 + threadIdx_x * 2 + 4224 + 2]
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 6, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 7, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 256, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 8, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 512, 256, 2), 16, "row_major")
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2:threadIdx_y * 64 + threadIdx_x * 2 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 384:threadIdx_y * 64 + threadIdx_x * 2 + 384 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49200:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49200 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 768:threadIdx_y * 64 + threadIdx_x * 2 + 768 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1152:threadIdx_y * 64 + threadIdx_x * 2 + 1152 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 147456:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 147456 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1536:threadIdx_y * 64 + threadIdx_x * 2 + 1536 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1920:threadIdx_y * 64 + threadIdx_x * 2 + 1920 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49200:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49200 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2304:threadIdx_y * 64 + threadIdx_x * 2 + 2304 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2688:threadIdx_y * 64 + threadIdx_x * 2 + 2688 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 245760:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 245760 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3072:threadIdx_y * 64 + threadIdx_x * 2 + 3072 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3456:threadIdx_y * 64 + threadIdx_x * 2 + 3456 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49200:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 49200 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3840:threadIdx_y * 64 + threadIdx_x * 2 + 3840 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 49152:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 49152 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 4224:threadIdx_y * 64 + threadIdx_x * 2 + 4224 + 2]
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 9, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 10, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 256, 256, 2), 16, "row_major")
        T.tvm_store_matrix_sync(Y_reindex_shared_dyn_wmma_accumulator, 16, 16, 16, 11, T.tvm_access_ptr(T.type_annotation("float16"), B_reindex_shared_dyn, threadIdx_y * 768 + 512, 256, 2), 16, "row_major")
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2:threadIdx_y * 64 + threadIdx_x * 2 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 384:threadIdx_y * 64 + threadIdx_x * 2 + 384 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73776:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73776 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 768:threadIdx_y * 64 + threadIdx_x * 2 + 768 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1152:threadIdx_y * 64 + threadIdx_x * 2 + 1152 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 172032:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 172032 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1536:threadIdx_y * 64 + threadIdx_x * 2 + 1536 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 1920) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 1920:threadIdx_y * 64 + threadIdx_x * 2 + 1920 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73776:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2304) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73776 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2304:threadIdx_y * 64 + threadIdx_x * 2 + 2304 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 2688) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 2688:threadIdx_y * 64 + threadIdx_x * 2 + 2688 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 270336:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 270336 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3072:threadIdx_y * 64 + threadIdx_x * 2 + 3072 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3456) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 384) // 256 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3456:threadIdx_y * 64 + threadIdx_x * 2 + 3456 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73776:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 3840) // 1536 * 98304 + threadIdx_y % 4 * 6144 + threadIdx_x // 8 * 1536 + blockIdx_x % 16 * 96 + threadIdx_y // 4 * 16 + threadIdx_x % 8 * 2 + 73776 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 3840:threadIdx_y * 64 + threadIdx_x * 2 + 3840 + 2]
        Y_1[blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 73728:blockIdx_y * 589824 + blockIdx_x // 16 * 294912 + (threadIdx_y * 64 + threadIdx_x * 2 + 4224) // 1536 * 98304 + (threadIdx_y * 4 + threadIdx_x // 8 + 8) % 16 * 1536 + blockIdx_x % 16 * 96 + (threadIdx_y * 64 + threadIdx_x * 2 + 1152) // 256 * 16 + threadIdx_x % 8 * 2 + 73728 + 2] = B_reindex_shared_dyn_1[threadIdx_y * 64 + threadIdx_x * 2 + 4224:threadIdx_y * 64 + threadIdx_x * 2 + 4224 + 2]
